{"version":3,"sources":["dispatch/ThemeContext.jsx","clientUtils.js","dispatch/MapDot.jsx","api.jsx","dispatch/StatusContext.jsx","dispatch/Annotations.jsx","dispatch/DataProvider.jsx","dispatch/UserProvider.jsx","dispatch/mapOptions.js","dispatch/geojson.js","dispatch/Map.jsx","dispatch/ErrorBoundary.jsx","dispatch/AreaShape.jsx","dispatch/SvgDot.jsx","dispatch/Spark.jsx","dispatch/GroupByArea.jsx","dispatch/Topline.jsx","dispatch/Rehoboam.jsx","dispatch/Section.jsx","dispatch/Paragraph.jsx","dispatch/HistoryEvents.jsx","dispatch/History.jsx","groupingOptions.js","dispatch/TweetDetails.jsx","dispatch/Tweet.jsx","dispatch/TweetList.jsx","dispatch/TweetsActive.jsx","dispatch/TweetsMajor.jsx","dispatch/Sources.jsx","dispatch/Freshness.jsx","dispatch/Legend.jsx","dispatch/ThemeSwitch.jsx","dispatch/PunchCardAnnotations.jsx","dispatch/PunchCard.jsx","dispatch/Units.jsx","dispatch/DispatchAll.jsx","dispatch/TweetsForArea.jsx","dispatch/MultiLine.jsx","dispatch/Header.jsx","dispatch/AreaPageHeader.jsx","dispatch/neighborhoods.js","dispatch/DispatchArea.jsx","App.jsx","serviceWorker.js","index.tsx","dispatch/group.module.scss","dispatch/rehoboam.module.scss","dispatch/tweet.module.scss","dispatch/section.module.scss","dispatch/topline.module.scss","dispatch/history.module.scss","dispatch/paragraph.module.scss","dispatch/tweetdetails.module.scss","dispatch/chart.module.scss","dispatch/punchcard.module.scss","dispatch/map.module.scss","dispatch/spark.module.scss","dispatch/areashape.module.scss","dispatch/tweets.module.scss","dispatch/freshness.module.scss","dispatch/themeswitch.module.scss","dispatch/svg.module.scss","dispatch/units.module.scss","dispatch/dot.module.scss","dispatch/legend.module.scss"],"names":["ThemeContext","createContext","ThemeProvider","children","value","useState","theme","setTheme","useEffect","useTheme","Provider","id","className","intervalExtent","start","end","expandMinutes","expand","extent","d3timeMinute","offset","SeattleTimezone","timeFormatter","timestamp","format","timezone","timeFormatterUserTimezone","date","guess","timeFormatterHourAM","timeFormatterMonth","pacificMidnight","addDays","Date","startOf","add","every6Hours","map","h","months","Array","_","i","isActive","active","isExactlySev1","severity","isExactlySev2","getStyleProp","prop","appElement","document","getElementById","getComputedStyle","getPropertyValue","queryText","isPhone","window","matchMedia","matches","getContentWidth","innerWidth","Appearance","MapDot","coordinates","appearance","useContext","color","setColor","regularColor","activeColor","opacity","baseRadius","Circle","center","radius","fill","fillOpacity","stroke","weight","getStatus","a","getByAPI","getAnnotations","getHistory","getPunchCard","getTweetsForArea","area","queryParams","getTweetsForAreaMin","minimize","hiRes","getTweetsForAreaMinWeek","compare","getTweetsByArea","getTweetsMajor","getTweetsActive24","queryString","query","list","Object","keys","key","encodeURIComponent","join","api","fetch","length","headers","Accept","response","json","textureCurrent","texturePrevious","deepEqual","require","StatusContext","StatusProvider","status","setStatus","previousStatus","setPreviousStatus","console","log","delay","checkForUpdates","newStatus","env","title","intervalId","setInterval","clearInterval","useStatus","DataContext","currentInterval","dataset","intervals","previousInterval","DataProvider","filters","initialValue","filteredByArea","filteredByAreaMin","filteredByAreaMinWeek","activeOrMajorForArea","activeOrMajorByArea","groupedByArea","history","active24","major24","annotations","punchCard","setValue","mostRecentId","undefined","setFilteredByArea","setFilteredByAreaMin","setFilteredByAreaMinWeek","setActiveOrMajorForArea","setActiveOrMajorByArea","setGroupedByArea","setHistory","setActive24","setMajor24","setAnnotations","setPunchCard","shouldFetch","setShouldFetch","activeOrMajor","values","useTweets","UserContext","UserContextKeys","useUser","user","setUser","setSelection","UserProvider","mapOptions","phone","url","attribution","nhoodProp","nhoodFeaturesByArea","features","forEach","feature","properties","push","byArea","nhoods","featuresForArea","nhood","areas","geojson","areaProp","cityGeojson","city","lat","long","defaultCentroid","mapBounds","centroid","coords","geometry","flat","latExtent","d3extent","longExtent","d3mean","Map","encodedArea","decodeURIComponent","geojsonStyles","setGeojsonStyles","geoColor","geoBoundsColor","fillColor","strokeOpacity","bounds","typeFilter","selectedTweet","rendered","filter","zoom","defaultZoom","isSelectedDot","id_str","data","type","selectedIndex","findIndex","slice","appearanceFn","d","tileOptions","classnames","styles","container","minZoom","maxZoom","maxBounds","maxBoundsViscosity","zoomControl","TileLayer","GeoJSON","style","CRA_NAM","ErrorBoundary","props","state","hasError","error","errorInfo","this","React","Component","AreaShape","warn","geojsonStyle","attributionControl","dragging","keyboard","SvgDot","sev1","sev2","size","svgStyles","live","width","height","event","cx","cy","r","outer","Spark","showTotal","useCumulative","showPrevious","svgData","setSvgData","nowDot","setNowDot","xAxisRef","useRef","margin","top","bottom","left","right","svgWidth","svgHeight","accessor","cumulative","xExtent","bins","x1","trimmedExtent","yExtent","d3max","flatMap","xScale","d3scaleTime","domain","range","xAxis","d3axisBottom","scale","tickValues","tickFormat","tickSize","d3select","current","call","yScale","d3scaleLinear","line","d3line","curve","d3curveCardinal","tension","x","x0","y","newSvgData","path","reverse","lastBin","total","lastIndex","transform","axis","ref","now","Totals","totals","sum","empty","GroupByArea","totalsMap","setTotalsMap","displayedAreas","setDisplayedAreas","setData","compact","setCompact","display","replace","sortedData","sort","areaA","intervalsA","areaB","intervalsB","activeA","sev1A","sev2A","activeB","sev1B","sev2B","totalA","item","to","mini","Topline","text","totalContent","totalElement","stale","setStale","lastUpdated","setLastUpdated","midnight","topline","Rehoboam","svgPath","setSvgPath","circles","setCircles","setTotal","axisRef","mainRadius","binsHiRes","maxLength","radialData","fraction","Math","PI","toRadial","d3lineRadial","radialGen","angleScale","axisRadialInner","activeOrMajorValues","newCircles","theta","sin","cos","counter","svg","maincircle","events","Section","styleOption","edgeToEdge","styleDefault","section","content","subcontent","Paragraph","h1","paragraph","Annotations","currentStart","rectWidth","calloutWidth","scales","clipPaths","calloutsRef","regionsRef","regions","setRegions","annotationColor","textureColor","textures","lines","lighter","orientation","calloutFn","label","isEnd","sideX","hasNumericValue","sideY","callout","note","wrap","subject","nx","ny","dx","dy","calloutsSvgData","Boolean","d3annotation","d3annotationCalloutCircle","newRegions","isCurrent","texture","previous","annotation","clipPath","HistoryEvents","dayHeight","intervalCurrent","intervalPrevious","binsCurrent","binsLowRes","binsPrevious","mapper","count","stack","index","sev2Current","sev2Previous","toCirclesGen","side","toCirclesCurrent","toCirclesPrevious","circlesCurrent","circlesPrevious","closedPath","first","extraBottom","extraTop","History","setScales","setCurrentStart","paths","setPaths","setClipPaths","contentWidth","setContentWidth","yearWidth","maxBarWidth","annotationRectWidth","max","svgRef","yAxisRef","getCurrentInterval","getPreviousInterval","timeExtent","getIntervalExtent","b","yAxis","d3axisLeft","m","v","clone","toDate","everyMonth","ticks","lineCurrent","linePrevious","pathCurrent","pathPrevious","clipLineCurrent","clipLinePrevious","pixelOffset","invert","clipPathCurrent","clipPathPrevious","thisYear","moment","year","lastYear","historyStyles","years","AreaAccessors","ZipCode","zip","Area","neighborhoodGroup","AreaSecondary","neighborhood","Default","TweetDetails","tweet","address","units","unitsList","split","unitsStr","n","Number","parseFloat","toFixed","secondary","unit","TweetModes","Tweet","mode","isGreyedOut","isDetailed","time","detailed","greyedOut","onClick","newSelectedTweet","details","location","compass","description","TweetList","tweets","placeholder","selected","t","TweetsActive","TweetsMajor","Sources","sources","href","Freshness","formatTimezone","formatNoTimezone","seattle","seattleTZ","userTZ","same","displayUser","displaySeattle","Legend","legend","ThemeSwitch","themes","button","toLowerCase","PunchCardAnnotations","cellSize","availableWidth","day","hour2","align","PunchCardElements","elements","element","PunchCard","week","dayAggregates","hourAggregates","weekSpecs","setWeekSpecs","dayAggregateSpecs","setDayAggregateSpecs","hourAggregateSpecs","setHourAggregateSpecs","setTextures","min","horizontalRight","elementSize","texturesRef","d3a","avg","xDomain","xRange","d3scaleOrdinal","d3axisTop","d3axisRight","hour","iDay","iHour","color1","color2","color3","color4","texture1","texturesJS","strokeWidth","texture2","texture3","texture4","offsetValue","offsetMax","maxRadius","newWeekSpecs","sqrt","toAggregateElementSpec","newDayAggregateSpecs","spec","newHourAggregateSpecs","t1","t2","t3","t4","Units","unitKey","unitValue","DispatchAll","intro","lists","notes","TweetsForArea","filtered","MultiLine","showHeader","chartStyles","header","chart","Header","AreaPageHeader","neighborhoodsMap","setMap","newMap","useNeighborhoods","decodedArea","subareas","subarea","DispatchArea","paragraphStyles","link","App","StrictMode","default","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.ba7a3849.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n// import { getSunrise, getSunset } from \"sunrise-sunset-js\";\n// import { defaultCentroid } from \"./geojson\";\n// import { pacificMidnight } from \"../clientUtils\";\n\nexport const ThemeContext = createContext();\n\nconst useTheme = () => {\n  const [theme, setTheme] = useState(\"dark\"); // TODO\n\n  useEffect(() => {\n    // const midnight = new Date(pacificMidnight());\n    // const nextMidnight = new Date(pacificMidnight(1));\n    // const sunrise = getSunrise(...defaultCentroid, midnight);\n    // const sunset = getSunset(...defaultCentroid, nextMidnight);\n    // const now = new Date();\n    // const threshold = 0.5 * 3600 * 1000;\n    // if (\n    //   Math.abs(now - sunrise) < threshold ||\n    //   Math.abs(now - sunset) < threshold\n    // ) {\n    //   setTheme(\"dusk\");\n    // } else if (now < sunrise || now > sunset) {\n    //   setTheme(\"dark\");\n    // } else {\n    //   setTheme(\"light\");\n    // }\n  }, []);\n\n  return { theme, setTheme };\n};\n\nexport const ThemeProvider = ({ children }) => {\n  const value = useTheme();\n  const { theme } = value;\n  return (\n    <ThemeContext.Provider value={value}>\n      <div id=\"app\" className={theme}>\n        {children}\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n","import { timeMinute as d3timeMinute } from \"d3-time\";\nimport { tz as timezone } from \"moment-timezone\";\n\nexport const intervalExtent = ({ start, end }, expandMinutes = 0) =>\n  expand([start, end], expandMinutes);\n\nexport const trimmedExtent = ({ start, end, bins }) => [\n  start,\n  bins.length ? bins[bins.length - 1].x1 : end,\n];\n\n// move to server/histogram.js\nexport const expand = (extent, expandMinutes = 0) => [\n  d3timeMinute.offset(extent[0], -expandMinutes),\n  d3timeMinute.offset(extent[1], expandMinutes),\n];\n\n// see also fileUtils.js on server\nconst SeattleTimezone = \"America/Vancouver\";\nexport const timeFormatter = (timestamp, format = \"h:mm A\") =>\n  timezone(timestamp, SeattleTimezone).format(format);\n\nexport const timeFormatterUserTimezone = (date, format = \"h:mm A\") =>\n  timezone(date, timezone.guess()).format(format);\n\nexport const timeFormatterHourAM = (timestamp) =>\n  timeFormatter(timestamp, \"h A\");\n\nexport const timeFormatterMonth = (timestamp) =>\n  timeFormatter(+timestamp, \"MMM\");\n\nexport const timeFormatterMonthDay = (timestamp) =>\n  timeFormatter(+timestamp, \"MMM D\");\n\nexport const pacificMidnight = (addDays = 0) =>\n  +timezone(new Date(), SeattleTimezone).startOf(\"day\").add(addDays, \"days\");\n\nconst HOUR = 3600 * 1000;\nexport const every6Hours = (start) =>\n  [0, 6, 12, 18, 24].map((h) => start + h * HOUR); // Or use moment.add()\nconst months = [...new Array(12)].map((_, i) => i);\nexport const everyMonth = (start) => {\n  const m = timezone(start, SeattleTimezone);\n  return months.map((v) => m.clone().add(v, \"months\").toDate());\n};\n\nexport const isActive = ({ active }) => active;\nexport const isAtLeastSev1 = ({ severity }) => severity >= 1;\nexport const isAtLeastSev2 = ({ severity }) => severity >= 2;\nexport const isExactlySev1 = ({ severity }) => severity === 1;\nexport const isExactlySev2 = ({ severity }) => severity === 2;\n\nexport const getStyleProp = (prop) => {\n  const appElement = document.getElementById(\"app\");\n  const style = getComputedStyle(appElement);\n  return style.getPropertyValue(prop);\n};\n\nconst maxContentWidth = () => {\n  // const element = document.documentElement;\n  // const style = getComputedStyle(element);\n  // return style.getPropertyValue(\"--max-width\");\n\n  return 550; // For now must be synced manually with --max-width in section.module.scss\n};\nconst queryText = `(max-device-width: ${maxContentWidth()}px)`; // only screen and\n\nexport const isPhone = () =>\n  // TODO - move to Context?\n  window ? !!window.matchMedia(queryText).matches : true;\n\nexport const windowWidth = () => (window ? window.innerWidth : 0);\n\nexport const getContentWidth = () =>\n  isPhone() ? windowWidth() : maxContentWidth();\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { ThemeContext } from \"./ThemeContext\";\nimport { Circle } from \"react-leaflet\";\nimport { getStyleProp } from \"../clientUtils\";\n\nexport const Appearance = {\n  Normal: 0,\n  Dimmed: -1,\n  Highlighted: 1,\n};\n\nexport const MapDot = ({\n  coordinates,\n  severity = 0,\n  active = false,\n  appearance = Appearance.Normal,\n}) => {\n  const { theme } = useContext(ThemeContext);\n  const [color, setColor] = useState(null);\n\n  useEffect(() => {\n    const regularColor = getStyleProp(\"--graph-primary\");\n    const activeColor = getStyleProp(\"--live\");\n    setColor(active ? activeColor : regularColor);\n  }, [active, theme]);\n\n  // TODO - set opacity in CSS\n  let opacity = 0.5;\n  if (severity >= 1) {\n    opacity = 0.75;\n  }\n  if (active) {\n    opacity = 0.9;\n  }\n  if (appearance === Appearance.Dimmed) {\n    opacity = 0.3;\n  }\n  if (appearance === Appearance.Highlighted) {\n    opacity = 0.9;\n  }\n  const baseRadius = active ? 250 : 150;\n\n  if (!coordinates[0]) {\n    // console.warn(`Dot: coordinates = ${coordinates}`);\n    return null;\n  }\n\n  return (\n    <>\n      <Circle\n        center={coordinates}\n        radius={baseRadius}\n        color={color}\n        fill={true}\n        fillOpacity={opacity}\n        stroke={false}\n      ></Circle>\n      {severity >= 1 && (\n        <Circle\n          center={coordinates}\n          radius={baseRadius + 150}\n          weight={2}\n          color={color}\n          opacity={opacity}\n          fill={false}\n        ></Circle>\n      )}\n      {severity >= 2 && (\n        <Circle\n          center={coordinates}\n          radius={baseRadius + 300}\n          weight={2}\n          color={color}\n          opacity={opacity}\n          fill={false}\n        ></Circle>\n      )}\n    </>\n  );\n};\n","export async function getEnv() {\n  return getByAPI(\"env\");\n}\n\nexport async function getStatus() {\n  return getByAPI(`dispatch/status`);\n}\n\nexport async function getAnnotations() {\n  return getByAPI(`dispatch/history/annotations`);\n}\n\nexport async function getHistory() {\n  return getByAPI(`dispatch/history`);\n}\n\nexport async function getPunchCard() {\n  return getByAPI(`dispatch/punchcard`);\n}\n\nexport async function getTweetsForArea(area, queryParams) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsForAreaMin(\n  area,\n  queryParams = { minimize: true, hiRes: true }\n) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsForAreaMinWeek(\n  area,\n  queryParams = { minimize: true, compare: 6 }\n) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsByArea(queryParams) {\n  return getByAPI(`dispatch/tweets/byArea`, queryParams);\n}\n\nexport async function getTweetsMajor() {\n  return getByAPI(\"dispatch/tweets/major\");\n}\n\nexport async function getTweetsActive24() {\n  return getByAPI(\"dispatch/tweets/active24\");\n}\n\nexport async function getTweetsStatic() {\n  return getByAPI(\"dispatch/static\");\n}\n\nexport async function getTweetsSeattleGov() {\n  return getByAPI(\"dispatch/seattle-gov\");\n}\n\nconst queryString = (query = {}) => {\n  const list = Object.keys(query).map(\n    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(query[key])}`\n  );\n  return list.join(\"&\");\n};\n\nasync function getByAPI(api = \"\", queryParams = {}) {\n  const query = queryString(queryParams);\n  const response = await fetch(\n    `/api/${api}${query.length ? \"?\" : \"\"}${query}`,\n    {\n      // TODO - use axios?\n      headers: { Accept: \"application-json\" },\n    }\n  );\n\n  return response.json();\n}\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { getStatus } from \"../api\";\nconst deepEqual = require(\"fast-deep-equal/es6/react\");\n\nexport const StatusContext = createContext();\n\nconst useStatus = () => {\n  const [status, setStatus] = useState({});\n  const [previousStatus, setPreviousStatus] = useState({});\n\n  useEffect(() => {\n    const delay = 60 * 1000;\n\n    console.log(\n      `🟥 useStatus/starting checker @ every ${delay / 1000} seconds`\n    );\n    const checkForUpdates = async () => {\n      const newStatus = await getStatus();\n      // console.log(\n      //   `useStatus(${intervalId})/current status (next check in ${\n      //     delay / 1000\n      //   } sec)`,\n      //   newStatus\n      // );\n\n      if (!deepEqual(status, newStatus)) {\n        console.log(\"useStatus/setting new status:\", newStatus);\n        setPreviousStatus(status);\n        setStatus(newStatus);\n      }\n\n      if (status.env === \"development\") {\n        document.title = \"KSEA.live (dev)\";\n      }\n    };\n\n    checkForUpdates();\n    const intervalId = setInterval(checkForUpdates, delay);\n    return () => clearInterval(intervalId);\n  }, [status]);\n\n  return { status, previousStatus };\n};\n\nexport const StatusProvider = ({ children }) => {\n  const value = useStatus();\n  return (\n    <StatusContext.Provider value={value}>{children}</StatusContext.Provider>\n  );\n};\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { select as d3select } from \"d3-selection\";\nimport textures from \"textures\";\nimport {\n  annotation as d3annotation,\n  annotationCalloutCircle as d3annotationCalloutCircle,\n} from \"d3-svg-annotation\";\nimport { DataContext } from \"./DataProvider\";\n\nimport \"./annotations.scss\";\nimport { getStyleProp } from \"../clientUtils\";\n\nlet textureCurrent;\nlet texturePrevious;\n\nexport const Annotations = ({\n  currentStart,\n  rectWidth,\n  calloutWidth,\n  scales,\n  clipPaths,\n}) => {\n  const calloutsRef = useRef(null);\n  const regionsRef = useRef(null);\n  const { annotations } = useContext(DataContext);\n  const [regions, setRegions] = useState([]);\n\n  useEffect(() => {\n    if (!scales.length) {\n      return;\n    }\n\n    const [xScale, yScale] = scales;\n    const annotationColor = getStyleProp(\"--annotation\");\n    const textureColor = getStyleProp(\"--texture\");\n    texturePrevious = textures.lines().lighter().size(6).stroke(textureColor);\n    textureCurrent = textures\n      .lines()\n      .lighter()\n      .size(6)\n      .orientation(\"6/8\")\n      .stroke(textureColor);\n\n    d3select(regionsRef.current).call(textureCurrent);\n    d3select(regionsRef.current).call(texturePrevious);\n\n    const regionFn = ({ start, end, offset }, i) => {\n      if (!start || !end) {\n        return undefined;\n      }\n      const isCurrent = offset === 0;\n      const texture = isCurrent ? textureCurrent : texturePrevious;\n\n      return {\n        key: `${start}-${end}-${i}`,\n        x: xScale(0) - (isCurrent ? 0 : rectWidth),\n        y: yScale(start.timestamp + offset),\n        width: rectWidth,\n        height:\n          yScale(end.timestamp + offset) - yScale(start.timestamp + offset),\n        fill: texture.url(),\n      };\n    };\n\n    const calloutFn = ({\n      item: { title, label, value, timestamp },\n      offset,\n      scales: [xScale, yScale],\n      isEnd = false,\n    }) => {\n      if (!title && !label) {\n        return undefined;\n      }\n      const margin = 10;\n      const isPrevious = timestamp < currentStart;\n      const sideX = isPrevious ? -1 : 1;\n      const hasNumericValue = typeof value === \"number\";\n\n      const x = hasNumericValue ? xScale(value) : rectWidth;\n      const sideY = isEnd ? 1 : -1;\n      const y = yScale(timestamp + offset);\n      const callout = {\n        note: {\n          title,\n          label,\n          wrap: calloutWidth - margin - 5,\n        },\n        x: sideX * x,\n        y,\n        subject: {\n          radius: 6,\n        },\n        color: annotationColor,\n      };\n\n      if (hasNumericValue) {\n        callout.nx = sideX * (rectWidth + margin);\n        callout.ny = y;\n      } else {\n        callout.dx = sideX * margin;\n        callout.dy = sideY * margin;\n      }\n      return callout;\n    };\n\n    const calloutsFn = ({ start, end, offset }) => [\n      start ? calloutFn({ item: start, offset, scales }) : undefined,\n      end ? calloutFn({ item: end, offset, scales, isEnd: true }) : undefined,\n    ];\n\n    const calloutsSvgData = annotations.flatMap(calloutsFn).filter(Boolean);\n\n    const callout = d3annotation()\n      .annotations(calloutsSvgData)\n      .type(d3annotationCalloutCircle);\n\n    d3select(calloutsRef.current).call(callout);\n\n    const newRegions = annotations.map(regionFn).filter(Boolean);\n    setRegions(newRegions);\n  }, [annotations, calloutWidth, currentStart, rectWidth, scales]);\n\n  return (\n    <>\n      <defs>\n        <clipPath id=\"clippath\">\n          <path d={clipPaths.current} />\n          <path d={clipPaths.previous} />\n        </clipPath>\n      </defs>\n      <g ref={regionsRef}>\n        {regions.map((annotation) => (\n          <rect {...annotation} clipPath=\"url(#clippath)\" />\n        ))}\n      </g>\n      <g ref={calloutsRef} />\n    </>\n  );\n};\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\nimport {\n  getTweetsForArea,\n  getTweetsByArea,\n  getHistory,\n  getAnnotations,\n  getTweetsActive24,\n  getTweetsMajor,\n  getTweetsForAreaMin,\n  getTweetsForAreaMinWeek,\n  getPunchCard,\n} from \"../api\";\n\nimport { StatusContext } from \"./StatusContext\";\nconst deepEqual = require(\"fast-deep-equal/es6/react\");\n\nexport const DataContext = createContext();\n\nexport const currentInterval = (dataset) => dataset[0].intervals[0];\nexport const previousInterval = (dataset) => dataset[0].intervals[1];\n\nconst useTweets = (filters = {}) => {\n  const initialValue = {\n    filteredByArea: [],\n    filteredByAreaMin: [],\n    filteredByAreaMinWeek: [],\n    activeOrMajorForArea: [],\n    activeOrMajorByArea: [],\n    groupedByArea: [],\n    history: [],\n    active24: [],\n    major24: [],\n    annotations: [],\n    punchCard: {},\n    status: {},\n  };\n  const [value, setValue] = useState(initialValue);\n  const { status, previousStatus } = useContext(StatusContext);\n  const mostRecentId = previousStatus.mostRecentId\n    ? status.mostRecentId\n    : undefined;\n\n  if (mostRecentId) {\n    console.log(`useTweets/mostRecentId: ${mostRecentId}`);\n  }\n\n  const [filteredByArea, setFilteredByArea] = useState([]);\n  const [filteredByAreaMin, setFilteredByAreaMin] = useState([]);\n  const [filteredByAreaMinWeek, setFilteredByAreaMinWeek] = useState([]);\n  const [activeOrMajorForArea, setActiveOrMajorForArea] = useState([]);\n  const [activeOrMajorByArea, setActiveOrMajorByArea] = useState([]);\n  const [groupedByArea, setGroupedByArea] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [active24, setActive24] = useState([]);\n  const [major24, setMajor24] = useState([]);\n  const [annotations, setAnnotations] = useState([]);\n  const [punchCard, setPunchCard] = useState({});\n\n  const [shouldFetch, setShouldFetch] = useState(true);\n\n  useEffect(() => {\n    if (!deepEqual(status, previousStatus)) {\n      setShouldFetch(true);\n    }\n  }, [status, previousStatus]);\n\n  useEffect(() => {\n    if (!shouldFetch) {\n      console.log(\"PROVIDER/not fetching\");\n      return;\n    }\n    console.log(\"🟢 PROVIDER/fetching all data\");\n    setShouldFetch(false);\n\n    const area = filters.area || \"seattle\";\n\n    // console.log(\"PROVIDER/filters.area=\", area);\n    if (area === \"seattle\") {\n      (async () => {\n        setFilteredByAreaMin(await getTweetsForAreaMin(area));\n        setFilteredByAreaMinWeek(await getTweetsForAreaMinWeek(area));\n      })();\n    }\n\n    (async () => {\n      setFilteredByArea(await getTweetsForArea(area));\n    })();\n\n    (async () => {\n      setActiveOrMajorForArea(\n        await getTweetsForArea(area, { activeOrMajor: true })\n      );\n    })();\n\n    (async () => {\n      const response = await getTweetsActive24();\n      setActive24(response[0].intervals[0].values);\n    })();\n\n    (async () => {\n      const response = await getTweetsMajor();\n      setMajor24(response[0].intervals[0].values);\n    })();\n\n    (async () => {\n      setGroupedByArea(await getTweetsByArea());\n    })();\n\n    (async () => {\n      setActiveOrMajorByArea(await getTweetsByArea({ activeOrMajor: true }));\n    })();\n\n    (async () => {\n      setAnnotations(await getAnnotations());\n    })();\n\n    (async () => {\n      setPunchCard(await getPunchCard());\n    })();\n\n    (async () => {\n      setHistory(await getHistory(area));\n    })();\n  }, [filters.area, history.length, mostRecentId, shouldFetch]);\n\n  useEffect(() => {\n    setValue({\n      filteredByArea,\n      filteredByAreaMin,\n      filteredByAreaMinWeek,\n      groupedByArea,\n      history,\n      annotations,\n      punchCard,\n      active24,\n      major24,\n      activeOrMajorForArea,\n      activeOrMajorByArea,\n      status,\n    });\n  }, [\n    active24,\n    activeOrMajorByArea,\n    activeOrMajorForArea,\n    annotations,\n    filteredByArea,\n    filteredByAreaMin,\n    filteredByAreaMinWeek,\n    groupedByArea,\n    history,\n    major24,\n    punchCard,\n    status,\n  ]);\n\n  return value;\n};\n\nexport const DataProvider = ({ filters, children }) => {\n  const value = useTweets(filters);\n  return <DataContext.Provider value={value}>{children}</DataContext.Provider>;\n};\n","import React, { useState, createContext } from \"react\";\n\nexport const UserContext = createContext();\n\nexport const UserContextKeys = {\n  SelectedTweet: \"SelectedTweet\",\n  TypeFilter: \"TypeFilter\",\n};\n\nconst useUser = () => {\n  const [user, setUser] = useState({});\n\n  const setSelection = (key, value) => {\n    // console.log(`USER: ${key} -->`, value);\n    setUser({ ...user, [key]: value });\n  };\n\n  // useEffect(()=>{console.log('USER/useEffect')},[]);\n\n  return { user, setSelection };\n};\n\nexport const UserProvider = ({ children }) => {\n  return (\n    <UserContext.Provider value={useUser()}>{children}</UserContext.Provider>\n  );\n};\n","export const mapOptions = (theme, phone = false) => {\n  const query = phone ? \"?phone=true\" : \"\";\n  return {\n    url: `/api/dispatch/maps/{x}/{y}/{z}/${theme}${query}`,\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; jawg maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">openstreetmap</a> contributors',\n  };\n};\n","import { mean as d3mean, extent as d3extent } from \"d3-array\";\n// import zipCodes from \"./zip-codes.json\";\n// import nhoods from \"./nhoods.json\";\nimport nhoods from \"./2016_seattle_cra.json\";\nimport city from \"./2016_seattle_city.json\";\n\nconst nhoodProp = \"NEIGHBO\"; // TODO - import from server/groupby.js\n// const zipcodeProp = \"GEOID10\";\n\nconst byArea = (features, prop) => {\n  const map = {};\n  features.forEach((feature) => {\n    const key = feature.properties[prop];\n    const list = map[key] || [];\n    list.push(feature);\n    map[key] = list;\n  });\n  return map;\n};\n\nconst nhoodFeaturesByArea = byArea(nhoods.features, nhoodProp);\nconst featuresForNhood = (nhood) => nhoodFeaturesByArea[nhood];\n\n// const zipcodeFeaturesByArea = byArea(zipCodes.features, zipcodeProp);\n// const featuresForZip = (zip) => zipcodeFeaturesByArea[zip];\n\nexport const featuresForArea = featuresForNhood;\n\nexport const areas = {\n  geojson: nhoods,\n  areaProp: nhoodProp,\n};\n\nexport const cityGeojson = city;\n\nconst lat = 47.61485,\n  long = -122.32838;\nexport const defaultCentroid = [lat, long]; // approx. centroid of cityGeojson\n\nexport const mapBounds = [\n  [lat + 0.2, long - 0.3],\n  [lat - 0.2, long + 0.3],\n];\n\nexport const centroid = (features) => {\n  if (!features.length) {\n    return defaultCentroid;\n  }\n\n  let coords = features\n    .map(({ geometry: { coordinates } }) => coordinates)\n    .flat(2);\n  const latExtent = d3extent(coords, ([_, lat]) => lat);\n  const longExtent = d3extent(coords, ([long, _]) => long);\n  return [d3mean(latExtent), d3mean(longExtent)];\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Map as LeafletMap, TileLayer, GeoJSON } from \"react-leaflet\";\nimport { MapDot, Appearance } from \"./MapDot\";\nimport { DataContext, currentInterval } from \"./DataProvider\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\nimport { ThemeContext } from \"./ThemeContext\";\nimport { mapOptions } from \"./mapOptions\";\nimport { centroid, areas, cityGeojson, mapBounds } from \"./geojson\";\nimport classnames from \"classnames\";\nimport { isPhone, getStyleProp } from \"../clientUtils\";\nimport \"./leaflet.scss\";\nimport styles from \"./map.module.scss\";\n\nconst minZoom = 10,\n  maxZoom = 13,\n  defaultZoom = 11;\n\nexport const Map = ({ area: encodedArea }) => {\n\n  const area = encodedArea ? decodeURIComponent(encodedArea) : \"\";\n\n  const { user } = useContext(UserContext);\n  const { filteredByArea } = useContext(DataContext);\n  const { theme } = useContext(ThemeContext);\n  const [geojsonStyles, setGeojsonStyles] = useState({});\n\n  useEffect(() => {\n    const geoColor = getStyleProp(\"--geo\");\n    const geoBoundsColor = getStyleProp(\"--geo-bounds\");\n\n    const bounds = {\n      color: geoBoundsColor,\n      fillOpacity: 0,\n      strokeOpacity: 0.5,\n      weight: 4,\n    };\n    const active = {\n      color: geoColor,\n      fillColor: geoColor,\n      fillOpacity: 0.1,\n      strokeOpacity: 0.5,\n      weight: 2,\n    };\n    setGeojsonStyles({ active, bounds });\n  }, [theme]);\n\n  if (!filteredByArea.length) {\n    // console.log(\"MAP/no data\");\n    return null;\n  }\n\n  const { geojson, areaProp } = areas;\n\n  const typeFilter = user[UserContextKeys.TypeFilter];\n  const selectedTweet = user[UserContextKeys.SelectedTweet];\n\n  const renderFilter = ({ properties }) =>\n    area && properties[areaProp] === area;\n\n  const { features } = geojson;\n  const rendered = features.filter(renderFilter);\n\n  let zoom = defaultZoom;\n  if (area) {\n    zoom = defaultZoom + 1;\n  }\n  if (selectedTweet && selectedTweet.lat) {\n    zoom = maxZoom;\n  }\n\n  const center =\n    selectedTweet && selectedTweet.lat\n      ? [selectedTweet.lat, selectedTweet.long]\n      : area\n      ? centroid(rendered)\n      : centroid(cityGeojson.features);\n\n  const mapper = ({ id_str, lat, long, type, color, active, severity }) => ({\n    id_str,\n    lat,\n    long,\n    type,\n    color, // TODO - do not use\n    active,\n    severity,\n  });\n\n  const isSelectedDot = ({ id_str }) => selectedTweet.id_str === id_str;\n\n  // const importantOnTop = (a, b) => { return 0; }; // TODO\n\n  const interval = currentInterval(filteredByArea);\n  let data = interval.values\n    .map(mapper)\n    .filter(({ type }) => !typeFilter || typeFilter === type);\n  // .sort(importantOnTop);\n\n  if (selectedTweet) {\n    // Render selected dot last, so it appears on top\n    const selectedIndex = data.findIndex(isSelectedDot);\n\n    data =\n      selectedIndex === -1\n        ? []\n        : [\n            ...data.slice(0, selectedIndex),\n            ...data.slice(selectedIndex + 1),\n            data[selectedIndex],\n          ];\n  }\n\n  const appearanceFn = (d) => {\n    return selectedTweet && selectedTweet.lat\n      ? isSelectedDot(d)\n        ? Appearance.Highlighted\n        : Appearance.Dimmed\n      : Appearance.Normal;\n  };\n\n  // console.log(\n  //   `MAP/render area=${area || \"-\"}, zoom=${zoom}, selected:${\n  //     (selectedTweet || {}).id_str || \"-\"\n  //   }, features:${rendered.length}/${features.length}, dots:${\n  //     data.length\n  //   }, geo:${rendered.length}`\n  // );\n  const phone = isPhone();\n  const tileOptions = mapOptions(theme, phone);\n  const city = cityGeojson.features[0];\n\n  return (\n    <LeafletMap\n      className={classnames(styles.container, {\n        [styles.area]: area,\n        [styles.phone]: phone,\n      })}\n      center={center}\n      zoom={zoom}\n      minZoom={minZoom}\n      maxZoom={maxZoom}\n      maxBounds={mapBounds}\n      maxBoundsViscosity={0.6}\n      zoomControl={false}\n    >\n      <TileLayer {...tileOptions} />\n      {!area && (\n        <GeoJSON key={theme} data={city} style={geojsonStyles.bounds} />\n      )}\n      {rendered.map((feature) => (\n        <GeoJSON\n          key={feature.properties.CRA_NAM}\n          data={feature}\n          style={geojsonStyles.active}\n        />\n      ))}\n      {data.map((d) => (\n        <MapDot // TODO - group under a single container?\n          key={d.id_str}\n          coordinates={[d.lat, d.long]}\n          severity={d.severity}\n          appearance={appearanceFn(d)}\n          active={d.active}\n        />\n      ))}\n    </LeafletMap>\n  );\n};\n","import React from \"react\";\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"ErrorBoundary\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n","import React, { useContext } from \"react\";\nimport { Map as LeafletMap, TileLayer, GeoJSON } from \"react-leaflet\";\nimport { featuresForArea, centroid } from \"./geojson\";\nimport { mapOptions } from \"./mapOptions\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { isPhone, getStyleProp } from \"../clientUtils\";\nimport classnames from \"classnames\";\nimport styles from \"./areashape.module.scss\";\nimport { ThemeContext } from \"./ThemeContext\";\n\nexport const AreaShape = ({ area }) => {\n  const { theme } = useContext(ThemeContext);\n  const features = featuresForArea(area);\n  if (!features || !features.length) {\n    console.warn(\"AreaShape/no features for area\", area);\n    return null;\n  }\n\n  const geoColor = getStyleProp(\"--geo\");\n\n  const geojsonStyle = {\n    color: geoColor,\n    fillColor: geoColor,\n    fillOpacity: 0.1,\n    weight: 2,\n  };\n\n  const center = centroid(features);\n  const zoom = 10;\n  const phone = isPhone();\n  const tileOptions = mapOptions(theme, phone);\n\n  return (\n    <ErrorBoundary>\n      <LeafletMap\n        className={classnames(styles.container, { [styles.phone]: phone })}\n        center={center}\n        zoom={zoom}\n        minZoom={zoom}\n        maxZoom={zoom}\n        zoomControl={false}\n        attributionControl={false}\n        dragging={false}\n        keyboard={false}\n      >\n        <TileLayer {...tileOptions} />\n        <GeoJSON data={features} style={geojsonStyle} />\n      </LeafletMap>\n    </ErrorBoundary>\n  );\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport styles from \"./dot.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nexport const SvgDot = ({ radius = 0, active = false, sev1 = false, sev2 = false }) => {\n  const size = 20,\n    sev1Radius = 6.5,\n    sev2Radius = 9;\n  const baseRadius = radius || (4);\n\n  return (\n    <svg\n      className={classnames(styles.container, svgStyles.container, { [svgStyles.live]: active })}\n      width={size}\n      height={size}\n    >\n      <circle className={svgStyles.event} cx={size / 2} cy={size / 2} r={baseRadius} />\n      {(sev1 || sev2) && (\n        <circle className={svgStyles.outer}\n          cx={size / 2}\n          cy={size / 2}\n          r={sev1Radius}\n          fill=\"none\"\n        />\n      )}\n      {sev2 && (\n        <circle className={svgStyles.outer}\n          cx={size / 2}\n          cy={size / 2}\n          r={sev2Radius}\n          fill=\"none\"\n        />\n      )}\n    </svg>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { isPhone, trimmedExtent, timeFormatterHourAM } from \"../clientUtils\";\nimport classnames from \"classnames\";\n\nimport {\n  scaleLinear as d3scaleLinear,\n  scaleTime as d3scaleTime,\n} from \"d3-scale\";\nimport { max as d3max } from \"d3-array\";\nimport { line as d3line, curveCardinal as d3curveCardinal } from \"d3-shape\";\nimport { select as d3select } from \"d3-selection\";\nimport { axisBottom as d3axisBottom } from \"d3-axis\";\n\nimport styles from \"./spark.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nexport const Spark = ({\n  intervals = [],\n  showTotal,\n  useCumulative,\n  showPrevious,\n}) => {\n  const [svgData, setSvgData] = useState([]);\n  const [nowDot, setNowDot] = useState(null);\n  const xAxisRef = useRef(null);\n\n  const radius = 3;\n  const width = isPhone() ? 40 : 60;\n  const height = 0.4 * width;\n  const margin = {\n    top: radius + 1,\n    bottom: 20,\n    left: 20,\n    right: 20,\n  };\n  const svgWidth = width + margin.left + margin.right,\n    svgHeight = height + margin.bottom + margin.top;\n\n  useEffect(() => {\n    // TODO - no need for useEffect?\n    if (!intervals.length) {\n      return;\n    }\n\n    const data = showPrevious ? intervals : intervals.slice(0, 1);\n\n    const accessor = ({ length, cumulative }) =>\n      useCumulative ? cumulative : length;\n\n    const xExtent = trimmedExtent(data[0]);\n\n    const yExtent = [\n      0,\n      d3max([1.0, ...data.flatMap(({ bins }) => bins).map(accessor)]),\n    ];\n\n    const xScale = d3scaleTime().domain(xExtent).range([0, width]);\n    const xAxis = d3axisBottom()\n      .scale(xScale)\n      .tickValues(xExtent)\n      .tickFormat(timeFormatterHourAM)\n      .tickSize(0);\n    d3select(xAxisRef.current).call(xAxis);\n\n    const yScale = d3scaleLinear().domain(yExtent).range([height, 0]);\n\n    const line = d3line()\n      .curve(d3curveCardinal.tension(0.3))\n      .x((d) => xScale(d.x0))\n      .y((d) => yScale(accessor(d)));\n\n    const paths = data.map((d) => d.bins).map(line);\n\n    let newSvgData = paths.map((path, i) => ({ path, key: i })).reverse(); // render highlight after all others\n\n    setSvgData(newSvgData);\n\n    const bins = data[0].bins;\n    if (bins.length) {\n      const lastBin = bins[bins.length - 1];\n      setNowDot({\n        cx: xScale(lastBin.x0),\n        cy: yScale(accessor(lastBin)),\n        r: radius,\n      });\n    }\n  }, [width, height, intervals, showPrevious, useCumulative]);\n\n  if (!intervals.length) {\n    return null;\n  }\n\n  const total = intervals[0].total;\n  const lastIndex = svgData.length - 1;\n\n  return (\n    <div className={styles.container}>\n      <svg width={svgWidth} height={svgHeight}>\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <g\n            className={styles.axis}\n            ref={xAxisRef}\n            transform={`translate(0,${height})`}\n          />\n          <g>\n            {svgData.map(({ path, key }, i) => (\n              <path\n                key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: i === lastIndex,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          {nowDot && (\n            <g className={svgStyles.now}>\n              <circle {...nowDot} />\n            </g>\n          )}\n        </g>\n      </svg>\n      {showTotal && <span className={styles.total}>{total}</span>}\n    </div>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"@reach/router\";\nimport { DataContext } from \"./DataProvider\";\nimport { AreaShape } from \"./AreaShape\";\n\nimport {\n  isActive,\n  isExactlySev2,\n  isExactlySev1,\n  isPhone,\n  getContentWidth,\n} from \"../clientUtils\";\nimport { SvgDot } from \"./SvgDot\";\nimport { Spark } from \"./Spark\";\nimport classnames from \"classnames\";\nimport styles from \"./group.module.scss\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\n\nconst Totals = ({ totals }) => {\n  const data = totals || { active: 0, sev1: 0, sev2: 0 };\n  const sum = data.active + data.sev1 + data.sev2;\n  return (\n    <div className={styles.totals}>\n      {data.active > 0 && (\n        <span className={styles.active}>\n          <SvgDot active={true} />\n          <span>{data.active} </span>\n        </span>\n      )}\n      {data.sev2 > 0 && (\n        <span>\n          <SvgDot sev2={true} />\n          <span> {data.sev2} </span>\n        </span>\n      )}\n      {data.sev1 > 0 && (\n        <span>\n          <SvgDot sev1={true} />\n          <span> {data.sev1} </span>\n        </span>\n      )}\n      {!sum && <span className={styles.empty}>0 active or major</span>}\n    </div>\n  );\n};\n\nexport const GroupByArea = () => {\n  const { groupedByArea, activeOrMajorByArea } = useContext(DataContext);\n  const [totalsMap, setTotalsMap] = useState({});\n  const [displayedAreas, setDisplayedAreas] = useState({});\n  const [data, setData] = useState([]);\n  const phone = isPhone();\n\n  const [compact, setCompact] = useState(false);\n  useEffect(() => {\n    setCompact(getContentWidth() > 450);\n  }, []);\n\n  useEffect(() => {\n    if (!activeOrMajorByArea.length) {\n      return;\n    }\n\n    const map = {};\n    activeOrMajorByArea.forEach(({ key: area, intervals }) => {\n      const values = intervals[0].values;\n      if (values.length) {\n        map[area] = {\n          active: values.filter(isActive).length,\n          sev1: values.filter(isExactlySev1).length,\n          sev2: values.filter(isExactlySev2).length,\n        };\n      }\n    });\n    setTotalsMap(map);\n\n    const display = {};\n    activeOrMajorByArea.forEach(({key: area}) => {\n      display[area] = area.replace(\"/\", \"/ \");\n    });\n    setDisplayedAreas(display);\n  }, [activeOrMajorByArea]);\n\n  useEffect(() => {\n    if (!groupedByArea.length || !totalsMap) {\n      return;\n    }\n\n    const sortByImportance = (\n      { key: areaA, intervals: intervalsA },\n      { key: areaB, intervals: intervalsB }\n    ) => {\n      const { active: activeA, sev1: sev1A, sev2: sev2A } = totalsMap[\n        areaA\n      ] || { active: 0, sev1: 0, sev2: 0 };\n      const { active: activeB, sev1: sev1B, sev2: sev2B } = totalsMap[\n        areaB\n      ] || { active: 0, sev1: 0, sev2: 0 };\n      const totalA = intervalsA[0].total;\n      const totalB = intervalsB[0].total;\n\n      return (\n        totalB - totalA || activeB - activeA || sev2B - sev2A || sev1B - sev1A\n      );\n    };\n    const sortedData = groupedByArea.sort(sortByImportance);\n    setData(sortedData);\n  }, [groupedByArea, totalsMap]);\n\n  if (!data.length) {\n    return null;\n  }\n\n  return (\n    <div className={styles.container}>\n      {data.map(({ key: area, intervals }) => (\n        <div key={area} className={classnames(styles.item, {[styles.compact]: compact})}>\n          <div className={classnames(styles.left, {\n                [styles.phone]: phone,\n              })}>\n            <div className={styles.area}>{displayedAreas[area]}</div>\n            <Link to={`${encodeURIComponent(area)}`}>\n              <AreaShape area={area} />\n            </Link>\n          </div>\n          <div>\n              <ErrorBoundary>\n                <span className={styles.mini}>\n                <Spark\n                  intervals={intervals}\n                  useCumulative={true}\n                  showTotal={true}\n                />\n                </span>\n              </ErrorBoundary>\n          </div>\n          <Totals totals={totalsMap[area]} />\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { timeFormatterMonthDay, pacificMidnight } from \"../clientUtils\";\nimport styles from \"./topline.module.scss\";\nimport { isPhone } from \"../clientUtils\";\nimport classnames from \"classnames\";\nimport { DataContext } from './DataProvider';\n\nexport const Topline = ({ total, text }) => {\n  const { status } = useContext(DataContext);\n  const isDefined = typeof total === \"number\";\n  const totalContent = isDefined ? total : \"⋯\";\n  const totalElement = <div className={styles.total}>{totalContent}</div>;\n  const phone = isPhone();\n  const [stale, setStale] = useState(false);\n  const [lastUpdated, setLastUpdated] = useState(<span>&nbsp;</span>);\n\n  useEffect(() => {\n    if (status.lastUpdated) {\n      const date = new Date(status.lastUpdated);\n      const midnight = pacificMidnight();\n      setLastUpdated(timeFormatterMonthDay(+date));\n      setStale(date < midnight);\n    }\n  }, [setLastUpdated, status]);\n  \n\n  return (\n    <div className={classnames(styles.topline, {[styles.phone]: phone})}>\n      {text && <div className={styles.text}>{text}</div>}\n      {totalElement}\n      <div className={classnames(styles.date, { [styles.stale]: stale })}>{lastUpdated}</div>\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { DataContext, currentInterval } from \"./DataProvider\";\nimport {\n  intervalExtent,\n  timeFormatterHourAM,\n  every6Hours,\n  isPhone,\n} from \"../clientUtils\";\nimport { Topline } from \"./Topline\";\nimport classnames from \"classnames\";\n\nimport { scaleLinear as d3scaleLinear } from \"d3-scale\";\nimport { max as d3max } from \"d3-array\";\nimport { select as d3select } from \"d3-selection\";\nimport {\n  lineRadial as d3lineRadial,\n  curveCardinal as d3curveCardinal,\n} from \"d3-shape\";\nimport { axisRadialInner } from \"d3-radial-axis\";\n\nimport styles from \"./rehoboam.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nexport const Rehoboam = ({ area }) => {\n  const { filteredByAreaMin, activeOrMajorForArea } = useContext(DataContext);\n  const [svgPath, setSvgPath] = useState(null);\n  const [circles, setCircles] = useState([]);\n  const [total, setTotal] = useState(undefined);\n  const axisRef = useRef(null);\n\n  const mainRadius = isPhone() ? 120 : 150;\n  const margin = 30,\n    width = 2 * mainRadius,\n    height = 2 * mainRadius,\n    svgWidth = width + 2 * margin,\n    svgHeight = height + 2 * margin;\n\n  const dotRadius = 5;\n\n  useEffect(() => {\n    if (!filteredByAreaMin.length) {\n      return;\n    }\n\n    setTotal(currentInterval(filteredByAreaMin).total); // TODO - use status\n\n    const current = currentInterval(filteredByAreaMin);\n    const bins = current.binsHiRes;\n    const extent = intervalExtent(current);\n    const maxDisturbance = 20;\n    const maxLength = d3max(bins, ({ length }) => length);\n    const [start, end] = extent;\n\n    const toRadial = (timestamp, length) => {\n      const fraction = (timestamp - start) / (end - start);\n      const radians = 2 * Math.PI * fraction;\n      const disturbance = maxLength ? maxDisturbance * (length / maxLength) : 0;\n      return [radians, mainRadius + disturbance];\n    };\n\n    const radialData = bins.map(({ x0, length }) => toRadial(x0, length));\n    const radialGen = d3lineRadial().curve(d3curveCardinal.tension(0.4));\n    const path = radialGen(radialData);\n    setSvgPath(path);\n\n    const angleScale = d3scaleLinear()\n      .domain(extent)\n      .range([0, 2 * Math.PI]);\n\n    const axis = axisRadialInner(angleScale, mainRadius)\n      .tickFormat(timeFormatterHourAM)\n      .tickSize(8)\n      .tickValues(every6Hours(current.start));\n    d3select(axisRef.current).call(axis);\n\n    if (activeOrMajorForArea.length) {\n      const toRadialDot = ({ timestamp }) => {\n        const fraction = (timestamp - start) / (end - start);\n        const radians = 2 * Math.PI * fraction;\n        return [radians, mainRadius];\n      };\n\n      const activeOrMajorValues = currentInterval(activeOrMajorForArea).values;\n\n      const radialDots = activeOrMajorValues.map(toRadialDot);\n\n      const newCircles = radialDots.map(([theta, r], i) => {\n        const { severity, active } = activeOrMajorValues[i];\n        return {\n          key: i,\n          cx: r * Math.sin(theta),\n          cy: r * -Math.cos(theta),\n          r: dotRadius,\n          sev1: severity >= 1,\n          sev2: severity >= 2,\n          active,\n        };\n      });\n\n      setCircles(newCircles);\n    }\n  }, [activeOrMajorForArea, filteredByAreaMin, mainRadius]);\n\n  const text = area || \"Seattle\";\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.counter}>\n        <Topline total={total} text={text} />\n      </div>\n      <svg className={styles.svg} width={svgWidth} height={svgHeight}>\n        <g\n          transform={`translate(${margin + mainRadius},${margin + mainRadius})`}\n        >\n          <circle className={styles.maincircle} cx={0} cy={0} r={mainRadius} />\n          <g className={styles.axis} ref={axisRef} />\n          {svgPath && <path className={classnames(styles.path)} d={svgPath} />}\n          <g className={styles.events}>\n            {circles.map(({ key, cx, cy, r, sev1, sev2, active }) => (\n              <g key={key} className={classnames({ [svgStyles.live]: active })}>\n                <circle\n                  className={classnames(svgStyles.event)}\n                  cx={cx}\n                  cy={cy}\n                  r={r}\n                />\n                {sev1 && (\n                  <circle\n                    className={classnames(styles.outer, svgStyles.outer)}\n                    cx={cx}\n                    cy={cy}\n                    r={r + 3}\n                  />\n                )}\n                {sev2 && (\n                  <circle\n                    className={classnames(styles.outer, svgStyles.outer)}\n                    cx={cx}\n                    cy={cy}\n                    r={r + 6}\n                  />\n                )}\n              </g>\n            ))}\n          </g>\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React from \"react\";\nimport styles from \"./section.module.scss\";\nimport classnames from \"classnames\";\nimport { isPhone } from \"../clientUtils\";\n\nexport const Section = ({ children, styleOption = 0, edgeToEdge = false }) => {\n  const style = styleOption ? styles[`style${styleOption}`] : styles.styleDefault;\n    \n  return (\n    <section className={classnames(styles.section, style)}>\n      <div\n        className={classnames(styles.content, {\n          [styles.phone]: isPhone(),\n        })}\n      >\n        <div\n          className={classnames(styles.subcontent, {\n            [styles.edgeToEdge]: edgeToEdge,\n          })}\n        >\n          {children}\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React from \"react\";\nimport styles from \"./paragraph.module.scss\";\nimport classnames from \"classnames\";\n\nexport const Paragraph = ({ h1, title, content, margin = false }) => {\n  return (\n    <div className={classnames(styles.paragraph, { [styles.margin]: margin })}>\n      {h1 && <h1>{h1}</h1>}\n      {title && <h3>{title}</h3>}\n      {content && <div className={styles.text}>{content}</div>}\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport classnames from \"classnames\";\nimport svgStyles from \"./svg.module.scss\";\n\nimport { DataContext, currentInterval, previousInterval } from \"./DataProvider\";\n\nexport const HistoryEvents = ({ scales, dayHeight = 4 }) => {\n  const { history } = useContext(DataContext);\n  const [circles, setCircles] = useState([]);\n\n  useEffect(() => {\n    if (!history.length || !scales.length) {\n      return;\n    }\n    const intervalCurrent = currentInterval(history);\n    const intervalPrevious = previousInterval(history);\n    const binsCurrent = intervalCurrent.binsLowRes;\n    const binsPrevious = intervalPrevious.binsLowRes;\n    const [, yScale] = scales;\n\n    const radius = dayHeight / 2 + 2;\n    const filter = ({ sev2 }) => sev2 > 0;\n    const mapper = ({ x0, sev2 }) => ({ timestamp: x0, count: sev2 });\n    const stack = ({ timestamp, count }) =>\n      [...new Array(count)].map((_, index) => ({ timestamp, index }));\n    const sev2Current = binsCurrent.filter(filter).map(mapper).flatMap(stack);\n    const sev2Previous = binsPrevious.filter(filter).map(mapper).flatMap(stack);\n\n    const toCirclesGen = (side) => ({ timestamp, index }) => ({\n      key: `${timestamp}-${index}-${side}`,\n      cx: side * (index + 0.75) * 2 * radius,\n      cy: yScale(timestamp),\n      r: radius,\n      isCurrent: side === 1,\n    });\n    const toCirclesCurrent = toCirclesGen(1);\n    const toCirclesPrevious = toCirclesGen(-1);\n\n    const circlesCurrent = sev2Current.map(toCirclesCurrent);\n    const circlesPrevious = sev2Previous.map(toCirclesPrevious);\n\n    const newCircles = [...circlesPrevious, ...circlesCurrent];\n    setCircles(newCircles);\n  }, [dayHeight, history, scales]);\n\n  return (\n    <g>\n      {circles.map(({ key, cx, cy, r, isCurrent }) => (\n        <g\n          key={key}\n          className={classnames({\n            [svgStyles.current]: isCurrent,\n            [svgStyles.previous]: !isCurrent,\n          })}\n        >\n          <circle cx={cx} cy={cy} r={r} />\n        </g>\n      ))}\n    </g>\n  );\n};\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport {\n  DataContext,\n  currentInterval as getCurrentInterval,\n  previousInterval as getPreviousInterval,\n} from \"./DataProvider\";\nimport {\n  intervalExtent as getIntervalExtent,\n  timeFormatterMonth,\n  everyMonth,\n  getContentWidth,\n} from \"../clientUtils\";\nimport { Annotations } from \"./Annotations\";\nimport { HistoryEvents } from \"./HistoryEvents\";\nimport classnames from \"classnames\";\nimport moment from \"moment\";\n\nimport {\n  scaleLinear as d3scaleLinear,\n  scaleTime as d3scaleTime,\n} from \"d3-scale\";\nimport { max as d3max } from \"d3-array\";\nimport { select as d3select } from \"d3-selection\";\nimport { line as d3line, curveCardinal as d3curveCardinal } from \"d3-shape\";\nimport { axisLeft as d3axisLeft, axisBottom as d3axisBottom } from \"d3-axis\";\n\nimport historyStyles from \"./history.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nconst closedPath = (bins, line, offset) => {\n  if (!bins.length) {\n    return \"\";\n  }\n\n  let data = bins.map(({ x0, length }) => ({\n    timestamp: x0,\n    value: length + offset,\n  }));\n\n  const first = data[0],\n    last = data[data.length - 1];\n  const extraBottom = { timestamp: last.timestamp, value: 10000 };\n  const extraTop = { timestamp: first.timestamp, value: 10000 };\n\n  data = [...data, extraBottom, extraTop, first];\n  return line(data);\n};\n\nexport const History = () => {\n  const { history } = useContext(DataContext);\n  // const [svgData, setSvgData] = useState([]);\n  const [scales, setScales] = useState([]);\n  const [currentStart, setCurrentStart] = useState([]);\n  const [paths, setPaths] = useState([]);\n  const [clipPaths, setClipPaths] = useState({});\n\n  const dayHeight = 3;\n\n  const [contentWidth, setContentWidth] = useState(0);\n  useEffect(() => {\n    setContentWidth(getContentWidth());\n  }, []);\n\n  const svgWidth = contentWidth;\n    const margin = { top: 20, right: 0, bottom: 20, left: 0 },\n    height = 365 * dayHeight,\n    svgHeight = height + margin.top + margin.bottom,\n    width = svgWidth - margin.left - margin.right;\n  const yearWidth = width / 2;\n  const maxBarWidth = yearWidth * 0.45;\n  const annotationRectWidth = yearWidth * 0.48;\n  const calloutWidth = Math.max(40, yearWidth - annotationRectWidth);\n\n  const svgRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n\n  useEffect(() => {\n    if (!history.length) {\n      return;\n    }\n\n    const intervalCurrent = getCurrentInterval(history);\n    setCurrentStart(intervalCurrent.start);\n    const intervalPrevious = getPreviousInterval(history);\n    const binsCurrent = intervalCurrent.binsLowRes;\n    const binsPrevious = intervalPrevious.binsLowRes;\n    const timeExtent = getIntervalExtent(intervalCurrent);\n\n    const xScale = d3scaleLinear()\n      .domain([0, d3max([...binsCurrent, ...binsPrevious], (b) => b.length)])\n      .range([0, maxBarWidth]);\n\n    const yScale = d3scaleTime().domain(timeExtent).range([0, height]);\n\n    setScales([xScale, yScale]);\n\n    const yAxis = d3axisLeft()\n      .scale(yScale)\n      .tickValues(everyMonth(intervalCurrent.start))\n      .tickFormat(timeFormatterMonth)\n      .tickSize(0);\n    d3select(yAxisRef.current).call(yAxis);\n\n    const xAxis = d3axisBottom().scale(xScale).ticks(2);\n    d3select(xAxisRef.current).call(xAxis);\n\n    // const currentYear = binsCurrent.map(({ x0, length }) => ({\n    //   x: xScale(0),\n    //   width: xScale(length),\n    //   y: yScale(x0),\n    //   height: binHeight,\n    //   rx: 1,\n    // }));\n    // const previousYear = binsPrevious.map(({ x0, length }) => ({\n    //   x: xScale(0) - xScale(length),\n    //   width: xScale(length),\n    //   y: yScale(x0),\n    //   height: binHeight,\n    //   rx: 1,\n    // }));\n    // setSvgData([currentYear, previousYear]);\n\n    const lineCurrent = d3line()\n      .curve(d3curveCardinal.tension(0.3))\n      .x((d) => xScale(d.length))\n      .y((d) => yScale(d.x0));\n    const linePrevious = d3line()\n      .curve(d3curveCardinal.tension(0.3))\n      .x((d) => xScale(-d.length))\n      .y((d) => yScale(d.x0));\n\n    const pathCurrent = lineCurrent(binsCurrent);\n    const pathPrevious = linePrevious(binsPrevious);\n    setPaths([\n      { path: pathCurrent, key: \"current\" },\n      { path: pathPrevious, key: \"previous\" },\n    ]);\n\n    const clipLineCurrent = d3line()\n      .x((d) => xScale(d.value))\n      .y((d) => yScale(d.timestamp));\n\n    const clipLinePrevious = d3line()\n      .x((d) => xScale(-d.value))\n      .y((d) => yScale(d.timestamp));\n\n    const pixelOffset = xScale.invert(2) - xScale.invert(0);\n    const clipPathCurrent = closedPath(\n      binsCurrent,\n      clipLineCurrent,\n      pixelOffset\n    );\n    const clipPathPrevious = closedPath(\n      binsPrevious,\n      clipLinePrevious,\n      pixelOffset\n    );\n\n    setClipPaths({ current: clipPathCurrent, previous: clipPathPrevious });\n  }, [history, height, maxBarWidth]);\n\n  // console.log(\"HISTORY/render\");\n\n  const thisYear = moment().year(),\n  lastYear = thisYear-1;\n\n  return (\n    <div className={historyStyles.container}>\n      <div className={historyStyles.years}>\n        <div className={historyStyles.left}>{lastYear}</div>\n        <div className={historyStyles.right}>{thisYear}</div>\n      </div>\n      <svg\n        className={historyStyles.svg}\n        ref={svgRef}\n        width={svgWidth}\n        height={svgHeight}\n      >\n        <g transform={`translate(${margin.left + yearWidth},${margin.top})`}>\n          {/* <g>\n            {svgData.map((dataset, iDataset) =>\n              dataset.map((d) => (\n                <rect\n                  className={classnames({\n                    [historyStyles.previous]: iDataset,\n                    [historyStyles.current]: !iDataset,\n                  })}\n                  x={d.x}\n                  y={d.y}\n                  width={d.width}\n                  height={d.height}\n                  rx={d.rx}\n                ></rect>\n              ))\n            )}\n          </g> */}\n          <g>\n            {paths.map(({ path, key }, i) => (\n              <path\n                key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: !i,\n                  [svgStyles.previous]: i,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          <g>\n            <HistoryEvents scales={scales} dayHeight={dayHeight} />\n          </g>\n          <g>\n            <Annotations\n              currentStart={currentStart}\n              rectWidth={annotationRectWidth}\n              calloutWidth={calloutWidth}\n              scales={scales}\n              clipPaths={clipPaths}\n            />\n          </g>\n          {/* <g\n            className={classnames(svgStyles.axis, historyStyles.axis)}\n            ref={xAxisRef}\n            transform={`translate(0,${height})`}\n          /> */}\n          <g\n            className={classnames(svgStyles.axis, historyStyles.axis)}\n            ref={yAxisRef}\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n","// see groupby.js\nexport const GroupByOptions = {\n  // TODO - import from server\n  Nothing: undefined,\n  IncidentType: \"type\",\n  ZipCode: \"zip\",\n  Area: \"area\",\n  TimeInterval: \"time\",\n};\n\nexport const AreaAccessors = {\n  ZipCode: ({ zip }) => zip,\n  Area: ({ neighborhoodGroup }) => neighborhoodGroup,\n  AreaSecondary: ({ neighborhood }) => neighborhood,\n};\nAreaAccessors.Default = AreaAccessors.Area;\n","import React from \"react\";\nimport styles from \"./tweetdetails.module.scss\";\nimport { isPhone } from \"../clientUtils\";\nimport { AreaAccessors } from \"../groupingOptions\";\n\nexport const TweetDetails = ({ tweet }) => {\n  const { address, units, lat, long } = tweet;\n  const { id_str } = tweet;\n  // const url = `https://data.seattle.gov/resource/fire-911.json?incident_number=${id_str}`;\n  const unitsList = units.split(\" \");\n  const unitsStr = `${unitsList.length} ${\n    unitsList.length === 1 ? \"unit\" : \"units\"\n  } dispatched:`;\n  const area = AreaAccessors.AreaSecondary(tweet);\n  const phone = isPhone();\n\n  const format = (n) => Number.parseFloat(n).toFixed(3);\n  const coordinates = lat ? `${format(lat)}°N ${format(-long)}°W` : \"\";\n  // const incidentLink = <a className={styles.link} href={url}>{id_str}</a>;\n  return (\n    <div className={styles.container}>\n      <div>{address}</div>\n      {phone && <div className={styles.secondary}>{area}</div>}\n      <div className={styles.secondary}>{coordinates}</div>\n      <div>\n        <span>{unitsStr}</span>\n        {unitsList.map((unit) => (\n          <span key={unit} className={styles.unit}>\n            {unit}\n          </span>\n        ))}\n      </div>\n      <div className={styles.secondary}>Incident ID {id_str}</div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport styles from \"./tweet.module.scss\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\nimport { AreaAccessors } from \"../groupingOptions\";\nimport { TweetDetails } from \"./TweetDetails\";\nimport {\n  timeFormatter,\n  isActive,\n  isAtLeastSev1,\n  isAtLeastSev2,\n  isPhone,\n} from \"../clientUtils\";\nimport { SvgDot } from \"./SvgDot\";\nimport classnames from \"classnames\";\n\nexport const TweetModes = {\n  Default: 0,\n  Detailed: 1,\n  GreyedOut: 2,\n};\n\nexport const Tweet = ({ tweet, mode = TweetModes.Default }) => {\n  const { user, setSelection } = useContext(UserContext);\n  const selectedTweet = user[UserContextKeys.SelectedTweet];\n\n  const handleClick = () => {\n    const newSelectedTweet =\n      selectedTweet && selectedTweet.id_str === tweet.id_str ? null : tweet;\n    setSelection(UserContextKeys.SelectedTweet, newSelectedTweet);\n  };\n  const active = isActive(tweet);\n  const sev1 = isAtLeastSev1(tweet);\n  const sev2 = isAtLeastSev2(tweet);\n\n  const area = AreaAccessors.AreaSecondary(tweet);\n\n  const isGreyedOut = mode === TweetModes.GreyedOut;\n  const isDetailed = mode === TweetModes.Detailed;\n  const time = timeFormatter(tweet.timestamp);\n  const phone = isPhone();\n\n  return (\n    <div\n      className={classnames(styles.container, {\n        [styles.detailed]: isDetailed,\n        [styles.greyedOut]: isGreyedOut,\n        [styles.phone]: phone,\n      })}\n      onClick={handleClick}\n    >\n      <div className={styles.tweet}>\n        <div className={styles.details}>\n          <span className={styles.location}>\n            {!phone && area && <span>{area} @ </span>}\n            {phone && area && <span className={styles.compass}></span>}\n            {time}\n          </span>\n        </div>\n        <div className={classnames({ [styles.active]: active })}>\n          <SvgDot active={active} sev1={sev1} sev2={sev2} />\n          <span> {tweet.description}</span>\n        </div>\n      </div>\n      {isDetailed && <TweetDetails tweet={tweet} />}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport styles from \"./tweets.module.scss\";\nimport { Tweet, TweetModes } from \"./Tweet\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\n\nexport const TweetList = ({ tweets = [], placeholder }) => {\n  const { user } = useContext(UserContext);\n  const selected = user[UserContextKeys.SelectedTweet];\n\n  const mode = ({ id_str }) =>\n    selected\n      ? id_str === selected.id_str\n        ? TweetModes.Detailed\n        : TweetModes.GreyedOut\n      : TweetModes.Default; // TODO - remove modes\n  \n      return (\n    <div className={styles.tweets}>\n      {tweets.map((t) => (\n        <Tweet key={t.id_str} tweet={t} mode={mode(t)} />\n      ))}\n      {!tweets.length && <div className={styles.placeholder}>{placeholder}</div>}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\n\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsActive = () => {\n  const { active24 } = useContext(DataContext);\n\n  return <TweetList tweets={active24} placeholder={\"No active incidents\"} />;\n}\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\n\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsMajor = () => {\n  const { major24 } = useContext(DataContext);\n\n  return <TweetList tweets={major24} placeholder={\"No major incidents\"} />;\n}\n","import React from \"react\";\nimport { Paragraph } from \"./Paragraph\";\n\nexport const Sources = () => {\n  const title = <span id=\"sources\">Data Sources</span>;\n\n  const sources = (\n    <>\n      <p>\n        The primary data source is{\" \"}\n        <a href=\"http://www2.seattle.gov/fire/realTime911/\">\n          Real-Time 911 Dispatch\n        </a>\n        . Geolocation data for each incident is retrieved from{\" \"}\n        <a href=\"https://data.seattle.gov/Public-Safety/Seattle-Real-Time-Fire-911-Calls/kzjm-xkqj\">\n          data.seattle.gov\n        </a>. City and\n        neighborhood boundary data is from{\" \"}\n        <a href=\"https://github.com/seattleflu/seattle-geojson/tree/master/seattle_geojsons\">\n          seattleflu/seattle-geojson\n        </a>\n        . Map powered by <a href=\"http://leafletjs.com\">Leaflet</a> via{\" \"}\n        <a href=\"https://react-leaflet.js.org\">react-leaflet</a>. Map tiles\n        provided by{\" \"}\n        <a href=\"https://www.jawg.io/docs/apidocs/static-maps/\">Jawg Maps</a>.\n        Visualizations powered by <a href=\"https://d3js.org\">D3</a>. Annotations by <a href=\"https://d3-annotation.susielu.com/\">D3-Annotation</a>.\n      </p>\n    </>\n  );\n\n  return <Paragraph title={title} content={sources} />;\n};\n","import React, { useContext } from \"react\";\nimport { StatusContext } from \"./StatusContext\";\nimport { timeFormatter, timeFormatterUserTimezone, pacificMidnight } from \"../clientUtils\";\nimport classnames from \"classnames\";\nimport styles from \"./freshness.module.scss\";\n\nexport const Freshness = () => {\n  const { status = {} } = useContext(StatusContext);\n\n  if (!status.lastUpdated) {\n    return <span>&nbsp;</span>;\n  }\n\n  const date = new Date(status.lastUpdated);\n  const midnight = pacificMidnight();\n  const stale = date < midnight;\n  const formatTimezone = `${stale ? \"MMM D @ \" : \"\"}h:mma z`;\n  const formatNoTimezone = `${stale ? \"MMM D @ \" : \"\"}h:mma`;\n  const seattle = timeFormatter(date, formatNoTimezone);\n  const seattleTZ = timeFormatter(date, formatTimezone);\n  const user = timeFormatterUserTimezone(date, formatNoTimezone);\n  const userTZ = timeFormatterUserTimezone(date, formatTimezone);\n\n  const same = seattle === user;\n  const displayUser = same ? \"\" : ` (${userTZ})`;\n  const displaySeattle = same ? seattle : seattleTZ;\n\n  return (\n    <span>\n      Data is current as of{\" \"}\n      <span className={classnames({[styles.stale]: stale})}>\n        <span className={styles.time}>{displaySeattle}</span>\n        {displayUser}.\n      </span>\n    </span>\n  );\n};\n","import React from \"react\";\nimport styles from \"./legend.module.scss\";\nimport { SvgDot } from \"./SvgDot\";\n\nexport const Legend = () => (\n  <div className={styles.legend}>\n    <div>\n      <span>Active incident </span>\n      <SvgDot active={true} radius={5} />\n    </div>\n    <div>\n      <span>10 or more units dispatched </span>\n      <SvgDot sev2={true} />\n    </div>\n    <div>\n      <span>5 or more units dispatched </span>\n      <SvgDot sev1={true} />\n    </div>\n    <div>\n      <span>Fewer than 5 units dispatched </span>\n      <SvgDot />\n    </div>\n  </div>\n);\n","import React, { useContext } from \"react\";\nimport { Paragraph } from \"./Paragraph\";\nimport { ThemeContext } from \"./ThemeContext\";\nimport classnames from \"classnames\";\nimport styles from \"./themeswitch.module.scss\";\n\nexport const ThemeSwitch = () => {\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  const themes = [\"Light\", \"Dusk\", \"Dark\"];\n\n  const handleClick = (newTheme) => {\n    setTheme(newTheme.toLowerCase());\n  };\n\n  const content = (\n    <p>\n      {/* The color theme changes based on time of day in Seattle. */}\n      {themes.map((t, i) => (\n        <span key={t}>\n          {\" \"}\n          <button\n            className={classnames(styles.button, {\n              [styles.selected]: t.toLowerCase() === theme,\n            })}\n            onClick={() => handleClick(t)}\n          >\n            {t}\n          </button>\n          { (i < (themes.length - 1)) && <span> / </span>}\n        </span>\n      ))}.\n    </p>\n  );\n\n  return <Paragraph content={content} />;\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { select as d3select } from \"d3-selection\";\nimport {\n  annotation as d3annotation,\n  annotationCalloutCircle as d3annotationCalloutCircle,\n} from \"d3-svg-annotation\";\nimport { getStyleProp } from \"../clientUtils\";\nimport \"./annotations.scss\";\n\nexport const PunchCardAnnotations = ({ annotations, scales, cellSize, availableWidth }) => {\n  const calloutsRef = useRef(null);\n\n  useEffect(() => {\n    if (!annotations) {\n      return;\n    }\n    const [, yScale] = scales;\n\n    const annotationColor = getStyleProp(\"--annotation\");\n\n    const offsetX = -20;\n    const calloutFn = ({day, hour2, title, label}) => {\n\n      const x = day * cellSize;\n      const y = yScale(hour2);\n      const callout = {\n        note: {\n          title,\n          label,\n          wrap: availableWidth + offsetX,\n          align: \"right\"\n        },\n        x,\n        y,\n        subject: {\n          radius: cellSize/2,\n        },\n        color: annotationColor,\n      };\n      callout.nx = offsetX;\n      callout.ny = yScale(hour2) + cellSize/2;\n\n      return callout;\n    };\n\n\n    const calloutsSvgData = annotations.map(calloutFn);\n\n    const callout = d3annotation()\n      .annotations(calloutsSvgData)\n      .type(d3annotationCalloutCircle);\n\n    d3select(calloutsRef.current).call(callout);\n\n  }, [annotations, availableWidth, cellSize, scales]);\n\n  return (\n    <g ref={calloutsRef} />\n  );\n};\n","import React, { useEffect, useState, useRef, useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\nimport { isPhone, getStyleProp, getContentWidth } from \"../clientUtils\";\n\nimport {\n  scaleLinear as d3scaleLinear,\n  scaleOrdinal as d3scaleOrdinal,\n} from \"d3-scale\";\nimport * as d3a from \"d3-array\";\nimport { select as d3select } from \"d3-selection\";\nimport { axisRight as d3axisRight, axisTop as d3axisTop } from \"d3-axis\";\n\nimport texturesJS from \"textures\";\nimport styles from \"./punchcard.module.scss\";\nimport { PunchCardAnnotations } from \"./PunchCardAnnotations\";\nimport { ThemeContext } from './ThemeContext';\n\nconst PunchCardElements = ({ elements }) => {\n  if (!elements) {\n    return null;\n  }\n  return (\n    <>\n      {elements.map(({ key, cx, cy, r, fill, stroke }) => (\n        <circle\n          key={key}\n          className={styles.element}\n          cx={cx}\n          cy={cy}\n          r={r}\n          fill={fill}\n          stroke={stroke}\n        />\n      ))}\n    </>\n  );\n};\n\nexport const PunchCard = () => {\n  const { punchCard } = useContext(DataContext);\n  const { theme } = useContext(ThemeContext);\n  const { week, dayAggregates, hourAggregates, annotations } = punchCard;\n  \n  const [weekSpecs, setWeekSpecs] = useState([]);\n  const [dayAggregateSpecs, setDayAggregateSpecs] = useState([]);\n  const [hourAggregateSpecs, setHourAggregateSpecs] = useState([]);\n  const [scales, setScales] = useState([]);\n  const [contentWidth, setContentWidth] = useState(0);\n  const [textures, setTextures] = useState([]);\n  \n  useEffect(() => {\n    setContentWidth(Math.min(450, getContentWidth()));\n  }, []);\n  \n  const phone = isPhone();\n  const svgWidth = contentWidth;\n  const cellSize = svgWidth / 12;\n  const width = cellSize * 7;\n  const horizontal = svgWidth - width;\n  const horizontalRight = cellSize * 3;\n  const margin = {\n    top: 40,\n    bottom: 120,\n    right: horizontalRight,\n    left: horizontal - horizontalRight,\n  };\n  const gap = 4;\n  const elementSize = cellSize - 2 * gap;\n  const height = cellSize * 12;\n  const svgHeight = height + margin.top + margin.bottom;\n  \n  const texturesRef = useRef(null);\n  const yAxisRef = useRef(null);\n  const xAxisRef = useRef(null);\n\n  useEffect(() => {\n    // TODO - no need for useEffect?\n    if (!week) {\n      return;\n    }\n\n    const [min, max] = d3a.extent(week.flat(2).map(({ avg }) => avg));\n\n    // TODO: d3-scale can accomplish most of this stuff\n    // if you refactor the data a bit.\n    const xDomain = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n    const xRange = xDomain.map((_, i) => i * cellSize);\n    const xScale = d3scaleOrdinal(xDomain, xRange);\n    const xAxis = d3axisTop().scale(xScale).ticks(12).tickSize(0);\n    \n    const yExtent = [0, 12];\n    const yScale = d3scaleLinear().domain(yExtent).range([0, height]);\n    const formatter = (d, i) => {\n      const hour = 2 * d;\n      if (hour === 0 || hour === 24) {\n        return \"12am\";\n      }\n      if (hour === 12) {\n        return \"noon\";\n      }\n      return `${hour % 12}${hour < 12 ? \"am\" : \"pm\"}`;\n    };\n    const yAxis = d3axisRight()\n      .scale(yScale)\n      .tickValues([0, 3, 6, 9, 12])\n      .tickFormat(formatter)\n      .tickSize(phone ? 0 : 3);\n\n    const data = week\n      .map((day, iDay) =>\n        day.map(({ avg }, iHour) => ({\n          hour: iHour,\n          day: iDay,\n          value: avg,\n        }))\n      )\n      .flat(2);\n\n    const color1 = getStyleProp(\"--graph-primary1\");\n    const color2 = getStyleProp(\"--graph-primary2\");\n    const color3 = getStyleProp(\"--graph-primary3\");\n    const color4 = getStyleProp(\"--graph-primary4\");\n\n    const texture1 = texturesJS.lines().size(7).strokeWidth(3).stroke(color1);\n    const texture2 = texturesJS.lines().size(6).strokeWidth(2).stroke(color2);\n    const texture3 = texturesJS.lines().size(5).strokeWidth(1).stroke(color3);\n    const texture4 = texturesJS.lines().size(5).strokeWidth(1).stroke(color4);\n\n    const appearance = [\n      { color: color1, texture: texture1 },\n      { color: color2, texture: texture2 },\n      { color: color3, texture: texture3 },\n      { color: color4, texture: texture4 },\n    ];\n    const appearanceFn = (value) => {\n      const offsetValue = value - min;\n      const offsetMax = max - min;\n\n      const index =\n        offsetValue >= 0.75 * offsetMax\n          ? 0\n          : offsetValue >= 0.5 * offsetMax\n          ? 1\n          : offsetValue >= 0.25 * offsetMax\n          ? 2\n          : 3;\n      return appearance[index];\n    };\n\n    const maxRadius = elementSize / 2;\n\n    const newWeekSpecs = data.map(({ hour, day, value }) => {\n      const appearance = appearanceFn(value);\n      return {\n        key: `${day}-${hour}`,\n        cx: day * cellSize,\n        cy: yScale(hour),\n        r: maxRadius * Math.sqrt(value / max),\n        fill: appearance.texture.url(),\n        stroke: appearance.color,\n      };\n    });\n\n    const toAggregateElementSpec = (value, i) => {\n      const appearance = appearanceFn(value);\n      return {\n        cx: 0,\n        cy: 0,\n        r: maxRadius * Math.sqrt(value / max),\n        fill: appearance.texture.url(),\n        stroke: appearance.color,\n      };\n    };\n\n    const newDayAggregateSpecs = dayAggregates\n      .map(toAggregateElementSpec)\n      .map((spec, i) => ({\n        ...spec,\n        cx: i * cellSize,\n        key: `day-${i}`,\n      }));\n\n    const newHourAggregateSpecs = hourAggregates\n      .map(toAggregateElementSpec)\n      .map((spec, i) => ({\n        ...spec,\n        cy: i * cellSize,\n        key: `hour-${i}`,\n      }));\n\n    setWeekSpecs(newWeekSpecs);\n    setDayAggregateSpecs(newDayAggregateSpecs);\n    setHourAggregateSpecs(newHourAggregateSpecs);\n    setScales([xScale, yScale]);\n    d3select(xAxisRef.current).call(xAxis);\n    d3select(yAxisRef.current).call(yAxis);\n    \n    setTextures([texture1, texture2, texture3, texture4]);\n  }, [theme, week, height, width, elementSize, cellSize, dayAggregates, hourAggregates, phone]);\n\n  if (textures.length) {\n    const [t1,t2,t3,t4] = textures;\n    d3select(texturesRef.current)\n      .call(t1)\n      .call(t2)\n      .call(t3)\n      .call(t4);\n  }\n\n  return (\n    <svg className={styles.svg} width={svgWidth} height={svgHeight}>\n      <g transform={`translate(${margin.left},${margin.top})`}>\n        <g\n          ref={xAxisRef}\n          className={styles.axis}\n          transform={`translate(${0.5 * cellSize},${12.9 * cellSize})`}\n        />\n        <g\n          ref={yAxisRef}\n          className={styles.axis}\n          transform={`translate(${7 * cellSize},0)`}\n        />\n        <g\n          ref={texturesRef}\n          transform={`translate(${cellSize / 2},${cellSize / 2})`}\n        >\n          {weekSpecs.length && (<>\n          <g transform={`translate(${0},0)`}>\n            <PunchCardElements elements={weekSpecs} />\n          </g>\n          <g transform={`translate(${(phone ? 8.5 : 8) * cellSize},0)`}>\n            <PunchCardElements elements={hourAggregateSpecs} />\n          </g>\n          <g transform={`translate(0,${13.25 * cellSize})`}>\n            <PunchCardElements elements={dayAggregateSpecs} />\n          </g>\n          <g transform={`translate(${0},${0})`}>\n            <PunchCardAnnotations\n              annotations={annotations}\n              cellSize={cellSize}\n              scales={scales}\n              availableWidth={margin.left}\n            />\n          </g>\n          </>)}\n        </g>\n      </g>\n    </svg>\n  );\n};\n","import React from \"react\";\nimport styles from \"./units.module.scss\";\nimport { Paragraph } from \"./Paragraph\";\n\nexport const Units = () => {\n  const legend = [\n    { key: \"A\", value: \"Aid Unit\" },\n    { key: \"AIR\", value: \"Air Unit\" },\n    { key: \"B\", value: \"Battalion Chief\" },\n    { key: \"E\", value: \"Engine\" },\n    { key: \"L\", value: \"Ladder\" },\n    { key: \"M\", value: \"Medic Unit\" },\n  ];\n\n  const units = (\n    <>\n      <p>\n        Fire Department units are stationed at{\" \"}\n        <a href=\"https://www.seattle.gov/fire/about-us/fire-stations\">\n          33 locations\n        </a>\n        . Unit key:\n      </p>\n      <p>\n        {legend.map(({ key, value }) => (\n          <span key={key}>\n            <span className={styles.unitKey}>{key}</span>\n            <span className={styles.unitValue}>{value}</span>\n          </span>\n        ))}\n      </p>\n    </>\n  );\n\n  return <Paragraph title={\"Units\"} content={units} />;\n};\n","import React from \"react\";\nimport { Map } from \"./Map\";\nimport { DataProvider } from \"./DataProvider\";\nimport { GroupByArea } from \"./GroupByArea\";\nimport { Rehoboam } from \"./Rehoboam\";\nimport { Section } from \"./Section\";\nimport { Paragraph } from \"./Paragraph\";\nimport { History } from \"./History\";\nimport { TweetsActive } from \"./TweetsActive\";\nimport { TweetsMajor } from \"./TweetsMajor\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { Sources } from \"./Sources\";\nimport { Freshness } from \"./Freshness\";\nimport { Legend } from \"./Legend\";\nimport { ThemeSwitch } from \"./ThemeSwitch\";\nimport { PunchCard } from \"./PunchCard\";\nimport { Units } from \"./Units\";\nimport { SvgDot } from \"./SvgDot\";\n\nexport const DispatchAll = () => {\n  const intro = (\n    <p>A visualization of Seattle Fire Department's 911 dispatch data.</p>\n  );\n\n  const live = (\n    <p>\n      <span>A near-real-time view of today's incidents.</span> <Freshness />\n    </p>\n  );\n\n  const week = `An aggregate view of year-to-date dispatches by day of week and by time of day.`;\n\n  const lists = <p>Select an incident to view dispatch details.</p>;\n\n  const areas = \"Select an area to see all of today's incidents in it.\";\n\n  const history = (\n    <p>\n      A side-by-side comparison of this year's daily dispatch volume against\n      last year's. <SvgDot sev2={true} /> 10+ unit incidents are shown along the\n      axis.\n    </p>\n  );\n\n  const notes = (\n    <p>\n      Created by <a href=\"https://linkedin.com/in/anarseyf/\">Anar Seyf</a> in 2020.\n    </p>\n  );\n\n  return (\n    <DataProvider>\n      <Section styleOption={1}>\n        <Paragraph h1=\"Seattle Fire 911 Dispatch\" content={intro} />\n      </Section>\n\n      <Section styleOption={2}>\n        <Paragraph title=\"Today\" content={live} />\n        <Rehoboam />\n        <Paragraph content={<Legend />} />\n      </Section>\n\n      <Section styleOption={2} edgeToEdge={true}>\n        <ErrorBoundary>\n          <Map />\n        </ErrorBoundary>\n        <Paragraph content={lists} margin={true} />\n        <Paragraph title=\"Active Incidents\" margin={true} />\n        <TweetsActive />\n        <Paragraph title=\"Major Incidents\" margin={true} />\n        <TweetsMajor />\n      </Section>\n\n      <Section styleOption={3}>\n        <Paragraph title=\"City Areas\" content={areas} />\n        <GroupByArea />\n      </Section>\n\n      <Section styleOption={4} edgeToEdge={true}>\n        <Paragraph title=\"Weekly Highs and Lows\" content={week} margin={true} />\n        <PunchCard />\n        <Paragraph title=\"This Year\" content={history} margin={true} />\n        <History />\n      </Section>\n\n      <Section styleOption={5}>\n        <Sources />\n        <Units />\n        <Paragraph title=\"Themes\" content={<ThemeSwitch />} />\n        <Paragraph title=\"About\" content={notes} />\n      </Section>\n    </DataProvider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext, currentInterval } from \"./DataProvider\";\n\nimport { UserContextKeys, UserContext } from \"./UserProvider\";\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsForArea = () => {\n  const { filteredByArea } = useContext(DataContext);\n  const { user } = useContext(UserContext);\n  const filter = user[UserContextKeys.TypeFilter];\n\n  if (!filteredByArea.length) {\n    return null;\n  }\n  const all = currentInterval(filteredByArea).values;\n  const filtered = all.filter(({ type }) => !filter || filter === type);\n\n  return <TweetList tweets={filtered} />;\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport classnames from \"classnames\";\n\nimport {\n  scaleLinear as d3scaleLinear,\n  scaleTime as d3scaleTime,\n} from \"d3-scale\";\nimport { max as d3max } from \"d3-array\";\nimport { select as d3select } from \"d3-selection\";\nimport { line as d3line, curveCardinal as d3curveCardinal } from \"d3-shape\";\nimport { axisLeft as d3axisLeft, axisBottom as d3axisBottom } from \"d3-axis\";\n\nimport chartStyles from \"./chart.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\nimport { intervalExtent, timeFormatterHourAM, every6Hours, getContentWidth } from \"../clientUtils\";\n\nexport const MultiLine = ({\n  intervals = [],\n  title,\n  showHeader = false,\n  useCumulative,\n}) => {\n  const [svgData, setSvgData] = useState([]);\n  const [nowDot, setNowDot] = useState(null);\n  const [contentWidth, setContentWidth] = useState(0);\n\n  useEffect(() => {\n    setContentWidth(getContentWidth());\n  }, []);\n\n  const svgWidth = contentWidth;\n  const svgHeight = 0.3 * svgWidth,\n    margin = { top: 20, right: 20, bottom: 20, left: 20 },\n    width = svgWidth - margin.left - margin.right,\n    height = svgHeight - margin.bottom - margin.top;\n\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n\n  useEffect(() => {\n    // TODO - no need for useEffect?\n    if (!intervals.length) {\n      return;\n    }\n\n    const accessor = ({ length, cumulative }) =>\n      useCumulative ? cumulative : length;\n\n    const currentInterval = intervals[0];\n    const xExtent = intervalExtent(currentInterval);\n    const yExtent = [\n      0,\n      d3max([1.0, ...intervals.flatMap(({ bins }) => bins).map(accessor)]),\n    ];\n\n    const xScale = d3scaleTime().domain(xExtent).range([0, width]);\n    const xAxis = d3axisBottom()\n      .scale(xScale)\n      .tickValues(every6Hours(currentInterval.start))\n      .tickFormat(timeFormatterHourAM)\n      .tickSize(3);\n    d3select(xAxisRef.current).call(xAxis);\n\n    const yScale = d3scaleLinear().domain(yExtent).range([height, 0]);\n    const yAxis = d3axisLeft().scale(yScale).ticks(2);\n    d3select(yAxisRef.current).call(yAxis);\n\n    const line = d3line()\n      .curve(d3curveCardinal.tension(0.3))\n      .x((d) => xScale(d.x0))\n      .y((d) => yScale(accessor(d)));\n\n    const paths = intervals.map((d) => d.bins).map(line);\n\n    let newSvgData = paths.map((path, i) => ({ path, key: i })).reverse(); // render highlight after all others\n\n    setSvgData(newSvgData);\n\n    const bins = intervals[0].bins;\n    if (bins.length) {\n      const lastBin = bins[bins.length - 1];\n      setNowDot({\n        cx: xScale(lastBin.x0),\n        cy: yScale(accessor(lastBin)),\n        r: 3,\n      });\n    }\n  }, [height, intervals, useCumulative, width]);\n\n  if (!intervals.length) {\n    return null;\n  }\n\n  const total = intervals[0].total;\n  const lastIndex = svgData.length - 1;\n\n  return (\n    <div className={chartStyles.container}>\n      {showHeader && (\n        <div className={chartStyles.header}>\n          {title && <div className={chartStyles.title}>{title}</div>}\n          {typeof total === \"number\" && (\n            <div className={chartStyles.total}>{total}</div>\n          )}\n        </div>\n      )}\n      <svg className={chartStyles.chart} width={svgWidth} height={svgHeight}>\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <g\n            className={svgStyles.axis}\n            ref={xAxisRef}\n            transform={`translate(0,${height})`}\n          />\n          <g className={svgStyles.axis} ref={yAxisRef} />\n          <g>\n            {svgData.map(({path, key}, i) => (\n              <path\n                key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: i === lastIndex,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          {nowDot && (\n            <g className={svgStyles.now}>\n              <circle {...nowDot} />\n            </g>\n          )}\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\nimport { MultiLine } from \"./MultiLine\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\n\nexport const Header = ({ area }) => {\n  const { filteredByAreaMinWeek } = useContext(DataContext);\n\n  if (!filteredByAreaMinWeek.length) {\n    return null;\n  }\n\n  return (\n    <ErrorBoundary>\n      <MultiLine\n        intervals={filteredByAreaMinWeek[0].intervals}\n        useCumulative={!!area}\n      />\n    </ErrorBoundary>\n  );\n};\n","import React from \"react\";\nimport { Paragraph } from \"./Paragraph\";\nimport { Header } from \"./Header\";\nimport { useNeighborhoods } from \"./neighborhoods\";\n\nexport const AreaPageHeader = ({ area }) => {\n  const neighborhoodsMap = useNeighborhoods();\n  const decodedArea = decodeURIComponent(area);\n  const subareas = (\n    <div>\n      {(neighborhoodsMap[decodedArea] || []).map((subarea) => (\n        <div key={subarea}>{subarea}</div>\n      ))}\n    </div>\n  );\n\n  // const [list, setList] = useState([]);\n  // useEffect(() => {\n  //   if (neighborhoodsMap[area]) {\n  //     setList(neighborhoodsMap[area]);\n  //   }\n  // }, [area, neighborhoodsMap]);\n\n  return (\n    <>\n      <Paragraph title={decodedArea} content={subareas} />\n      <Header area={area} />\n    </>\n  );\n};\n","import { useState, useEffect, useContext } from 'react';\nimport { DataContext } from './DataProvider';\nimport { featuresForArea } from \"./geojson\";\n\nexport const useNeighborhoods = () => {\n  const [map, setMap] = useState({});\n\n  const { groupedByArea } = useContext(DataContext);\n\n  useEffect(() => {\n    const newMap = {};\n    groupedByArea\n      .map(({ key }) => key)\n      .forEach((key) => {\n        newMap[key] = featuresForArea(key)\n          .map(({ properties: { CRA_NAM } }) => CRA_NAM)\n          .sort();\n      });\n\n      setMap(newMap);\n  }, [groupedByArea]);\n\n  return map;\n}","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport { Map } from \"./Map\";\nimport { DataProvider } from \"./DataProvider\";\nimport { TweetsForArea } from \"./TweetsForArea\";\nimport { Paragraph } from \"./Paragraph\";\nimport { Section } from \"./Section\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { Sources } from \"./Sources\";\nimport { AreaPageHeader } from \"./AreaPageHeader\";\nimport paragraphStyles from \"./paragraph.module.scss\";\nimport { Units } from \"./Units\";\n\nexport const DispatchArea = ({ area }) => {\n  return (\n    <DataProvider filters={{ area }}>\n      <Section styleOption={1}>\n        <Paragraph\n          content={\n            <Link className={paragraphStyles.link} to=\"/\">\n              « main page\n            </Link>\n          }\n        />\n      </Section>\n\n      <Section styleOption={2}>\n        <AreaPageHeader area={area} />\n      </Section>\n\n      <Section styleOption={2} edgeToEdge={true}>\n        <ErrorBoundary>\n          <Map area={area} />\n        </ErrorBoundary>\n      </Section>\n\n      <Section styleOption={2}>\n        <Paragraph title=\"Today's Incidents\" />\n        <TweetsForArea />\n      </Section>\n\n      <Section styleOption={3}>\n        <Sources />\n        <Units />\n      </Section>\n    </DataProvider>\n  );\n};\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\nimport { DispatchAll } from \"./dispatch/DispatchAll\";\nimport { DispatchArea } from \"./dispatch/DispatchArea\";\nimport { StatusProvider } from \"./dispatch/StatusContext\";\nimport { UserProvider } from \"./dispatch/UserProvider\";\nimport \"./colors.scss\";\n// import styles from \"./app.module.scss\";\nimport { ThemeProvider } from \"./dispatch/ThemeContext\";\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <ThemeProvider>\n        <StatusProvider>\n          <Router>\n            <UserProvider path=\"/\">\n              <DispatchAll default />\n            </UserProvider>\n            <UserProvider path=\":area\">\n              <DispatchArea path=\"/\" />\n            </UserProvider>\n          </Router>\n        </StatusProvider>\n      </ThemeProvider>\n    </React.StrictMode>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport const register = (config) => {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport const unregister = () => {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./custom.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"group_app__36m5B\",\"light\":\"group_light__3vLZi\",\"dusk\":\"group_dusk__jCyaT\",\"dark\":\"group_dark__XPv8q\",\"container\":\"group_container___U6Y6\",\"item\":\"group_item__1Q6Q7\",\"compact\":\"group_compact__3RHbB\",\"totals\":\"group_totals__x3bRJ\",\"empty\":\"group_empty__1z_Ai\",\"left\":\"group_left__29_f7\",\"phone\":\"group_phone__rXIIG\",\"area\":\"group_area__3alEV\",\"text\":\"group_text__1JC9o\",\"list\":\"group_list__c2KEa\",\"mini\":\"group_mini__151IU\",\"major\":\"group_major__2byd-\",\"active\":\"group_active__2THyL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"rehoboam_app__2vSZA\",\"light\":\"rehoboam_light__rziQr\",\"dusk\":\"rehoboam_dusk__3zUc9\",\"dark\":\"rehoboam_dark__2QkVw\",\"container\":\"rehoboam_container__28M8-\",\"counter\":\"rehoboam_counter__33zQ-\",\"axis\":\"rehoboam_axis__10Kxw\",\"path\":\"rehoboam_path__2oGje\",\"maincircle\":\"rehoboam_maincircle__UPFVE\",\"events\":\"rehoboam_events__24i6B\",\"outer\":\"rehoboam_outer__i-sFc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"tweet_app__1YKqt\",\"light\":\"tweet_light__2q2wS\",\"dusk\":\"tweet_dusk__2D2WU\",\"dark\":\"tweet_dark__1Q5ft\",\"container\":\"tweet_container__2cPfJ\",\"detailed\":\"tweet_detailed__1zw6b\",\"phone\":\"tweet_phone__2hHRD\",\"greyedOut\":\"tweet_greyedOut__187c4\",\"tweet\":\"tweet_tweet__2okc-\",\"active\":\"tweet_active__1wASL\",\"details\":\"tweet_details__165yi\",\"units\":\"tweet_units__2ZVmK\",\"location\":\"tweet_location__26Q8k\",\"compass\":\"tweet_compass__wr41H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"section_app__2Vo_9\",\"light\":\"section_light__3Rzwq\",\"dusk\":\"section_dusk__2n8zA\",\"dark\":\"section_dark__3d7sN\",\"section\":\"section_section__1TT8J\",\"content\":\"section_content__32e_z\",\"phone\":\"section_phone__C_IbC\",\"styleDefault\":\"section_styleDefault__1fobi\",\"style1\":\"section_style1__-PHu2\",\"style2\":\"section_style2__3JfYX\",\"style3\":\"section_style3__120EE\",\"style4\":\"section_style4__15b6S\",\"style5\":\"section_style5__1cXrW\",\"style6\":\"section_style6__2Pnph\",\"style7\":\"section_style7__2TUBO\",\"style8\":\"section_style8__2W_h1\",\"styleMap\":\"section_styleMap__2ZHhK\",\"subcontent\":\"section_subcontent__1yzVR\",\"edgeToEdge\":\"section_edgeToEdge__28iHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"topline_app__oxYOD\",\"light\":\"topline_light__3Wkuy\",\"dusk\":\"topline_dusk__3oZf9\",\"dark\":\"topline_dark__2sg1O\",\"topline\":\"topline_topline__3XNKt\",\"phone\":\"topline_phone__2VHBk\",\"text\":\"topline_text__2_5SM\",\"total\":\"topline_total__b2Zkr\",\"date\":\"topline_date__2k6ha\",\"stale\":\"topline_stale__2X1gI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"history_app__3ezRX\",\"light\":\"history_light__2fQs9\",\"dusk\":\"history_dusk__1n3Kx\",\"dark\":\"history_dark__2VOIx\",\"container\":\"history_container__jp729\",\"svg\":\"history_svg__wHz8f\",\"previous\":\"history_previous__1tjyT\",\"current\":\"history_current__2e2uB\",\"years\":\"history_years__2UEbj\",\"left\":\"history_left__YNLcK\",\"right\":\"history_right___nK7k\",\"axis\":\"history_axis__1LX0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"paragraph_app__SRHrQ\",\"light\":\"paragraph_light__MGZls\",\"dusk\":\"paragraph_dusk__2Qeix\",\"dark\":\"paragraph_dark__20gM1\",\"paragraph\":\"paragraph_paragraph__2KRp8\",\"link\":\"paragraph_link__2D61j\",\"text\":\"paragraph_text__1NbBg\",\"margin\":\"paragraph_margin__uTVtm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"tweetdetails_app__2e3dp\",\"light\":\"tweetdetails_light__1bFOl\",\"dusk\":\"tweetdetails_dusk__CdslP\",\"dark\":\"tweetdetails_dark__1vbtk\",\"container\":\"tweetdetails_container__1rcoE\",\"explanation\":\"tweetdetails_explanation__3lEx4\",\"secondary\":\"tweetdetails_secondary__sgHzU\",\"unit\":\"tweetdetails_unit__33Rog\",\"link\":\"tweetdetails_link__23U3X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"chart_app__NgggY\",\"light\":\"chart_light__26OQU\",\"dusk\":\"chart_dusk__tXZzv\",\"dark\":\"chart_dark__2_Xz6\",\"container\":\"chart_container__3RTag\",\"header\":\"chart_header__3gCPW\",\"svg\":\"chart_svg__pP08z\",\"total\":\"chart_total__qkQSI\",\"title\":\"chart_title__2BYUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"punchcard_app__3zFJM\",\"light\":\"punchcard_light__3awiA\",\"dusk\":\"punchcard_dusk__3Fp1M\",\"dark\":\"punchcard_dark__14k53\",\"element\":\"punchcard_element__1QO6I\",\"axis\":\"punchcard_axis__1nRhh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"map_app__QgyhH\",\"light\":\"map_light__1l7Uw\",\"dusk\":\"map_dusk__1Kp5m\",\"dark\":\"map_dark__3mN3y\",\"container\":\"map_container__1WM_n\",\"phone\":\"map_phone__1XpbO\",\"area\":\"map_area__1ZdwJ\",\"pane\":\"map_pane__g9Le7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"spark_app__36AlW\",\"light\":\"spark_light__2xEJ2\",\"dusk\":\"spark_dusk__3_z2Z\",\"dark\":\"spark_dark__kLY0-\",\"container\":\"spark_container__20mVH\",\"total\":\"spark_total__2Kxtk\",\"axis\":\"spark_axis__3_eAv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"areashape_app__1jcgu\",\"light\":\"areashape_light__2vos_\",\"dusk\":\"areashape_dusk__1spjy\",\"dark\":\"areashape_dark__3xOoz\",\"container\":\"areashape_container__3TA09\",\"phone\":\"areashape_phone__ZKBlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tweets\":\"tweets_tweets__PhO0z\",\"placeholder\":\"tweets_placeholder__3XAe5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"freshness_app__1pyQO\",\"light\":\"freshness_light__35wVx\",\"dusk\":\"freshness_dusk__7082x\",\"dark\":\"freshness_dark__TBbwG\",\"time\":\"freshness_time__3D6Db\",\"stale\":\"freshness_stale__2kR_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"themeswitch_app__2HrZq\",\"light\":\"themeswitch_light__3BWCp\",\"dusk\":\"themeswitch_dusk__1o_VU\",\"dark\":\"themeswitch_dark__2wyZC\",\"button\":\"themeswitch_button__EJKnS\",\"selected\":\"themeswitch_selected__3Zb_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"svg_app__NZ3Nl\",\"light\":\"svg_light__1tyT3\",\"dusk\":\"svg_dusk__yqXl9\",\"dark\":\"svg_dark__mmljC\",\"axis\":\"svg_axis__bET8j\",\"path\":\"svg_path__EmZTS\",\"highlight\":\"svg_highlight__1dzK0\",\"previous\":\"svg_previous__19uFf\",\"current\":\"svg_current__mnSmX\",\"event\":\"svg_event__3Oor8\",\"outer\":\"svg_outer__1Nag9\",\"container\":\"svg_container__2ylni\",\"live\":\"svg_live__2Jj88\",\"now\":\"svg_now__2CbCS\",\"pulse\":\"svg_pulse__2GGpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"units_app__3sCiT\",\"light\":\"units_light__3P4R4\",\"dusk\":\"units_dusk__HFWIi\",\"dark\":\"units_dark__2VyXw\",\"unitKey\":\"units_unitKey__3Yi1N\",\"unitValue\":\"units_unitValue__2hCKn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"dot_app__388Wy\",\"light\":\"dot_light__28cvX\",\"dusk\":\"dot_dusk__1ZXDI\",\"dark\":\"dot_dark__1vewJ\",\"container\":\"dot_container__2mpYP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"legend_app__3eMcH\",\"light\":\"legend_light__1wq_m\",\"dusk\":\"legend_dusk__1H7LY\",\"dark\":\"legend_dark__7TXq5\",\"legend\":\"legend_legend__1pAdz\"};"],"sourceRoot":""}