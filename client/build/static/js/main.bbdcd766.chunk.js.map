{"version":3,"sources":["dispatch/svg.module.scss","dispatch/rehoboam.module.scss","dispatch/tweet.module.scss","dispatch/group.module.scss","dispatch/section.module.scss","dispatch/history.module.scss","dispatch/paragraph.module.scss","dispatch/chart.module.scss","dispatch/topline.module.scss","dispatch/tweetdetails.module.scss","dispatch/punchcard.module.scss","dispatch/map.module.scss","dispatch/areashape.module.scss","dispatch/spark.module.scss","dispatch/tweets.module.scss","dispatch/themeswitch.module.scss","dispatch/freshness.module.scss","dispatch/legend.module.scss","dispatch/ThemeContext.jsx","clientUtils.js","dispatch/MapDot.jsx","api.jsx","dispatch/StatusContext.jsx","dispatch/Annotations.jsx","dispatch/DataProvider.jsx","dispatch/UserProvider.jsx","dispatch/mapOptions.js","dispatch/geojson.js","dispatch/Map.jsx","dispatch/ErrorBoundary.jsx","dispatch/AreaShape.jsx","dispatch/SvgDot.jsx","dispatch/Spark.jsx","dispatch/GroupByArea.jsx","dispatch/MultiLine.jsx","dispatch/Header.jsx","dispatch/Topline.jsx","dispatch/Rehoboam.jsx","dispatch/Section.jsx","dispatch/Paragraph.jsx","dispatch/HistoryEvents.jsx","dispatch/History.jsx","groupingOptions.js","dispatch/TweetDetails.jsx","dispatch/Tweet.jsx","dispatch/TweetList.jsx","dispatch/TweetsActive.jsx","dispatch/TweetsMajor.jsx","dispatch/Sources.jsx","dispatch/Freshness.jsx","dispatch/Legend.jsx","dispatch/ThemeSwitch.jsx","dispatch/PunchCardAnnotations.jsx","dispatch/PunchCard.jsx","dispatch/DispatchAll.jsx","dispatch/TweetsForArea.jsx","dispatch/AreaPageHeader.jsx","dispatch/neighborhoods.js","dispatch/DispatchArea.jsx","App.jsx","serviceWorker.js","index.tsx"],"names":["module","exports","ThemeContext","createContext","ThemeProvider","children","value","useState","theme","setTheme","useEffect","useTheme","Provider","id","className","intervalExtent","start","end","expandMinutes","expand","extent","d3timeMinute","offset","queryText","isPhone","window","matchMedia","matches","timeFormatter","timestamp","format","timezone","timeFormatterUserTimezone","date","guess","timeFormatterHourAM","timeFormatterMonth","every6Hours","map","h","months","Array","_","i","isActive","derived","active","isExactlySev1","severity","isExactlySev2","getStyleProp","prop","appElement","document","getElementById","getComputedStyle","getPropertyValue","Appearance","MapDot","coordinates","appearance","useContext","color","setColor","regularColor","activeColor","opacity","baseRadius","Circle","center","radius","fill","fillOpacity","stroke","weight","getStatus","a","getByAPI","getAnnotations","getHistory","getPunchCard","getTweetsForArea","area","queryParams","getTweetsForAreaMin","minimize","hiRes","getTweetsForAreaMinWeek","compare","getTweetsByArea","getTweetsMajor","getTweetsActive24","queryString","query","list","Object","keys","key","encodeURIComponent","join","api","fetch","length","headers","Accept","response","json","textureCurrent","texturePrevious","deepEqual","require","StatusContext","StatusProvider","status","setStatus","previousStatus","setPreviousStatus","console","log","delay","checkForUpdates","newStatus","env","title","intervalId","setInterval","clearInterval","useStatus","DataContext","currentInterval","dataset","intervals","previousInterval","DataProvider","filters","initialValue","filteredByArea","filteredByAreaMin","filteredByAreaMinWeek","activeOrMajorForArea","activeOrMajorByArea","groupedByArea","history","active24","major24","annotations","punchCard","setValue","mostRecentId","undefined","setFilteredByArea","setFilteredByAreaMin","setFilteredByAreaMinWeek","setActiveOrMajorForArea","setActiveOrMajorByArea","setGroupedByArea","setHistory","setActive24","setMajor24","setAnnotations","setPunchCard","shouldFetch","setShouldFetch","activeOrMajor","values","useTweets","UserContext","UserContextKeys","useUser","user","setUser","setSelection","UserProvider","mapOptions","phone","url","attribution","nhoodFeaturesByArea","features","forEach","feature","properties","push","byArea","nhoods","featuresForArea","nhood","areas","geojson","areaProp","cityGeojson","city","defaultCentroid","mapBounds","lat","long","centroid","coords","geometry","flat","latExtent","d3extent","longExtent","d3mean","Map","geoColor","geojsonStyleBounds","strokeOpacity","geojsonStyleActive","fillColor","typeFilter","selectedTweet","rendered","filter","zoom","defaultZoom","isSelectedDot","id_str","data","type","selectedIndex","findIndex","slice","appearanceFn","d","tileOptions","classnames","styles","container","minZoom","maxZoom","maxBounds","maxBoundsViscosity","zoomControl","TileLayer","GeoJSON","style","CRA_NAM","ErrorBoundary","props","state","hasError","error","errorInfo","this","React","Component","AreaShape","warn","geojsonStyle","attributionControl","dragging","keyboard","SvgDot","sev1","sev2","svgStyles","live","width","height","event","cx","size","cy","r","outer","Spark","showTotal","useCumulative","showPrevious","svgData","setSvgData","nowDot","setNowDot","svgWidth","svgHeight","margin","top","right","bottom","left","accessor","cumulative","xExtent","yExtent","d3max","flatMap","bins","xScale","d3scaleTime","domain","range","yScale","d3scaleLinear","line","d3line","curve","d3curveCardinal","tension","x","x0","y","newSvgData","path","reverse","lastBin","total","lastIndex","sparkStyles","transform","current","now","Totals","totals","GroupByArea","totalsMap","setTotalsMap","setData","sortedData","sort","areaA","intervalsA","areaB","intervalsB","activeA","sev1A","sev2A","activeB","sev1B","sev2B","totalA","totalB","item","text","to","mini","MultiLine","showHeader","xAxisRef","useRef","yAxisRef","xAxis","d3axisBottom","scale","tickValues","tickFormat","tickSize","d3select","call","yAxis","d3axisLeft","ticks","chartStyles","header","chart","axis","ref","Header","Topline","totalContent","totalElement","topline","Date","Rehoboam","svgPath","setSvgPath","circles","setCircles","setTotal","axisRef","mainRadius","binsHiRes","maxLength","radialData","fraction","Math","PI","toRadial","d3lineRadial","radialGen","angleScale","axisRadialInner","activeOrMajorValues","newCircles","theta","sin","cos","counter","svg","maincircle","events","Section","styleOption","edgeToEdge","styleDefault","section","content","subcontent","Paragraph","h1","paragraph","Annotations","currentStart","rectWidth","scales","clipPaths","calloutsRef","regionsRef","regions","setRegions","annotationColor","textureColor","textures","lines","orientation","calloutFn","label","isEnd","sideX","sideY","callout","note","subject","nx","ny","dx","dy","calloutsSvgData","Boolean","d3annotation","d3annotationCalloutCircle","newRegions","isCurrent","texture","previous","annotation","clipPath","HistoryEvents","dayHeight","intervalCurrent","intervalPrevious","binsCurrent","binsLowRes","binsPrevious","mapper","count","stack","index","sev2Current","sev2Previous","toCirclesGen","side","toCirclesCurrent","toCirclesPrevious","circlesCurrent","circlesPrevious","closedPath","first","extraBottom","extraTop","History","setScales","setCurrentStart","paths","setPaths","setClipPaths","yearWidth","maxBarWidth","annotationRectWidth","svgRef","getCurrentInterval","getPreviousInterval","timeExtent","getIntervalExtent","b","m","v","clone","add","toDate","everyMonth","lineCurrent","linePrevious","pathCurrent","pathPrevious","clipLineCurrent","clipLinePrevious","pixelOffset","invert","clipPathCurrent","clipPathPrevious","historyStyles","years","AreaAccessors","ZipCode","zip","Area","neighborhoodGroup","AreaSecondary","neighborhood","Default","TweetDetails","tweet","address","units","unitsList","split","unitsStr","n","Number","parseFloat","toFixed","secondary","unit","TweetModes","Tweet","mode","isGreyedOut","isDetailed","time","detailed","greyedOut","onClick","newSelectedTweet","details","location","description","TweetList","tweets","placeholder","selected","t","TweetsActive","TweetsMajor","Sources","sources","href","Freshness","lastUpdated","seattle","seattleTZ","userTZ","same","displayUser","displaySeattle","Legend","legend","ThemeSwitch","themes","button","toLowerCase","PunchCardAnnotations","cellSize","availableWidth","day","hour2","wrap","align","PunchCardElements","elements","element","PunchCard","week","dayAggregates","hourAggregates","texturesRef","weekSpecs","setWeekSpecs","dayAggregateSpecs","setDayAggregateSpecs","hourAggregateSpecs","setHourAggregateSpecs","horizontalRight","elementSize","d3a","avg","min","max","xDomain","xRange","d3scaleOrdinal","d3axisTop","d3axisRight","hour","iDay","iHour","color1","color2","color3","color4","texture1","strokeWidth","texture2","texture3","texture4","offsetValue","offsetMax","maxRadius","newWeekSpecs","sqrt","toAggregateElementSpec","newDayAggregateSpecs","spec","newHourAggregateSpecs","DispatchAll","intro","major","notes","TweetsForArea","filtered","AreaPageHeader","neighborhoodsMap","setMap","newMap","useNeighborhoods","decodedArea","decodeURIComponent","subareas","subarea","DispatchArea","paragraphStyles","link","App","StrictMode","default","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,MAAQ,mBAAmB,KAAO,kBAAkB,KAAO,kBAAkB,KAAO,kBAAkB,KAAO,kBAAkB,UAAY,uBAAuB,SAAW,sBAAsB,QAAU,qBAAqB,MAAQ,mBAAmB,MAAQ,mBAAmB,UAAY,uBAAuB,KAAO,kBAAkB,IAAM,iBAAiB,MAAQ,qB,2BCA5ZD,EAAOC,QAAU,CAAC,IAAM,sBAAsB,MAAQ,wBAAwB,KAAO,uBAAuB,KAAO,uBAAuB,UAAY,4BAA4B,QAAU,0BAA0B,KAAO,uBAAuB,KAAO,uBAAuB,WAAa,6BAA6B,OAAS,yBAAyB,MAAQ,0B,kBCAtWD,EAAOC,QAAU,CAAC,IAAM,mBAAmB,MAAQ,qBAAqB,KAAO,oBAAoB,KAAO,oBAAoB,UAAY,yBAAyB,SAAW,wBAAwB,MAAQ,qBAAqB,UAAY,yBAAyB,MAAQ,qBAAqB,OAAS,sBAAsB,QAAU,uBAAuB,MAAQ,qBAAqB,SAAW,0B,kBCA7YD,EAAOC,QAAU,CAAC,IAAM,mBAAmB,MAAQ,qBAAqB,KAAO,oBAAoB,KAAO,oBAAoB,UAAY,yBAAyB,KAAO,oBAAoB,KAAO,oBAAoB,KAAO,oBAAoB,KAAO,oBAAoB,KAAO,oBAAoB,MAAQ,qBAAqB,MAAQ,qBAAqB,OAAS,wB,gBCA7WD,EAAOC,QAAU,CAAC,IAAM,qBAAqB,MAAQ,uBAAuB,KAAO,sBAAsB,KAAO,sBAAsB,QAAU,yBAAyB,QAAU,yBAAyB,MAAQ,uBAAuB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,OAAS,wBAAwB,OAAS,wBAAwB,OAAS,wBAAwB,OAAS,wBAAwB,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,WAAa,4BAA4B,WAAa,8B,gBCA3nBD,EAAOC,QAAU,CAAC,IAAM,qBAAqB,MAAQ,uBAAuB,KAAO,sBAAsB,KAAO,sBAAsB,UAAY,2BAA2B,IAAM,qBAAqB,SAAW,0BAA0B,QAAU,yBAAyB,MAAQ,uBAAuB,KAAO,sBAAsB,MAAQ,uBAAuB,KAAO,wB,oBCAlXD,EAAOC,QAAU,CAAC,IAAM,uBAAuB,MAAQ,yBAAyB,KAAO,wBAAwB,KAAO,wBAAwB,UAAY,6BAA6B,KAAO,wBAAwB,KAAO,wBAAwB,OAAS,4B,mBCA9PD,EAAOC,QAAU,CAAC,IAAM,mBAAmB,MAAQ,qBAAqB,KAAO,oBAAoB,KAAO,oBAAoB,UAAY,yBAAyB,OAAS,sBAAsB,IAAM,mBAAmB,MAAQ,qBAAqB,MAAQ,uB,gBCAhQD,EAAOC,QAAU,CAAC,IAAM,qBAAqB,MAAQ,uBAAuB,KAAO,sBAAsB,KAAO,sBAAsB,QAAU,yBAAyB,MAAQ,uBAAuB,KAAO,sBAAsB,KAAO,sBAAsB,MAAQ,yB,gBCA1QD,EAAOC,QAAU,CAAC,IAAM,0BAA0B,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,2BAA2B,UAAY,gCAAgC,YAAc,kCAAkC,UAAY,gCAAgC,KAAO,2BAA2B,KAAO,6B,kBCA3UD,EAAOC,QAAU,CAAC,IAAM,uBAAuB,MAAQ,yBAAyB,KAAO,wBAAwB,KAAO,wBAAwB,QAAU,2BAA2B,KAAO,0B,uBCA1LD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,MAAQ,mBAAmB,KAAO,kBAAkB,KAAO,kBAAkB,UAAY,uBAAuB,MAAQ,mBAAmB,KAAO,kBAAkB,KAAO,oB,004CCApND,EAAOC,QAAU,CAAC,IAAM,uBAAuB,MAAQ,yBAAyB,KAAO,wBAAwB,KAAO,wBAAwB,UAAY,6BAA6B,MAAQ,2B,gBCA/LD,EAAOC,QAAU,CAAC,IAAM,mBAAmB,MAAQ,qBAAqB,KAAO,oBAAoB,KAAO,oBAAoB,UAAY,yBAAyB,MAAQ,uB,gBCA3KD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,YAAc,8B,gBCAhED,EAAOC,QAAU,CAAC,IAAM,yBAAyB,MAAQ,2BAA2B,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,4BAA4B,SAAW,gC,63ICAtMD,EAAOC,QAAU,CAAC,IAAM,uBAAuB,MAAQ,yBAAyB,KAAO,wBAAwB,KAAO,wBAAwB,KAAO,0B,gBCArJD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,MAAQ,sBAAsB,KAAO,qBAAqB,KAAO,qBAAqB,OAAS,yB,6PCI9HC,EAAeC,0BA2BfC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxBC,EA1BS,WAAO,IAAD,EACKC,mBAAS,QADd,mBACdC,EADc,KACPC,EADO,KAsBrB,OAnBAC,qBAAU,cAiBP,IAEI,CAAEF,QAAOC,YAIFE,GACNH,EAAUF,EAAVE,MACR,OACE,kBAACN,EAAaU,SAAd,CAAuBN,MAAOA,GAC5B,yBAAKO,GAAG,MAAMC,UAAWN,GACtBH,K,0BCnCIU,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,IAAOC,EAAjB,uDAAiC,EAAjC,OAC5BC,EAAO,CAACH,EAAOC,GAAMC,IAGVC,EAAS,SAACC,GAAD,IAASF,EAAT,uDAAyB,EAAzB,MAA+B,CACnDG,IAAaC,OAAOF,EAAO,IAAKF,GAChCG,IAAaC,OAAOF,EAAO,GAAIF,KAM3BK,EAAS,6CADO,IACP,OAEFC,EAAU,kBACrBC,UAAWA,OAAOC,WAAWH,GAAWI,SAI7BC,EAAgB,SAACC,GAAD,IAAYC,EAAZ,uDAAqB,SAArB,OAC3BC,aAASF,EAFa,qBAEeC,OAAOA,IAEjCE,EAA4B,SAACC,GAAD,IAAOH,EAAP,uDAAgB,SAAhB,OACvCC,aAASE,EAAMF,KAASG,SAASJ,OAAOA,IAE7BK,EAAsB,SAACN,GAAD,OACjCD,EAAcC,EAAW,QAEdO,EAAqB,SAACP,GAAD,OAChCD,GAAeC,EAAW,QASfQ,EAAc,SAACrB,GAAD,MACzB,CAAC,EAAG,EAAG,GAAI,GAAI,IAAIsB,KAAI,SAACC,GAAD,OAAOvB,EAFnB,KAE2BuB,MAClCC,EAAS,YAAI,IAAIC,MAAM,KAAKH,KAAI,SAACI,EAAGC,GAAJ,OAAUA,KAMnCC,EAAW,SAAC,GAAD,SAAGC,QAAWC,QAGzBC,EAAgB,SAAC,GAAD,OAA4C,IAA5C,EAAGF,QAAWG,UAC9BC,EAAgB,SAAC,GAAD,OAA4C,IAA5C,EAAGJ,QAAWG,UAE9BE,EAAe,SAACC,GAC3B,IAAMC,EAAaC,SAASC,eAAe,OAEzC,OADcC,iBAAiBH,GAClBI,iBAAiBL,ICrDrBM,EACH,EADGA,GAEF,EAFEA,EAGE,EAGFC,EAAS,SAAC,GAKhB,IAJLC,EAII,EAJJA,YAII,IAHJX,gBAGI,MAHO,EAGP,MAFJF,cAEI,aADJc,kBACI,MADSH,EACT,EACIjD,EAAUqD,qBAAW3D,GAArBM,MADJ,EAEsBD,mBAAS,MAF/B,mBAEGuD,EAFH,KAEUC,EAFV,KAIJrD,qBAAU,WACR,IAAMsD,EAAed,EAAa,mBAC5Be,EAAcf,EAAa,UACjCa,EAASjB,EAASmB,EAAcD,KAC/B,CAAClB,EAAQtC,IAGZ,IAAI0D,EAAU,GACVlB,GAAY,IACdkB,EAAU,KAERpB,IACFoB,EAAU,IAERN,IAAeH,IACjBS,EAAU,IAERN,IAAeH,IACjBS,EAAU,IAEZ,IAAMC,EAAarB,EAAS,IAAM,IAElC,OAAKa,EAAY,GAMf,oCACE,kBAACS,EAAA,EAAD,CACEC,OAAQV,EACRW,OAAQH,EACRL,MAAOA,EACPS,MAAM,EACNC,YAAaN,EACbO,QAAQ,IAETzB,GAAY,GACX,kBAACoB,EAAA,EAAD,CACEC,OAAQV,EACRW,OAAQH,EAAa,IACrBO,OAAQ,EACRZ,MAAOA,EACPI,QAASA,EACTK,MAAM,IAGTvB,GAAY,GACX,kBAACoB,EAAA,EAAD,CACEC,OAAQV,EACRW,OAAQH,EAAa,IACrBO,OAAQ,EACRZ,MAAOA,EACPI,QAASA,EACTK,MAAM,KA9BL,M,uBCxCJ,SAAeI,IAAtB,+B,4CAAO,sBAAAC,EAAA,+EACEC,GAAS,oBADX,4C,sBAIA,SAAeC,IAAtB,+B,4CAAO,sBAAAF,EAAA,+EACEC,GAAS,iCADX,4C,sBAIA,SAAeE,IAAtB,+B,4CAAO,sBAAAH,EAAA,+EACEC,GAAS,qBADX,4C,sBAIA,SAAeG,IAAtB,+B,4CAAO,sBAAAJ,EAAA,+EACEC,GAAS,uBADX,4C,sBAIA,SAAeI,EAAtB,oC,4CAAO,WAAgCC,EAAMC,GAAtC,SAAAP,EAAA,+EACEC,GAAS,mBAAD,OAAoBK,GAAQC,IADtC,4C,sBAIA,SAAeC,EAAtB,kC,4CAAO,WACLF,GADK,2BAAAN,EAAA,6DAELO,EAFK,+BAES,CAAEE,UAAU,EAAMC,OAAO,GAFlC,kBAIET,GAAS,mBAAD,OAAoBK,GAAQC,IAJtC,4C,sBAOA,SAAeI,EAAtB,kC,4CAAO,WACLL,GADK,2BAAAN,EAAA,6DAELO,EAFK,+BAES,CAAEE,UAAU,EAAMG,QAAS,GAFpC,kBAIEX,GAAS,mBAAD,OAAoBK,GAAQC,IAJtC,4C,sBAOA,SAAeM,GAAtB,mC,8CAAO,WAA+BN,GAA/B,SAAAP,EAAA,+EACEC,GAAS,yBAA0BM,IADrC,4C,sBAIA,SAAeO,KAAtB,gC,8CAAO,sBAAAd,EAAA,+EACEC,GAAS,0BADX,4C,sBAIA,SAAec,KAAtB,gC,8CAAO,sBAAAf,EAAA,+EACEC,GAAS,6BADX,4C,sBAYP,IAAMe,GAAc,WAAiB,IAAhBC,EAAe,uDAAP,GACrBC,EAAOC,OAAOC,KAAKH,GAAOvD,KAC9B,SAAC2D,GAAD,gBAAYC,mBAAmBD,GAA/B,YAAuCC,mBAAmBL,EAAMI,QAElE,OAAOH,EAAKK,KAAK,M,SAGJtB,K,8EAAf,8CAAAD,EAAA,6DAAwBwB,EAAxB,+BAA8B,GAAIjB,EAAlC,+BAAgD,GACxCU,EAAQD,GAAYT,GAD5B,SAEyBkB,MAAM,QAAD,OAClBD,GADkB,OACZP,EAAMS,OAAS,IAAM,IADT,OACcT,GACxC,CAEEU,QAAS,CAAEC,OAAQ,sBANzB,cAEQC,EAFR,yBAUSA,EAASC,QAVlB,4C,sBC/DA,ICUIC,GACAC,GDXEC,GAAYC,EAAQ,IAEbC,GAAgB5G,0BAwChB6G,GAAiB,SAAC,GAAkB,IAAhB3G,EAAe,EAAfA,SACzBC,EAvCU,WAAO,IAAD,EACMC,mBAAS,IADf,mBACf0G,EADe,KACPC,EADO,OAEsB3G,mBAAS,IAF/B,mBAEf4G,EAFe,KAECC,EAFD,KAmCtB,OA/BA1G,qBAAU,WAGR2G,QAAQC,IAAR,0DAC2CC,GAD3C,aAGA,IAAMC,EAAe,uCAAG,4BAAA5C,EAAA,sEACED,IADF,OAChB8C,EADgB,OASjBZ,GAAUI,EAAQQ,KACrBJ,QAAQC,IAAI,gCAAiCG,GAC7CL,EAAkBH,GAClBC,EAAUO,IAGO,gBAAfR,EAAOS,MACTrE,SAASsE,MAAQ,mBAhBG,2CAAH,qDAoBrBH,IACA,IAAMI,EAAaC,YAAYL,EA1BjB,KA2Bd,OAAO,kBAAMM,cAAcF,MAC1B,CAACX,IAEG,CAAEA,SAAQE,kBAIHY,GACd,OACE,kBAAChB,GAAcnG,SAAf,CAAwBN,MAAOA,GAAQD,IEjCrCwG,GAAYC,EAAQ,IAEbkB,GAAc7H,0BAEd8H,GAAkB,SAACC,GAAD,OAAaA,EAAQ,GAAGC,UAAU,IACpDC,GAAmB,SAACF,GAAD,OAAaA,EAAQ,GAAGC,UAAU,IAiIrDE,GAAe,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASjI,EAAe,EAAfA,SAChCC,EAhIU,WAAmB,IAAlBgI,EAAiB,uDAAP,GACrBC,EAAe,CACnBC,eAAgB,GAChBC,kBAAmB,GACnBC,sBAAuB,GACvBC,qBAAsB,GACtBC,oBAAqB,GACrBC,cAAe,GACfC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,YAAa,GACbC,UAAW,GACXjC,OAAQ,IAbwB,EAeR1G,mBAASgI,GAfD,mBAe3BjI,EAf2B,KAepB6I,EAfoB,OAgBCtF,qBAAWkD,IAAtCE,EAhB0B,EAgB1BA,OAAQE,EAhBkB,EAgBlBA,eACViC,EAAejC,EAAeiC,aAChCnC,EAAOmC,kBACPC,EAEAD,GACF/B,QAAQC,IAAR,kCAAuC8B,IAtBP,MAyBU7I,mBAAS,IAzBnB,mBAyB3BiI,EAzB2B,KAyBXc,EAzBW,OA0BgB/I,mBAAS,IA1BzB,mBA0B3BkI,EA1B2B,KA0BRc,EA1BQ,OA2BwBhJ,mBAAS,IA3BjC,mBA2B3BmI,EA3B2B,KA2BJc,EA3BI,OA4BsBjJ,mBAAS,IA5B/B,mBA4B3BoI,EA5B2B,KA4BLc,EA5BK,OA6BoBlJ,mBAAS,IA7B7B,mBA6B3BqI,EA7B2B,KA6BNc,EA7BM,OA8BQnJ,mBAAS,IA9BjB,mBA8B3BsI,EA9B2B,KA8BZc,EA9BY,OA+BJpJ,mBAAS,IA/BL,mBA+B3BuI,EA/B2B,KA+BlBc,EA/BkB,OAgCFrJ,mBAAS,IAhCP,mBAgC3BwI,EAhC2B,KAgCjBc,EAhCiB,OAiCJtJ,mBAAS,IAjCL,mBAiC3ByI,GAjC2B,KAiClBc,GAjCkB,QAkCIvJ,mBAAS,IAlCb,qBAkC3B0I,GAlC2B,MAkCdc,GAlCc,SAmCAxJ,mBAAS,IAnCT,qBAmC3B2I,GAnC2B,MAmChBc,GAnCgB,SAqCIzJ,oBAAS,GArCb,qBAqC3B0J,GArC2B,MAqCdC,GArCc,MA4HlC,OArFAxJ,qBAAU,WACHmG,GAAUI,EAAQE,IACrB+C,IAAe,KAEhB,CAACjD,EAAQE,IAEZzG,qBAAU,WACR,GAAKuJ,GAAL,CAIA5C,QAAQC,IAAI,2CACZ4C,IAAe,GAEf,IAAMhF,EAAOoD,EAAQpD,MAAQ,UAE7BmC,QAAQC,IAAI,yBAA0BpC,GACzB,YAATA,GACF,sBAAC,sBAAAN,EAAA,kEACC2E,EADD,SAC4BnE,EAAoBF,GADhD,8CAECsE,EAFD,SAEgCjE,EAAwBL,GAFxD,6EAAD,GAMF,sBAAC,sBAAAN,EAAA,kEACC0E,EADD,SACyBrE,EAAiBC,GAD1C,4EAAD,GAIA,sBAAC,sBAAAN,EAAA,kEACC6E,EADD,SAESxE,EAAiBC,EAAM,CAAEiF,eAAe,IAFjD,4EAAD,GAMA,sBAAC,4BAAAvF,EAAA,sEACwBe,KADxB,OACOc,EADP,OAECoD,EAAYpD,EAAS,GAAG0B,UAAU,GAAGiC,QAFtC,0CAAD,GAKA,sBAAC,4BAAAxF,EAAA,sEACwBc,KADxB,OACOe,EADP,OAECqD,GAAWrD,EAAS,GAAG0B,UAAU,GAAGiC,QAFrC,0CAAD,GAKA,sBAAC,sBAAAxF,EAAA,kEACC+E,EADD,SACwBlE,KADxB,4EAAD,GAIA,sBAAC,sBAAAb,EAAA,kEACC8E,EADD,SAC8BjE,GAAgB,CAAE0E,eAAe,IAD/D,4EAAD,GAIA,sBAAC,sBAAAvF,EAAA,kEACCmF,GADD,SACsBjF,IADtB,4EAAD,GAKA,sBAAC,sBAAAF,EAAA,kEACCoF,GADD,SACoBhF,IADpB,4EAAD,GAIK8D,EAAQxC,QACX,sBAAC,sBAAA1B,EAAA,kEACCgF,EADD,SACkB7E,EAAWG,GAD7B,4EAAD,QAtDAmC,QAAQC,IAAI,2BA0Db,CAACgB,EAAQpD,KAAM4D,EAAQxC,OAAQ8C,EAAca,KAEhDvJ,qBAAU,WACRyI,EAAS,CACPX,iBACAC,oBACAC,wBACAG,gBACAC,UACAG,eACAC,aACAH,WACAC,WACAL,uBACAC,sBACA3B,aAED,CAAC8B,EAAUH,EAAqBD,EAAsBM,GAAaT,EAAgBC,EAAmBC,EAAuBG,EAAeC,EAASE,GAASE,GAAWjC,IAErK3G,EAIO+J,CAAU/B,GACxB,OAAO,kBAACN,GAAYpH,SAAb,CAAsBN,MAAOA,GAAQD,I,SCpJjCiK,GAAcnK,0BAEdoK,GACI,gBADJA,GAEC,aAGRC,GAAU,WAAO,IAAD,EACIjK,mBAAS,IADb,mBACbkK,EADa,KACPC,EADO,KAUpB,OAFAhK,qBAAU,WAAK2G,QAAQC,IAAI,oBAAmB,IAEvC,CAAEmD,OAAME,aAPM,SAAC1E,EAAK3F,GACzB+G,QAAQC,IAAR,gBAAqBrB,EAArB,WAAgC3F,GAChCoK,EAAQ,6BAAKD,GAAN,kBAAaxE,EAAM3F,QAQjBsK,GAAe,SAAC,GAAkB,IAAhBvK,EAAe,EAAfA,SAC7B,OACE,kBAACiK,GAAY1J,SAAb,CAAsBN,MAAOkK,MAAYnK,ICxBhCwK,GAAa,SAACrK,GAA0B,IAAnBsK,EAAkB,wDAC5CjF,EAAQiF,EAAQ,cAAgB,GACtC,MAAO,CACLC,IAAI,kCAAD,OAAoCvK,GAApC,OAA4CqF,GAC/CmF,YACE,8K,sCCeAC,GAXS,SAACC,EAAU/H,GACxB,IAAMb,EAAM,GAOZ,OANA4I,EAASC,SAAQ,SAACC,GAChB,IAAMnF,EAAMmF,EAAQC,WAAWlI,GACzB2C,EAAOxD,EAAI2D,IAAQ,GACzBH,EAAKwF,KAAKF,GACV9I,EAAI2D,GAAOH,KAENxD,EAGmBiJ,CAAOC,GAAON,SAdxB,WAoBLO,GALY,SAACC,GAAD,OAAWT,GAAoBS,IAO3CC,GAAQ,CACnBC,QAASJ,GACTK,SAxBgB,WA2BLC,GAAcC,GAIdC,GAAkB,CAFnB,UACH,WAGIC,GAAY,CACvB,CAACC,UAJM,UAIY,IACnB,CANU,SAMH,IAAKC,YAGDC,GAAW,SAAClB,GACvB,IAAKA,EAAS5E,OACZ,OAAO0F,GAGT,IAAIK,EAASnB,EACV5I,KAAI,qBAAGgK,SAAY3I,eACnB4I,KAAK,GACFC,EAAYC,aAASJ,GAAQ,uDAC7BK,EAAaD,aAASJ,GAAQ,mCAAEF,EAAF,iBAAeA,KACnD,MAAO,CAACQ,aAAOH,GAAYG,aAAOD,K,gDCrCvBE,GAAM,SAAC,GAAc,IAAD,EAAX1H,EAAW,EAAXA,KACZuF,EAAS5G,qBAAWyG,IAApBG,KACAjC,EAAmB3E,qBAAWmE,IAA9BQ,eACAhI,EAAUqD,qBAAW3D,GAArBM,MAER,IAAKgI,EAAelC,OAElB,OAAO,KAGT,IAAMuG,EAAW3J,EAAa,SAGxB4J,EAAqB,CACzBhJ,MAHqBZ,EAAa,gBAIlCsB,YAAa,EACbuI,cAAe,GACfrI,OAAQ,GAEJsI,EAAqB,CACzBlJ,MAAO+I,EACPI,UAAWJ,EACXrI,YAAa,GACbuI,cAAe,GACfrI,OAAQ,GAGFkH,EAAsBD,GAAtBC,QAASC,EAAaF,GAAbE,SAEXqB,EAAazC,EAAKF,IAClB4C,EAAgB1C,EAAKF,IAMrB6C,EADexB,EAAbV,SACkBmC,QAJL,SAAC,GAAD,IAAGhC,EAAH,EAAGA,WAAH,OACnBnG,GAAQmG,EAAWQ,KAAc3G,KAK/BoI,EAxCU,GAyCVpI,IACFoI,EAAOC,IAELJ,GAAiBA,EAActK,QAAQqJ,MACzCoB,EA9CQ,IAiDV,IAAMjJ,EACJ8I,GAAiBA,EAActK,QAAQqJ,IACnC,CAACiB,EAActK,QAAQqJ,IAAKiB,EAActK,QAAQsJ,MAElDC,GADAlH,EACSkI,EACAtB,GAAYZ,UAerBsC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAAgBN,EAAcM,SAAWA,GAK3DC,EADazF,GAAgBO,GACb4B,OACjB9H,KAnBY,SAAC,GAAD,IACbmL,EADa,EACbA,OADa,IAEb5K,QAFa,MAGR,CACL4K,SACAvB,IALa,EAEFA,IAIXC,KANa,EAEGA,KAKhBwB,KAPa,EAESA,KAMtB7J,MARa,EAEeA,MAO5BhB,OATa,EAEsBA,OAQnCE,SAVa,EAE8BA,aAkB1CqK,QAAO,gBAAGM,EAAH,EAAGA,KAAH,OAAeT,GAAcA,IAAeS,KAGtD,GAAIR,EAAe,CAEjB,IAAMS,EAAgBF,EAAKG,UAAUL,GAErCE,GACqB,IAAnBE,EACI,GADJ,sBAGSF,EAAKI,MAAM,EAAGF,IAHvB,YAISF,EAAKI,MAAMF,EAAgB,IAJpC,CAKMF,EAAKE,KAIf,IAAMG,EAAe,SAACC,GACpB,OAAOb,GAAiBA,EAActK,QAAQqJ,IAC1CsB,EAAcQ,GACZvK,EACAA,EACFA,GAGL4D,QAAQC,IAAI,gBAAgB6F,GAAiBA,EAActK,SAS5D,IAAMiI,EAAQtJ,IACRyM,EAAcpD,GAAWrK,EAAOsK,GAChCiB,EAAOD,GAAYZ,SAAS,GAElC,OACE,kBAAC,IAAD,CACEpK,UAAWoN,KAAWC,KAAOC,WAAR,mBAClBD,KAAOjJ,KAAOA,GADI,cAElBiJ,KAAOrD,MAAQA,GAFG,IAIrBzG,OAAQA,EACRiJ,KAAMA,EACNe,QA3HU,GA4HVC,QA3HM,GA4HNC,UAAWtC,GACXuC,mBAAoB,GACpBC,aAAa,GAEb,kBAACC,EAAA,EAAcT,IACb/I,GAAQ,kBAACyJ,EAAA,EAAD,CAASjB,KAAM3B,EAAM6C,MAAO9B,IACrCM,EAAS9K,KAAI,SAAC8I,GAAD,OACZ,kBAACuD,EAAA,EAAD,CACE1I,IAAKmF,EAAQC,WAAWwD,QACxBnB,KAAMtC,EACNwD,MAAO5B,OAGVU,EAAKpL,KAAI,SAAC0L,GAAD,OACR,kBAAC,EAAD,CACE/H,IAAK+H,EAAEP,OACP9J,YAAa,CAACqK,EAAE9B,IAAK8B,EAAE7B,MACvBnJ,SAAUgL,EAAEhL,SACZY,WAAYmK,EAAaC,GACzBlL,OAAQkL,EAAElL,c,oCC3JPgM,GAAb,oDACE,WAAYC,GAAQ,IAAD,+BACjB,cAAMA,IACDC,MAAQ,CAAEC,UAAU,GAFR,EADrB,+DAUoBC,EAAOC,GACvB9H,QAAQ6H,MAAM,gBAAiBA,EAAOC,KAX1C,+BAeI,OAAIC,KAAKJ,MAAMC,SACN,KAGFG,KAAKL,MAAM1O,YAnBtB,gDAMkC6O,GAC9B,MAAO,CAAED,UAAU,OAPvB,GAAmCI,IAAMC,W,oBCQ5BC,GAAY,SAAC,GAAc,IAAZrK,EAAW,EAAXA,KAClB1E,EAAUqD,qBAAW3D,GAArBM,MACF0K,EAAWO,GAAgBvG,GACjC,IAAKgG,IAAaA,EAAS5E,OAEzB,OADAe,QAAQmI,KAAK,iCAAkCtK,GACxC,KAGT,IAAM2H,EAAW3J,EAAa,SAExBuM,EAAe,CACnB3L,MAAO+I,EACPI,UAAWJ,EACXrI,YAAa,GACbE,OAAQ,GAGJL,EAAS+H,GAASlB,GAElBJ,EAAQtJ,IACRyM,EAAcpD,GAAWrK,EAAOsK,GAEtC,OACE,kBAAC,GAAD,KACE,kBAAC,IAAD,CACEhK,UAAWoN,KAAWC,KAAOC,UAAR,eAAsBD,KAAOrD,MAAQA,IAC1DzG,OAAQA,EACRiJ,KATO,GAUPe,QAVO,GAWPC,QAXO,GAYPG,aAAa,EACbiB,oBAAoB,EACpBC,UAAU,EACVC,UAAU,GAEV,kBAAClB,EAAA,EAAcT,GACf,kBAACU,EAAA,EAAD,CAASjB,KAAMxC,EAAU0D,MAAOa,O,mBC1C3BI,GAAS,SAAC,GAAgE,IAAD,IAA7DvL,cAA6D,MAApD,EAAoD,MAAjDxB,cAAiD,aAAjCgN,YAAiC,aAAnBC,YAAmB,SAI9E5L,EAAaG,GAAW,EAE9B,OACE,yBACExD,UAAWoN,KAAW8B,KAAU5B,UAAX,eAAyB4B,KAAUC,KAAOnN,IAC/DoN,MARS,GASTC,OATS,IAWT,4BAAQrP,UAAWkP,KAAUI,MAAOC,GAAIC,GAAUC,GAAID,GAAUE,EAAGrM,KACjE2L,GAAQC,IACR,4BAAQjP,UAAWkP,KAAUS,MAC3BJ,GAAIC,GACJC,GAAID,GACJE,EAfO,IAgBPjM,KAAK,SAGRwL,GACC,4BAAQjP,UAAWkP,KAAUS,MAC3BJ,GAAIC,GACJC,GAAID,GACJE,EAtBO,EAuBPjM,KAAK,W,qEChBFmM,GAAQ,SAAC,GAKf,IAAD,IAJJvI,iBAII,MAJQ,GAIR,EAHJwI,EAGI,EAHJA,UACAC,EAEI,EAFJA,cACAC,EACI,EADJA,aACI,EAC0BtQ,mBAAS,IADnC,mBACGuQ,EADH,KACYC,EADZ,OAEwBxQ,mBAAS,MAFjC,mBAEGyQ,EAFH,KAEWC,EAFX,KAKEC,EAAW1P,IAAY,GAAK,IAC5B2P,EAAY,GAAMD,EACtBE,EAAS,CACPC,IAAK/M,EACLgN,MAAOhN,EACPiN,OAAQjN,EACRkN,KAAMlN,GAER4L,EAAQgB,EAAWE,EAAOI,KAAOJ,EAAOE,MACxCnB,EAASgB,EAAYC,EAAOG,OAASH,EAAOC,IA6C9C,GA3CA3Q,qBAAU,WAER,GAAKyH,EAAU7B,OAAf,CAIA,IAAMoH,EAAOmD,EAAe1I,EAAYA,EAAU2F,MAAM,EAAG,GAErD2D,EAAW,SAAC,GAAD,IAAGnL,EAAH,EAAGA,OAAQoL,EAAX,EAAWA,WAAX,OACfd,EAAgBc,EAAapL,GAEzBqL,EAAU5Q,EAAe2M,EAAK,IAE9BkE,EAAU,CACd,EACAC,aAAM,CAAC,GAAF,mBAAUnE,EAAKoE,SAAQ,qBAAGC,QAAiBzP,IAAImP,OAGhDO,EAASC,eAAcC,OAAOP,GAASQ,MAAM,CAAC,EAAGjC,IACjDkC,EAASC,eAAgBH,OAAON,GAASO,MAAM,CAAChC,EAAQ,IAExDmC,EAAOC,eACVC,MAAMC,KAAgBC,QAAQ,KAC9BC,GAAE,SAAC3E,GAAD,OAAOgE,EAAOhE,EAAE4E,OAClBC,GAAE,SAAC7E,GAAD,OAAOoE,EAAOX,EAASzD,OAIxB8E,EAFUpF,EAAKpL,KAAI,SAAC0L,GAAD,OAAOA,EAAE+D,QAAMzP,IAAIgQ,GAEnBhQ,KAAI,SAACyQ,EAAMpQ,GAAP,MAAc,CAAEoQ,OAAM9M,IAAKtD,MAAMqQ,UAE5DjC,EAAW+B,GAEX,IAAMf,EAAOrE,EAAK,GAAGqE,KACrB,GAAIA,EAAKzL,OAAQ,CACf,IAAM2M,EAAUlB,EAAKA,EAAKzL,OAAS,GACnC2K,EAAU,CACRZ,GAAI2B,EAAOiB,EAAQL,IACnBrC,GAAI6B,EAAOX,EAASwB,IACpBzC,EAlDS,QAqDZ,CAACN,EAAOC,EAAQhI,EAAW0I,EAAcD,KAEvCzI,EAAU7B,OACb,OAAO,KAGT,IAAM4M,EAAQ/K,EAAU,GAAG+K,MACrBC,EAAYrC,EAAQxK,OAAS,EAEnC,OACE,yBAAKxF,UAAWsS,KAAYhF,WAC1B,yBAAK8B,MAAOgB,EAAUf,OAAQgB,GAC5B,uBAAGkC,UAAS,oBAAejC,EAAOI,KAAtB,YAA8BJ,EAAOC,IAArC,MACV,2BACGP,EAAQxO,KAAI,WAAaK,GAAb,IAAEoQ,EAAF,EAAEA,KAAK9M,EAAP,EAAOA,IAAP,OACX,0BACAA,IAAKA,EACHnF,UAAWoN,KAAW8B,KAAU+C,KAAX,eAClB/C,KAAUsD,QAAU3Q,IAAMwQ,IAE7BnF,EAAG+E,QAIR/B,GACC,uBAAGlQ,UAAWkP,KAAUuD,KACtB,2BAAYvC,MAKnBL,GAAa,0BAAM7P,UAAWsS,KAAYF,OAAQA,K,oBC1FnDM,GAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OAAKA,EAIH,oCACGA,EAAO3Q,OAAS,GACf,0BAAMhC,UAAWqN,KAAOrL,QACtB,kBAAC,GAAD,CAAQA,QAAQ,IAChB,8BAAO2Q,EAAO3Q,OAAd,MAGH2Q,EAAO1D,KAAO,GACb,8BACE,kBAAC,GAAD,CAAQA,MAAM,IACd,kCAAQ0D,EAAO1D,KAAf,MAGH0D,EAAO3D,KAAO,GACb,8BACE,kBAAC,GAAD,CAAQA,MAAM,IACd,kCAAQ2D,EAAO3D,KAAf,OAnBC,MA0BE4D,GAAc,WAAO,IAAD,EACgB7P,qBAAWmE,IAAlDa,EADuB,EACvBA,cAAeD,EADQ,EACRA,oBADQ,EAEGrI,mBAAS,IAFZ,mBAExBoT,EAFwB,KAEbC,EAFa,OAGPrT,mBAAS,IAHF,mBAGxBmN,EAHwB,KAGlBmG,EAHkB,KAIzB/I,EAAQtJ,IA+Cd,OA7CAd,qBAAU,WACR,GAAKkI,EAAoBtC,OAAzB,CAIA,IAAMhE,EAAM,GACZsG,EAAoBuC,SAAQ,YAA+B,IAAvBjG,EAAsB,EAA3Be,IACvBmE,EADkD,EAAhBjC,UACf,GAAGiC,OACxBA,EAAO9D,SACThE,EAAI4C,GAAQ,CACVpC,OAAQsH,EAAOiD,OAAOzK,GAAU0D,OAChCwJ,KAAM1F,EAAOiD,OAAOtK,GAAeuD,OACnCyJ,KAAM3F,EAAOiD,OAAOpK,GAAeqD,YAIzCsN,EAAatR,MACZ,CAACsG,IAEJlI,qBAAU,WACR,GAAKmI,EAAcvC,QAAWqN,EAA9B,CAIA,IAiBMG,EAAajL,EAAckL,MAjBR,SAAC,EAAD,GAGnB,IAFGC,EAEJ,EAFD/N,IAAuBgO,EAEtB,EAFW9L,UACP+L,EACJ,EADDjO,IAAuBkO,EACtB,EADWhM,UACX,EACmDwL,EACpDK,IACG,CAAElR,OAAQ,EAAGgN,KAAM,EAAGC,KAAM,GAFjBqE,EADb,EACKtR,OAAuBuR,EAD5B,EACsBvE,KAAmBwE,EADzC,EACmCvE,KADnC,EAImD4D,EACpDO,IACG,CAAEpR,OAAQ,EAAGgN,KAAM,EAAGC,KAAM,GAFjBwE,EAJb,EAIKzR,OAAuB0R,EAJ5B,EAIsB1E,KAAmB2E,EAJzC,EAImC1E,KAGhC2E,EAAST,EAAW,GAAGf,MACvByB,EAASR,EAAW,GAAGjB,MAE7B,OACEqB,EAAUH,GAAWK,EAAQH,GAASE,EAAQH,GAASM,EAASD,KAIpEb,EAAQC,MACP,CAACjL,EAAe8K,IAEdjG,EAAKpH,OAKR,yBAAKxF,UAAWqN,KAAOC,WACpBV,EAAKpL,KAAI,gBAAQ4C,EAAR,EAAGe,IAAWkC,EAAd,EAAcA,UAAd,OACR,yBAAKlC,IAAKf,EAAMpE,UAAWqN,KAAOyG,MAChC,yBACE9T,UAAWoN,KAAWC,KAAO0G,KAAR,eAClB1G,KAAOrD,MAAQA,KAGlB,yBAAKhK,UAAWqN,KAAOjJ,MAAOA,IAUhC,kBAAC,IAAD,CAAM4P,GAAE,UAAK5O,mBAAmBhB,KAC9B,kBAAC,GAAD,CAAWA,KAAMA,KAEnB,6BACE,0BAAMpE,UAAWqN,KAAO4G,MACtB,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE5M,UAAWA,EACXyI,eAAe,EACfD,WAAW,KAGf,kBAAC,GAAD,CAAQ8C,OAAQE,EAAUzO,YAlC7B,M,uCCjFE8P,GAAY,SAAC,GAKnB,IAAD,IAJJ7M,iBAII,MAJQ,GAIR,EAHJR,EAGI,EAHJA,MAGI,IAFJsN,kBAEI,SADJrE,EACI,EADJA,cACI,EAC0BrQ,mBAAS,IADnC,mBACGuQ,EADH,KACYC,EADZ,OAEwBxQ,mBAAS,MAFjC,mBAEGyQ,EAFH,KAEWC,EAFX,KAIEC,EAAW1P,IAAY,IAAM,IAC7B2P,EAAY,GAAMD,EACtBE,EAAgB,GAAhBA,EAAiD,GACjDlB,EAAQgB,EAAWE,EADQ,GAE3BjB,EAASgB,EAF8B,GAEFC,EAEjC8D,EAAWC,iBAAO,MAClBC,EAAWD,iBAAO,MAoDxB,GAlDAzU,qBAAU,WAER,GAAKyH,EAAU7B,OAAf,CAIA,IAAMmL,EAAW,SAAC,GAAD,IAAGnL,EAAH,EAAGA,OAAQoL,EAAX,EAAWA,WAAX,OACfd,EAAgBc,EAAapL,GAEzB2B,EAAkBE,EAAU,GAC5BwJ,EAAU5Q,EAAekH,GACzB2J,EAAU,CACd,EACAC,aAAM,CAAC,GAAF,mBAAU1J,EAAU2J,SAAQ,qBAAGC,QAAiBzP,IAAImP,OAGrDO,EAASC,eAAcC,OAAOP,GAASQ,MAAM,CAAC,EAAGjC,IACjDmF,EAAQC,eACXC,MAAMvD,GACNwD,WAAWnT,EAAY4F,EAAgBjH,QACvCyU,WAAWtT,GACXuT,SAAS,GACZC,aAAST,EAAS5B,SAASsC,KAAKP,GAEhC,IAAMjD,EAASC,eAAgBH,OAAON,GAASO,MAAM,CAAChC,EAAQ,IACxD0F,EAAQC,eAAaP,MAAMnD,GAAQ2D,MAAM,GAC/CJ,aAASP,EAAS9B,SAASsC,KAAKC,GAEhC,IAAMvD,EAAOC,eACVC,MAAMC,KAAgBC,QAAQ,KAC9BC,GAAE,SAAC3E,GAAD,OAAOgE,EAAOhE,EAAE4E,OAClBC,GAAE,SAAC7E,GAAD,OAAOoE,EAAOX,EAASzD,OAIxB8E,EAFU3K,EAAU7F,KAAI,SAAC0L,GAAD,OAAOA,EAAE+D,QAAMzP,IAAIgQ,GAExBhQ,KAAI,SAACyQ,EAAMpQ,GAAP,MAAc,CAAEoQ,OAAM9M,IAAKtD,MAAMqQ,UAE5DjC,EAAW+B,GAEX,IAAMf,EAAO5J,EAAU,GAAG4J,KAC1B,GAAIA,EAAKzL,OAAQ,CACf,IAAM2M,EAAUlB,EAAKA,EAAKzL,OAAS,GACnC2K,EAAU,CACRZ,GAAI2B,EAAOiB,EAAQL,IACnBrC,GAAI6B,EAAOX,EAASwB,IACpBzC,EAAG,QAGN,CAACL,EAAQhI,EAAWyI,EAAeV,KAEjC/H,EAAU7B,OACb,OAAO,KAGT,IAAM4M,EAAQ/K,EAAU,GAAG+K,MACrBC,EAAYrC,EAAQxK,OAAS,EAEnC,OACE,yBAAKxF,UAAWkV,KAAY5H,WACzB6G,GACC,yBAAKnU,UAAWkV,KAAYC,QACzBtO,GAAS,yBAAK7G,UAAWkV,KAAYrO,OAAQA,GAC5B,kBAAVuL,GACN,yBAAKpS,UAAWkV,KAAY9C,OAAQA,IAI1C,yBAAKpS,UAAWkV,KAAYE,MAAOhG,MAAOgB,EAAUf,OAAQgB,GAC1D,uBAAGkC,UAAS,oBAAejC,EAAf,YAA8BA,EAA9B,MACV,uBACEtQ,UAAWkP,KAAUmG,KACrBC,IAAKlB,EACL7B,UAAS,sBAAiBlD,EAAjB,OAEX,uBAAGrP,UAAWkP,KAAUmG,KAAMC,IAAKhB,IACnC,2BACGtE,EAAQxO,KAAI,WAAcK,GAAd,IAAEoQ,EAAF,EAAEA,KAAM9M,EAAR,EAAQA,IAAR,OACX,0BACEA,IAAKA,EACLnF,UAAWoN,KAAW8B,KAAU+C,KAAX,eAClB/C,KAAUsD,QAAU3Q,IAAMwQ,IAE7BnF,EAAG+E,QAIR/B,GACC,uBAAGlQ,UAAWkP,KAAUuD,KACtB,2BAAYvC,QCrHbqF,GAAS,SAAC,GAAc,IAAZnR,EAAW,EAAXA,KACfwD,EAA0B7E,qBAAWmE,IAArCU,sBAER,OAAKA,EAAsBpC,OAKzB,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE6B,UAAWO,EAAsB,GAAGP,UACpCyI,gBAAiB1L,KAPd,M,oBCHEoR,GAAU,SAAC,GAAqB,IjB4BPzU,EiB5BZqR,EAAkB,EAAlBA,MAAO2B,EAAW,EAAXA,KAEzB0B,EAD6B,kBAAVrD,EACQA,EAAQ,SACnCsD,EAAe,yBAAK1V,UAAWqN,KAAO+E,OAAQqD,GAC9CzL,EAAQtJ,IAEd,OACE,yBAAKV,UAAWoN,KAAWC,KAAOsI,QAAR,eAAmBtI,KAAOrD,MAAQA,KACzD+J,GAAQ,yBAAK/T,UAAWqN,KAAO0G,MAAOA,GACtC2B,EACD,yBAAK1V,UAAWqN,KAAOlM,OjBkBSJ,EiBlBoB,IAAI6U,KjBmB5D9U,GAAeC,EAAW,a,uCkBbf8U,GAAW,SAAC,GAAc,IAAZzR,EAAW,EAAXA,KAAW,EACgBrB,qBAAWmE,IAAvDS,EAD4B,EAC5BA,kBAAmBE,EADS,EACTA,qBADS,EAENpI,mBAAS,MAFH,mBAE7BqW,EAF6B,KAEpBC,EAFoB,OAGNtW,mBAAS,IAHH,mBAG7BuW,EAH6B,KAGpBC,EAHoB,OAIVxW,wBAAS8I,GAJC,mBAI7B6J,EAJ6B,KAItB8D,EAJsB,KAK9BC,EAAU9B,iBAAO,MAEjB+B,EAAa1V,IAAY,IAAM,IAInC0P,EAFQ,EAAIgG,EAEO,GACnB/F,EAFS,EAAI+F,EAEQ,GAIvBxW,qBAAU,WACR,GAAK+H,EAAkBnC,OAAvB,CAIA0Q,EAAS/O,GAAgBQ,GAAmByK,OAE5C,IAAMI,EAAUrL,GAAgBQ,GAC1BsJ,EAAOuB,EAAQ6D,UACf/V,EAASL,EAAeuS,GAExB8D,EAAYvF,aAAME,GAAM,qBAAGzL,UAXnB,cAYOlF,EAZP,GAYPJ,EAZO,KAYAC,EAZA,KAqBRoW,EAAatF,EAAKzP,KAAI,mBAPX,SAACT,EAAWyE,GAC3B,IAAMgR,GAAYzV,EAAYb,IAAUC,EAAMD,GAG9C,MAAO,CAFS,EAAIuW,KAAKC,GAAKF,EAEbJ,GADGE,EAA8B9Q,EAAS8Q,EAPtC,GAOmD,IAI1BK,CAApB,EAAG7E,GAAH,EAAOtM,WAE7ByM,EADY2E,eAAelF,MAAMC,KAAgBC,QAAQ,IAClDiF,CAAUN,GACvBR,EAAW9D,GAEX,IAAM6E,EAAavF,eAChBH,OAAO9Q,GACP+Q,MAAM,CAAC,EAAG,EAAIoF,KAAKC,KAEhBrB,EAAO0B,2BAAgBD,EAAYV,GACtCzB,WAAWtT,GACXuT,SAAS,GACTF,WAAWnT,EAAYiR,EAAQtS,QAGlC,GAFA2U,aAASsB,EAAQ3D,SAASsC,KAAKO,GAE3BxN,EAAqBrC,OAAQ,CAC/B,IAMMwR,EAAsB7P,GAAgBU,GAAsByB,OAI5D2N,EAFaD,EAAoBxV,KARnB,SAAC,GAAgC,IAC7CgV,GAD4C,EAA7BzU,QAAWhB,UACFb,IAAUC,EAAMD,GAE9C,MAAO,CADS,EAAIuW,KAAKC,GAAKF,EACbJ,MAOW5U,KAAI,WAAaK,GAAO,IAAD,mBAAjBqV,EAAiB,KAAVxH,EAAU,OAG/CsH,EAAoBnV,GADtBE,QAAWG,EAFsC,EAEtCA,SAAUF,EAF4B,EAE5BA,OAEvB,MAAO,CACLmD,IAAKtD,EACL0N,GAAIG,EAAI+G,KAAKU,IAAID,GACjBzH,GAAIC,GAAK+G,KAAKW,IAAIF,GAClBxH,EAzDU,EA0DVV,KAAM9M,GAAY,EAClB+M,KAAM/M,GAAY,EAClBF,aAIJiU,EAAWgB,OAEZ,CAACpP,EAAsBF,EAAmByO,IAE7C,IAAMrC,EAAO3P,GAAQ,UAErB,OACE,yBAAKpE,UAAWqN,KAAOC,WACrB,yBAAKtN,UAAWqN,KAAOgK,SACrB,kBAAC,GAAD,CAASjF,MAAOA,EAAO2B,KAAMA,KAE/B,yBAAK/T,UAAWqN,KAAOiK,IAAKlI,MAAOgB,EAAUf,OAAQgB,GACnD,uBACEkC,UAAS,oBAnFF,GAmF0B6D,EAAxB,YAnFF,GAmFiDA,EAA/C,MAET,4BAAQpW,UAAWqN,KAAOkK,WAAYhI,GAAI,EAAGE,GAAI,EAAGC,EAAG0G,IACvD,uBAAGpW,UAAWqN,KAAOgI,KAAMC,IAAKa,IAC/BL,GAAW,0BAAM9V,UAAWoN,KAAWC,KAAO4E,MAAO/E,EAAG4I,IACzD,uBAAG9V,UAAWqN,KAAOmK,QAClBxB,EAAQxU,KAAI,gBAAG2D,EAAH,EAAGA,IAAKoK,EAAR,EAAQA,GAAIE,EAAZ,EAAYA,GAAIC,EAAhB,EAAgBA,EAAGV,EAAnB,EAAmBA,KAAMC,EAAzB,EAAyBA,KAAMjN,EAA/B,EAA+BA,OAA/B,OACX,uBAAGmD,IAAKA,EAAKnF,UAAWoN,KAAW,eAAG8B,KAAUC,KAAOnN,KACrD,4BACEhC,UAAWoN,KAAW8B,KAAUI,OAChCC,GAAIA,EACJE,GAAIA,EACJC,EAAGA,IAEJV,GACC,4BAAQhP,UAAWoN,KAAWC,KAAOsC,MAAOT,KAAUS,OAAQJ,GAAIA,EAAIE,GAAIA,EAAIC,EAAGA,EAAI,IAEtFT,GACC,4BAAQjP,UAAWoN,KAAWC,KAAOsC,MAAOT,KAAUS,OAAQJ,GAAIA,EAAIE,GAAIA,EAAIC,EAAGA,EAAI,a,oBC9H1F+H,GAAU,SAAC,GAAuD,IAArDlY,EAAoD,EAApDA,SAAoD,IAA1CmY,mBAA0C,MAA5B,EAA4B,MAAzBC,kBAAyB,SACtE7J,EAAQ4J,EAAcrK,KAAO,QAAD,OAASqK,IAAiBrK,KAAOuK,aAEnE,OACE,6BAAS5X,UAAWoN,KAAWC,KAAOwK,QAAS/J,IAC7C,yBACE9N,UAAWoN,KAAWC,KAAOyK,QAAR,eAClBzK,KAAOrD,MAAQtJ,OAGlB,yBACEV,UAAWoN,KAAWC,KAAO0K,WAAR,eAClB1K,KAAOsK,WAAaA,KAGtBpY,M,oBChBEyY,GAAY,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,GAAIpR,EAAqC,EAArCA,MAAOiR,EAA8B,EAA9BA,QAA8B,IAArBxH,cAAqB,SACnE,OACE,yBAAKtQ,UAAWoN,KAAWC,KAAO6K,UAAR,eAAsB7K,KAAOiD,OAASA,KAC7D2H,GAAM,4BAAKA,GACXpR,GAAS,4BAAKA,GACdiR,GAAW,yBAAK9X,UAAWqN,KAAO0G,MAAO+D,K,kBhBMnCK,I,MAAc,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACvDC,EAAcnE,iBAAO,MACrBoE,EAAapE,iBAAO,MAClBlM,EAAgBpF,qBAAWmE,IAA3BiB,YAHqE,EAI/C1I,mBAAS,IAJsC,mBAItEiZ,EAJsE,KAI7DC,EAJ6D,KAmG7E,OA7FA/Y,qBAAU,WACR,GAAK0Y,EAAO9S,OAAZ,CADc,kBAKW8S,EALX,GAKPpH,EALO,KAKCI,EALD,KAMRsH,EAAkBxW,EAAa,gBAC/ByW,EAAezW,EAAa,aAClC0D,GAAkBgT,KACfC,QAEAvJ,KAAK,GACL7L,OAAOkV,GACVhT,GAAiBiT,KACdC,QAEAvJ,KAAK,GACLwJ,YAAY,OACZrV,OAAOkV,GAEVhE,aAAS4D,EAAWjG,SAASsC,KAAKjP,IAClCgP,aAAS4D,EAAWjG,SAASsC,KAAKhP,IAElC,IAkBMmT,EAAY,SAAC,GAKZ,IAAD,IAJJnF,KAAQjN,EAIJ,EAJIA,MAAOqS,EAIX,EAJWA,MAAO1Z,EAIlB,EAJkBA,MAAOuB,EAIzB,EAJyBA,UAC7BP,EAGI,EAHJA,OAGI,gBAFJ8X,OAEI,GAFKpH,EAEL,KAFaI,EAEb,SADJ6H,aACI,SAEEC,EADarY,EAAYqX,GACH,EAAI,EAE1BvG,EAAIrS,EAAQ0R,EAAO1R,GAAS6Y,EAC5BgB,EAAQF,EAAQ,GAAK,EACrBpH,EAAIT,EAAOvQ,EAAYP,GACvB8Y,EAAU,CACdC,KAAM,CACJ1S,QACAqS,SAEFrH,EAAGuH,EAAQvH,EACXE,IACAyH,QAAS,CACPhW,OAAQ,GAEVR,MAAO4V,GAUT,OAPIpZ,GACF8Z,EAAQG,GAAKL,GAASf,EAAY,IAClCiB,EAAQI,GAAK3H,IAEbuH,EAAQK,GAAa,GAARP,EACbE,EAAQM,GAAa,GAARP,GAERC,GAQHO,EAAkB1R,EAAY6I,SALjB,SAAC,GAAD,IAAG9Q,EAAH,EAAGA,MAAOC,EAAV,EAAUA,IAAKK,EAAf,EAAeA,OAAf,MAA4B,CAC7CN,EAAQ+Y,EAAU,CAAEnF,KAAM5T,EAAOM,SAAQ8X,gBAAY/P,EACrDpI,EAAM8Y,EAAU,CAAEnF,KAAM3T,EAAKK,SAAQ8X,SAAQa,OAAO,SAAU5Q,MAGRgE,OAAOuN,SAEzDR,EAAUS,eACb5R,YAAY0R,GACZhN,KAAKmN,MAERnF,aAAS2D,EAAYhG,SAASsC,KAAKwE,GAEnC,IAAMW,EAAa9R,EAAY3G,KAlEd,SAAC,EAAwBK,GAAO,IAA7B3B,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,IAAKK,EAAgB,EAAhBA,OAC9B,GAAKN,GAAUC,EAAf,CAGA,IAAM+Z,EAAuB,IAAX1Z,EACZ2Z,EAAUD,EAAYrU,GAAiBC,GAE7C,MAAO,CACLX,IAAI,GAAD,OAAKjF,EAAL,YAAcC,EAAd,YAAqB0B,GACxBgQ,EAAGX,EAAO,IAAMgJ,EAAY,EAAI7B,GAChCtG,EAAGT,EAAOpR,EAAMa,UAAYP,GAC5B4O,MAAOiJ,EACPhJ,OACEiC,EAAOnR,EAAIY,UAAYP,GAAU8Q,EAAOpR,EAAMa,UAAYP,GAC5DiD,KAAM0W,EAAQlQ,WAoD2BsC,OAAOuN,SACpDnB,EAAWsB,MACV,CAAC9R,EAAaiQ,EAAcC,EAAWC,IAGxC,oCACE,8BACE,8BAAUvY,GAAG,YACX,0BAAMmN,EAAGqL,EAAU/F,UACnB,0BAAMtF,EAAGqL,EAAU6B,aAGvB,uBAAG9E,IAAKmD,GACLC,EAAQlX,KAAI,SAAC6Y,GAAD,OACX,0CAAUA,EAAV,CAAsBC,SAAS,wBAGnC,uBAAGhF,IAAKkD,OiBzHD+B,GAAgB,SAAC,GAA+B,IAA7BjC,EAA4B,EAA5BA,OAA4B,IAApBkC,iBAAoB,MAAR,EAAQ,EAClDxS,EAAYjF,qBAAWmE,IAAvBc,QADkD,EAE5BvI,mBAAS,IAFmB,mBAEnDuW,EAFmD,KAE1CC,EAF0C,KAuC1D,OAnCArW,qBAAU,WACR,GAAKoI,EAAQxC,QAAW8S,EAAO9S,OAA/B,CAGA,IAAMiV,EAAkBtT,GAAgBa,GAClC0S,EAAmBpT,GAAiBU,GACpC2S,EAAcF,EAAgBG,WAC9BC,EAAeH,EAAiBE,WAC7BtJ,EARK,YAQKgH,EARL,MAUR9U,EAASgX,EAAY,EAAI,EACzBjO,EAAS,SAAC,GAAD,SAAG0C,KAAkB,GAC9B6L,EAAS,SAAC,GAAD,MAAmB,CAAE/Z,UAArB,EAAG+Q,GAAiCiJ,MAApC,EAAO9L,OAChB+L,EAAQ,SAAC,GAAD,IAAGja,EAAH,EAAGA,UAAWga,EAAd,EAAcA,MAAd,OACZ,YAAI,IAAIpZ,MAAMoZ,IAAQvZ,KAAI,SAACI,EAAGqZ,GAAJ,MAAe,CAAEla,YAAWka,aAClDC,EAAcP,EAAYpO,OAAOA,GAAQ/K,IAAIsZ,GAAQ9J,QAAQgK,GAC7DG,EAAeN,EAAatO,OAAOA,GAAQ/K,IAAIsZ,GAAQ9J,QAAQgK,GAE/DI,EAAe,SAACC,GAAD,OAAU,gBAAGta,EAAH,EAAGA,UAAWka,EAAd,EAAcA,MAAd,MAA2B,CACxD9V,IAAI,GAAD,OAAKpE,EAAL,YAAkBka,EAAlB,YAA2BI,GAC9B9L,GAAI8L,GAAQJ,EAAQ,KAAQ,EAAIzX,EAChCiM,GAAI6B,EAAOvQ,GACX2O,EAAGlM,EACH0W,UAAoB,IAATmB,KAEPC,EAAmBF,EAAa,GAChCG,EAAoBH,GAAc,GAElCI,EAAiBN,EAAY1Z,IAAI8Z,GACjCG,EAAkBN,EAAa3Z,IAAI+Z,GAEnCtE,EAAU,sBAAOwE,GAAP,YAA2BD,IAC3CvF,EAAWgB,MACV,CAACuD,EAAWxS,EAASsQ,IAGtB,2BACGtC,EAAQxU,KAAI,kBAAG2D,EAAH,EAAGA,IAAKoK,EAAR,EAAQA,GAAIE,EAAZ,EAAYA,GAAIC,EAAhB,EAAgBA,EAAGwK,EAAnB,EAAmBA,UAAnB,OACX,uBACE/U,IAAKA,EACLnF,UAAWoN,MAAU,mBAClB8B,KAAUsD,QAAU0H,GADF,cAElBhL,KAAUkL,UAAYF,GAFJ,KAKrB,4BAAQ3K,GAAIA,EAAIE,GAAIA,EAAIC,EAAGA,U,oBC3B/BgM,GAAa,SAACzK,EAAMO,EAAMhR,GAC9B,IAAKyQ,EAAKzL,OACR,MAAO,GAGT,IAAIoH,EAAOqE,EAAKzP,KAAI,kBAAqB,CACvCT,UADkB,EAAG+Q,GAErBtS,MAFkB,EAAOgG,OAEThF,MAGZmb,EAAQ/O,EAAK,GAEbgP,EAAc,CAAE7a,UADb6L,EAAKA,EAAKpH,OAAS,GACUzE,UAAWvB,MAAO,KAClDqc,EAAW,CAAE9a,UAAW4a,EAAM5a,UAAWvB,MAAO,KAGtD,OAAOgS,EADP5E,EAAI,sBAAOA,GAAP,CAAagP,EAAaC,EAAUF,MAI7BG,GAAU,WAAO,IACpB9T,EAAYjF,qBAAWmE,IAAvBc,QADmB,EAGCvI,mBAAS,IAHV,mBAGpB6Y,EAHoB,KAGZyD,EAHY,OAIatc,mBAAS,IAJtB,mBAIpB2Y,EAJoB,KAIN4D,EAJM,OAKDvc,mBAAS,IALR,mBAKpBwc,EALoB,KAKbC,EALa,OAMOzc,mBAAS,IANhB,mBAMpB8Y,EANoB,KAMT4D,EANS,KASrB/M,EAAQ1O,IAAY,IAAM,IAC9B4P,EAAgB,GAAhBA,EAAgD,EAEhDD,EADS,KACYC,EAFiB,GAGtCF,EAAWhB,EAAQkB,EAHQ,EAIvB8L,EAAYhN,EAAQ,EACpBiN,EAA0B,GAAZD,EACdE,EAAkC,IAAZF,EAEtBG,EAASlI,iBAAO,MAChBD,EAAWC,iBAAO,MAClBC,EAAWD,iBAAO,MAyFxB,OAvFAzU,qBAAU,WACR,GAAKoI,EAAQxC,OAAb,CAIA,IAAMiV,EAAkB+B,GAAmBxU,GAC3CgU,EAAgBvB,EAAgBva,OAChC,IAAMwa,EAAmB+B,GAAoBzU,GACvC2S,EAAcF,EAAgBG,WAC9BC,EAAeH,EAAiBE,WAChC8B,EAAaC,EAAkBlC,GAE/BvJ,EAASK,eACZH,OAAO,CAAC,EAAGL,aAAM4J,GAAa,SAACiC,GAAD,OAAOA,EAAEpX,YACvC6L,MAAM,CAAC,EAAGgL,IAEP/K,EAASH,eAAcC,OAAOsL,GAAYrL,MAAM,CAAC,EA3B9C,OA6BT0K,EAAU,CAAC7K,EAAQI,IAEnB,IAAMyD,EAAQC,eACXP,MAAMnD,GACNoD,WtB/CmB,SAACxU,GACzB,IAAM2c,EAAI5b,aAASf,EAxBG,qBAyBtB,OAAOwB,EAAOF,KAAI,SAACsb,GAAD,OAAOD,EAAEE,QAAQC,IAAIF,EAAG,UAAUG,YsB6CpCC,CAAWzC,EAAgBva,QACtCyU,WAAWrT,GACXsT,SAAS,GACZC,aAASP,EAAS9B,SAASsC,KAAKC,GAEhC,IAAMR,EAAQC,eAAeC,MAAMvD,GAAQ+D,MAAM,GACjDJ,aAAST,EAAS5B,SAASsC,KAAKP,GAkBhC,IAAM4I,EAAc1L,eACjBC,MAAMC,KAAgBC,QAAQ,KAC9BC,GAAE,SAAC3E,GAAD,OAAOgE,EAAOhE,EAAE1H,WAClBuM,GAAE,SAAC7E,GAAD,OAAOoE,EAAOpE,EAAE4E,OACfsL,EAAe3L,eAClBC,MAAMC,KAAgBC,QAAQ,KAC9BC,GAAE,SAAC3E,GAAD,OAAOgE,GAAQhE,EAAE1H,WACnBuM,GAAE,SAAC7E,GAAD,OAAOoE,EAAOpE,EAAE4E,OAEfuL,EAAcF,EAAYxC,GAC1B2C,EAAeF,EAAavC,GAClCqB,EAAS,CACP,CAAEjK,KAAMoL,EAAalY,IAAK,WAC1B,CAAE8M,KAAMqL,EAAcnY,IAAK,cAG7B,IAAMoY,EAAkB9L,eACrBI,GAAE,SAAC3E,GAAD,OAAOgE,EAAOhE,EAAE1N,UAClBuS,GAAE,SAAC7E,GAAD,OAAOoE,EAAOpE,EAAEnM,cAEfyc,EAAmB/L,eACtBI,GAAE,SAAC3E,GAAD,OAAOgE,GAAQhE,EAAE1N,UACnBuS,GAAE,SAAC7E,GAAD,OAAOoE,EAAOpE,EAAEnM,cAEf0c,EAAcvM,EAAOwM,OAAO,GAAKxM,EAAOwM,OAAO,GAC/CC,EAAkBjC,GACtBf,EACA4C,EACAE,GAEIG,EAAmBlC,GACvBb,EACA2C,EACAC,GAGFtB,EAAa,CAAE3J,QAASmL,EAAiBvD,SAAUwD,OAClD,CAAC5V,EA9FO,KA8FUqU,IAKnB,yBAAKrc,UAAW6d,KAAcvQ,WAC5B,yBAAKtN,UAAW6d,KAAcC,OAC5B,yBAAK9d,UAAW6d,KAAcnN,MAA9B,QACA,yBAAK1Q,UAAW6d,KAAcrN,OAA9B,SAEF,yBACExQ,UAAW6d,KAAcvG,IACzBhC,IAAKiH,EACLnN,MAAOgB,EACPf,OAAQgB,GAER,uBAAGkC,UAAS,oBAAejC,EAAc8L,EAA7B,YAA0C9L,EAA1C,MAkBV,2BACG2L,EAAMza,KAAI,WAAgBK,GAAhB,MAAGoQ,EAAH,EAAGA,KAAM9M,EAAT,EAASA,IAAT,OACT,0BACEA,IAAKA,EACLnF,UAAWoN,KAAW8B,KAAU+C,MAAX,mBAClB/C,KAAUsD,SAAW3Q,GADH,cAElBqN,KAAUkL,SAAWvY,GAFH,IAIrBqL,EAAG+E,QAIT,2BACE,kBAAC,GAAD,CAAeqG,OAAQA,EAAQkC,UAhJvB,KAkJV,2BACE,kBAAC,GAAD,CACEpC,aAAcA,EACdC,UAAWiE,EACXhE,OAAQA,EACRC,UAAWA,KAQf,uBACEvY,UAAWoN,KAAW8B,KAAUmG,KAAMwI,KAAcxI,MACpDC,IAAKhB,Q,wCC9MJyJ,GAAgB,CAC3BC,QAAS,qBAAGjc,QAAWkc,KACvBC,KAAM,qBAAGnc,QAAWoc,mBACpBC,cAAe,qBAAGrc,QAAWsc,eAE/BN,GAAcO,QAAUP,GAAcG,K,wBCVzBK,GAAe,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,EACDA,EAAMzc,QAApC0c,EAD+B,EAC/BA,QAASC,EADsB,EACtBA,MAAOtT,EADe,EACfA,IAAKC,EADU,EACVA,KACrBsB,EAAW6R,EAAX7R,OAEFgS,EAAYD,EAAME,MAAM,KACxBC,EAAQ,UAAMF,EAAUnZ,OAAhB,YACS,IAArBmZ,EAAUnZ,OAAe,OAAS,QADtB,gBAGRpB,EAAO2Z,GAAcK,cAAcI,GACnCxU,EAAQtJ,IAERM,EAAS,SAAC8d,GAAD,OAAOC,OAAOC,WAAWF,GAAGG,QAAQ,IAC7Cpc,EAAcuI,EAAG,UAAMpK,EAAOoK,GAAb,iBAAuBpK,GAAQqK,GAA/B,SAA2C,GAElE,OACE,yBAAKrL,UAAWqN,KAAOC,WACrB,6BAAMmR,GACLzU,GAAS,yBAAKhK,UAAWqN,KAAO6R,WAAY9a,GAC7C,yBAAKpE,UAAWqN,KAAO6R,WAAYrc,GACnC,6BACE,8BAAOgc,GACNF,EAAUnd,KAAI,SAAC2d,GAAD,OACb,0BAAMha,IAAKga,EAAMnf,UAAWqN,KAAO8R,MAAOA,OAG9C,yBAAKnf,UAAWqN,KAAO6R,WAAvB,eAA+CvS,KCfxCyS,GACF,EADEA,GAED,EAFCA,GAGA,EAGAC,GAAQ,SAAC,GAA0C,IAAD,EAAvCb,EAAuC,EAAvCA,MAAuC,IAAhCc,YAAgC,MAAzBF,GAAyB,IAC9Brc,qBAAWyG,IAAlCG,EADqD,EACrDA,KAAME,EAD+C,EAC/CA,aACRwC,EAAgB1C,EAAKF,IAOrBzH,EAASF,EAAS0c,GAClBxP,EAAqBwP,EzBmBGzc,QAAWG,UAA6B,EyBlBhE+M,EAAqBuP,EzBmBGzc,QAAWG,UAA6B,EyBjBhEkC,EAAO2Z,GAAcK,cAAcI,GAEnCe,EAAcD,IAASF,GACvBI,EAAaF,IAASF,GACtBK,EAAO3e,EAAc0d,EAAMzc,QAAQhB,WACnCiJ,EAAQtJ,IAEd,OACE,yBACEV,UAAWoN,KAAWC,KAAOC,WAAR,mBAClBD,KAAOqS,SAAWF,GADA,cAElBnS,KAAOsS,UAAYJ,GAFD,cAGlBlS,KAAOrD,MAAQA,GAHG,IAKrB4V,QAvBgB,WAClB,IAAMC,EACJxT,GAAiBA,EAAcM,SAAW6R,EAAM7R,OAAS,KAAO6R,EAClE3U,EAAaJ,GAA+BoW,KAsB1C,yBAAK7f,UAAWqN,KAAOmR,OACrB,yBAAKxe,UAAWqN,KAAOyS,SACrB,0BAAM9f,UAAWqN,KAAO0S,WACpB/V,GAAS5F,GAAQ,8BAAOA,EAAP,OAClBqb,IAGL,yBAAKzf,UAAWoN,KAAW,eAAGC,KAAOrL,OAASA,KAC5C,kBAAC,GAAD,CAAQA,OAAQA,EAAQgN,KAAMA,EAAMC,KAAMA,IAC1C,kCAAQuP,EAAMzc,QAAQie,eAGzBR,GAAc,kBAAC,GAAD,CAAchB,MAAOA,MCzD7ByB,GAAY,SAAC,GAAkC,IAAD,IAA/BC,cAA+B,MAAtB,GAAsB,EAAlBC,EAAkB,EAAlBA,YAEjCC,EADWrd,qBAAWyG,IAApBG,KACcF,IAEhB6V,EAAO,SAAC,GAAD,IAAG3S,EAAH,EAAGA,OAAH,OACXyT,EACIzT,IAAWyT,EAASzT,OAClByS,GACAA,GACFA,IAEF,OACF,yBAAKpf,UAAWqN,KAAO6S,QACpBA,EAAO1e,KAAI,SAAC6e,GAAD,OACV,kBAAC,GAAD,CAAOlb,IAAKkb,EAAE1T,OAAQ6R,MAAO6B,EAAGf,KAAMA,EAAKe,SAE3CH,EAAO1a,QAAU,yBAAKxF,UAAWqN,KAAO8S,aAAcA,KChBjDG,GAAe,WAAO,IACzBrY,EAAalF,qBAAWmE,IAAxBe,SAER,OAAO,kBAAC,GAAD,CAAWiY,OAAQjY,EAAUkY,YAAa,yBCHtCI,GAAc,WAAO,IACxBrY,EAAYnF,qBAAWmE,IAAvBgB,QAER,OAAO,kBAAC,GAAD,CAAWgY,OAAQhY,EAASiY,YAAa,wBCJrCK,GAAU,WACrB,IAAM3Z,EAAQ,0BAAM9G,GAAG,WAAT,gBAER0gB,EACJ,wDAC6B,IAC3B,uBAAGC,KAAK,6CAAR,0BAFF,yDAKyD,IACvD,uBAAGA,KAAK,qFAAR,oBAEK,IARP,mGAUwB,IACtB,uBAAGA,KAAK,8EAAR,8BAXF,oBAcmB,uBAAGA,KAAK,wBAAR,WAdnB,OAckE,IAChE,uBAAGA,KAAK,gCAAR,iBAfF,0BAgBc,IACZ,uBAAGA,KAAK,iDAAR,aAjBF,+BAkB4B,uBAAGA,KAAK,oBAAR,MAlB5B,KAsBF,OAAO,kBAAC,GAAD,CAAW7Z,MAAOA,EAAOiR,QAAS2I,K,oBCzB9BE,GAAY,WAAO,IAAD,EACL5d,qBAAWkD,IAA3BE,cADqB,MACZ,GADY,EAG7B,IAAKA,EAAOya,YACV,OAAO,sCAGT,IAAMzf,EAAO,IAAIyU,KAAKzP,EAAOya,aAGvBC,EAAU/f,EAAcK,EADL,SAEnB2f,EAAYhgB,EAAcK,EAHT,WAIjBwI,EAAOzI,EAA0BC,EAHd,SAInB4f,EAAS7f,EAA0BC,EALlB,WAOjB6f,EAAOH,IAAYlX,EACnBsX,EAAcD,EAAO,GAAH,YAAaD,EAAb,KAClBG,EAAiBF,EAAOH,EAAUC,EAExC,OACE,sDACwB,IACtB,0BAAM9gB,UAAWqN,KAAOoS,MAAOyB,GAC9BD,EAHH,M,oBCrBSE,GAAS,kBACpB,yBAAKnhB,UAAWqN,KAAO+T,QACrB,6BACE,kDACA,kBAAC,GAAD,CAAQpf,QAAQ,EAAMwB,OAAQ,KAEhC,6BACE,8DACA,kBAAC,GAAD,CAAQyL,MAAM,KAEhB,6BACE,6DACA,kBAAC,GAAD,CAAQD,MAAM,KAEhB,6BACE,gEACA,kBAAC,GAAD,S,oBCdOqS,GAAc,WAAO,IAAD,EACHte,qBAAW3D,GAA/BM,EADuB,EACvBA,MAAOC,EADgB,EAChBA,SAET2hB,EAAS,CAAC,QAAS,OAAQ,QAM3BxJ,EACJ,2BAEGwJ,EAAO9f,KAAI,SAAC6e,EAAGxe,GAAJ,OACV,0BAAMsD,IAAKkb,GACR,IACD,4BACErgB,UAAWoN,KAAWC,KAAOkU,OAAR,eAClBlU,KAAO+S,SAAWC,EAAEmB,gBAAkB9hB,IAEzCkgB,QAAS,WAbjBjgB,EAamC0gB,EAbjBmB,iBAeTnB,GAEAxe,EAAKyf,EAAO9b,OAAS,GAAO,yCAbrC,KAmBF,OAAO,kBAAC,GAAD,CAAWsS,QAASA,K,8BC1BhB2J,GAAuB,SAAC,GAAuD,IAArDtZ,EAAoD,EAApDA,YAAamQ,EAAuC,EAAvCA,OAAQoJ,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,eAC9DnJ,EAAcnE,iBAAO,MA8C3B,OA5CAzU,qBAAU,WACR,GAAKuI,EAAL,CADc,kBAIMmQ,EAJN,GAIJhH,GAJI,WAMRsH,EAAkBxW,EAAa,gBA4B/ByX,EAAkB1R,EAAY3G,KAzBlB,SAAC,GAAgC,IAA/BogB,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,MAAOhb,EAAkB,EAAlBA,MAAOqS,EAAW,EAAXA,MAE/BrH,EAAI+P,EAAMF,EACV3P,EAAIT,EAAOuQ,GACXvI,EAAU,CACdC,KAAM,CACJ1S,QACAqS,QACA4I,KAAMH,GATI,GAUVI,MAAO,SAETlQ,IACAE,IACAyH,QAAS,CACPhW,OAAQke,EAAS,GAEnB1e,MAAO4V,EAETU,IAnBc,IAsBd,OAFAA,EAAQI,GAAKpI,EAAOuQ,GAASH,EAAS,EAE/BpI,KAMHA,EAAUS,eACb5R,YAAY0R,GACZhN,KAAKmN,MAERnF,aAAS2D,EAAYhG,SAASsC,KAAKwE,MAElC,CAACnR,EAAawZ,EAAgBD,EAAUpJ,IAGzC,uBAAGhD,IAAKkD,KCxCNwJ,GAAoB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,OAAKA,EAIH,oCACGA,EAASzgB,KAAI,gBAAG2D,EAAH,EAAGA,IAAKoK,EAAR,EAAQA,GAAIE,EAAZ,EAAYA,GAAIC,EAAhB,EAAgBA,EAAGjM,EAAnB,EAAmBA,KAAME,EAAzB,EAAyBA,OAAzB,OACZ,4BACEwB,IAAKA,EACLnF,UAAWqN,KAAO6U,QAClB3S,GAAIA,EACJE,GAAIA,EACJC,EAAGA,EACHjM,KAAMA,EACNE,OAAQA,QAZP,MAmBEwe,GAAY,WAAO,IACtB/Z,EAAcrF,qBAAWmE,IAAzBkB,UACA1I,EAAUqD,qBAAW3D,GAArBM,MACA0iB,EAAqDha,EAArDga,KAAMC,EAA+Cja,EAA/Cia,cAAeC,EAAgCla,EAAhCka,eAAgBna,EAAgBC,EAAhBD,YACvCoa,EAAclO,mBAJS,EAMK5U,mBAAS,IANd,mBAMtB+iB,EANsB,KAMXC,EANW,OAOqBhjB,mBAAS,IAP9B,mBAOtBijB,EAPsB,KAOHC,EAPG,OAQuBljB,mBAAS,IARhC,mBAQtBmjB,EARsB,KAQFC,EARE,OASDpjB,mBAAS,IATR,mBAStB6Y,EATsB,KASdyD,EATc,KAWvB/R,EAAQtJ,IAAY,IAAM,IAC1B0P,EAAWpG,EACX0X,EAAWtR,EAAW,GACtBhB,EAAmB,EAAXsS,EAERoB,EAA6B,EAAXpB,EAClBpR,EAAS,CACbC,IAAK,GACLE,OAAQ,IACRD,MAAOsS,EACPpS,KANiBN,EAAWhB,EAMT0T,GAGfC,EAAcrB,EAAW,EACzBrS,EAAoB,GAAXqS,EACTrR,EAAYhB,EAASiB,EAAOC,IAAMD,EAAOG,OAEzC6D,EAAWD,iBAAO,MAClBD,EAAWC,iBAAO,MA+IxB,OA7IAzU,qBAAU,WAER,GAAKwiB,EAAL,CAFc,MAMKY,KAAWZ,EAAK3W,KAAK,GAAGjK,KAAI,qBAAGyhB,QANpC,mBAMPC,EANO,KAMFC,EANE,KAURC,EAAU,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACrDC,EAASD,EAAQ5hB,KAAI,SAACI,EAAGC,GAAJ,OAAUA,EAAI6f,KACnCxQ,EAASoS,aAAeF,EAASC,GACjC9O,EAAQgP,eAAY9O,MAAMvD,GAAQ+D,MAAM,IAAIL,SAAS,GAC3DC,aAAST,EAAS5B,SAASsC,KAAKP,GAEhC,IACMjD,EAASC,eAAgBH,OADf,CAAC,EAAG,KAC2BC,MAAM,CAAC,EAAGhC,IAWnD0F,EAAQyO,eACX/O,MAAMnD,GACNoD,WAAW,CAAC,EAAG,EAAG,EAAG,EAAG,KACxBC,YAbe,SAACzH,EAAGrL,GACpB,IAAM4hB,EAAO,EAAIvW,EACjB,OAAa,IAATuW,GAAuB,KAATA,EACT,OAEI,KAATA,EACK,OAEH,GAAN,OAAUA,EAAO,IAAjB,OAAsBA,EAAO,GAAK,KAAO,SAMxC7O,SAAS5K,EAAQ,EAAI,GACxB6K,aAASP,EAAS9B,SAASsC,KAAKC,GAEhCgH,EAAU,CAAC7K,EAAQI,IAEnB,IAAM1E,EAAOwV,EACV5gB,KAAI,SAACogB,EAAK8B,GAAN,OACH9B,EAAIpgB,KAAI,WAAUmiB,GAAV,IAAGV,EAAH,EAAGA,IAAH,MAAqB,CAC3BQ,KAAME,EACN/B,IAAK8B,EACLlkB,MAAOyjB,SAGVxX,KAAK,GAEFmY,EAASxhB,EAAa,oBACtByhB,EAASzhB,EAAa,oBACtB0hB,EAAS1hB,EAAa,oBACtB2hB,EAAS3hB,EAAa,oBAEtB4hB,EAAWlL,KAASC,QAAQvJ,KAAK,GAAGyU,YAAY,GAAGtgB,OAAOigB,GAC1DM,EAAWpL,KAASC,QAAQvJ,KAAK,GAAGyU,YAAY,GAAGtgB,OAAOkgB,GAC1DM,EAAWrL,KAASC,QAAQvJ,KAAK,GAAGyU,YAAY,GAAGtgB,OAAOmgB,GAC1DM,EAAWtL,KAASC,QAAQvJ,KAAK,GAAGyU,YAAY,GAAGtgB,OAAOogB,GAEhElP,aAAS0N,EAAY/P,SAClBsC,KAAKkP,GACLlP,KAAKoP,GACLpP,KAAKqP,GACLrP,KAAKsP,GAER,IAAMthB,EAAa,CACjB,CAAEE,MAAO4gB,EAAQzJ,QAAS6J,GAC1B,CAAEhhB,MAAO6gB,EAAQ1J,QAAS+J,GAC1B,CAAElhB,MAAO8gB,EAAQ3J,QAASgK,GAC1B,CAAEnhB,MAAO+gB,EAAQ5J,QAASiK,IAEtBnX,EAAe,SAACzN,GACpB,IAAM6kB,EAAc7kB,EAAQ0jB,EACtBoB,EAAYnB,EAAMD,EAUxB,OAAOpgB,EAPLuhB,GAAe,IAAOC,EAClB,EACAD,GAAe,GAAMC,EACrB,EACAD,GAAe,IAAOC,EACtB,EACA,IAIFC,EAAYxB,EAAc,EAE1ByB,EAAe5X,EAAKpL,KAAI,YAA2B,IAAxBiiB,EAAuB,EAAvBA,KAAM7B,EAAiB,EAAjBA,IAAKpiB,EAAY,EAAZA,MACpCsD,EAAamK,EAAazN,GAChC,MAAO,CACL2F,IAAI,GAAD,OAAKyc,EAAL,YAAY6B,GACflU,GAAIqS,EAAMF,EACVjS,GAAI6B,EAAOmS,GACX/T,EAAG6U,EAAY9N,KAAKgO,KAAKjlB,EAAQ2jB,GACjC1f,KAAMX,EAAWqX,QAAQlQ,MACzBtG,OAAQb,EAAWE,UAIvByf,EAAa+B,GAEb,IAAME,EAAyB,SAACllB,EAAOqC,GACrC,IAAMiB,EAAamK,EAAazN,GAChC,MAAO,CACL+P,GAAI,EACJE,GAAI,EACJC,EAAG6U,EAAY9N,KAAKgO,KAAKjlB,EAAQ2jB,GACjC1f,KAAMX,EAAWqX,QAAQlQ,MACzBtG,OAAQb,EAAWE,QAIjB2hB,EAAuBtC,EAC1B7gB,IAAIkjB,GACJljB,KAAI,SAACojB,EAAM/iB,GAAP,oBAAC,gBACD+iB,GADA,IAEHrV,GAAI1N,EAAI6f,EACRvc,IAAI,OAAD,OAAStD,QAGVgjB,EAAwBvC,EAC3B9gB,IAAIkjB,GACJljB,KAAI,SAACojB,EAAM/iB,GAAP,oBAAC,gBACD+iB,GADA,IAEHnV,GAAI5N,EAAI6f,EACRvc,IAAI,QAAD,OAAUtD,QAGjB8gB,EAAqBgC,GACrB9B,EAAsBgC,MACrB,CACDnlB,EACA0iB,EACA/S,EACAD,EACA2T,EACArB,EACAW,EACAC,EACAtY,IAGGwY,EAAUhd,OAKb,yBAAKxF,UAAWqN,KAAOiK,IAAKlI,MAAOgB,EAAUf,OAAQgB,GACnD,uBAAGkC,UAAS,oBAAejC,EAAOI,KAAtB,YAA8BJ,EAAOC,IAArC,MACV,uBACE+E,IAAKlB,EACLpU,UAAWqN,KAAOgI,KAClB9C,UAAS,oBAAe,GAAMmP,EAArB,YAAiC,KAAOA,EAAxC,OAEX,uBACEpM,IAAKhB,EACLtU,UAAWqN,KAAOgI,KAClB9C,UAAS,qBAAgBvI,EAAQ,EAAI,KAAO0X,EAAnC,SAEX,uBACEpM,IAAKiN,EACLhQ,UAAS,oBAAemP,EAAW,EAA1B,YAA+BA,EAAW,EAA1C,MAET,uBAAGnP,UAAS,oBAAe,EAAf,QACV,kBAAC,GAAD,CAAmB0P,SAAUO,KAE/B,uBAAGjQ,UAAS,qBAAgBvI,EAAQ,IAAM,GAAK0X,EAAnC,QACV,kBAAC,GAAD,CAAmBO,SAAUW,KAE/B,uBAAGrQ,UAAS,sBAAiB,MAAQmP,EAAzB,MACV,kBAAC,GAAD,CAAmBO,SAAUS,KAE/B,uBAAGnQ,UAAS,oBAAe,EAAf,IAAoB,EAApB,MACV,kBAAC,GAAD,CACEpK,YAAaA,EACbuZ,SAAUA,EACVpJ,OAAQA,EACRqJ,eAAgBrR,EAAOI,WAlC1B,MCjMEoU,GAAc,WACzB,IAAMC,EACJ,mLAEqE,uBAAGrE,KAAK,YAAR,gBAFrE,yCAMIvR,EACJ,2BACE,6EAEQ,IACR,kBAAC,GAAD,OAQEnN,EACJ,iLAMIgjB,EACJ,iFAOIhd,EACJ,0NAOIid,EACJ,yCACa,uBAAGvE,KAAK,qCAAR,aADb,KAKF,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAShJ,YAAa,GACpB,kBAAC,GAAD,CAAWO,GAAG,4BAA4BH,QAASiN,IACnD,kBAAC,GAAD,CAAWjN,QAAS,kBAAC,GAAD,SAGtB,kBAAC,GAAD,CAASJ,YAAa,GACpB,kBAAC,GAAD,CAAW7Q,MAAM,UACjB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAWiR,QAAS3I,KAGtB,kBAAC,GAAD,CAASuI,YAAa,EAAGC,YAAY,GACnC,kBAAC,GAAD,KACE,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAWG,QAlDD,oDAkDmBxH,QAAQ,KAGvC,kBAAC,GAAD,CAASoH,YAAa,GACpB,kBAAC,GAAD,CAAW7Q,MAAM,mBAAmBiR,QAAS9V,IAC7C,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAW6E,MAAM,kBAAkBiR,QAASkN,IAC5C,kBAAC,GAAD,OAGF,kBAAC,GAAD,CAAStN,YAAa,GACpB,kBAAC,GAAD,CAAW7Q,MAAM,aAAaiR,QA5CtB,0DA6CR,kBAAC,GAAD,OAGF,kBAAC,GAAD,CAASJ,YAAa,EAAGC,YAAY,GACnC,kBAAC,GAAD,CAAW9Q,MAAM,wBAAwBiR,QAhErC,kFAgEoDxH,QAAQ,IAChE,kBAAC,GAAD,MACA,kBAAC,GAAD,CACEzJ,MAAM,YACNiR,QAAS9P,EACTsI,QAAQ,IAEV,kBAAC,GAAD,OAGF,kBAAC,GAAD,CAASoH,YAAa,GACpB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAW7Q,MAAM,SAASiR,QAAS,kBAAC,GAAD,QACnC,kBAAC,GAAD,CAAWjR,MAAM,QAAQiR,QAASmN,OC5G7BC,GAAgB,WAAO,IAC1Bxd,EAAmB3E,qBAAWmE,IAA9BQ,eAEF6E,EADWxJ,qBAAWyG,IAApBG,KACYF,IAEpB,IAAK/B,EAAelC,OAClB,OAAO,KAET,IACM2f,EADMhe,GAAgBO,GAAgB4B,OACvBiD,QACnB,gBAAcM,EAAd,EAAG9K,QAAW8K,KAAd,OAA4BN,GAAUA,IAAWM,KAGnD,OAAO,kBAAC,GAAD,CAAWqT,OAAQiF,KCdfC,GAAiB,SAAC,GAAc,IAAZhhB,EAAW,EAAXA,KACzBihB,ECFwB,WAAO,IAAD,EACd5lB,mBAAS,IADK,mBAC7B+B,EAD6B,KACxB8jB,EADwB,KAG5Bvd,EAAkBhF,qBAAWmE,IAA7Ba,cAeR,OAbAnI,qBAAU,WACR,IAAM2lB,EAAS,GACfxd,EACGvG,KAAI,qBAAG2D,OACPkF,SAAQ,SAAClF,GACRogB,EAAOpgB,GAAOwF,GAAgBxF,GAC3B3D,KAAI,qBAAG+I,WAAcwD,WACrBkF,UAGLqS,EAAOC,KACR,CAACxd,IAEGvG,EDhBkBgkB,GACnBC,EAAcC,mBAAmBthB,GACjCuhB,EACJ,8BACIN,EAAiBI,IAAgB,IAAIjkB,KAAI,SAACokB,GAAD,OACzC,yBAAKzgB,IAAKygB,GAAUA,OAY1B,OACE,oCACE,kBAAC,GAAD,CAAW/e,MAAO4e,EAAa3N,QAAS6N,IACxC,kBAAC,GAAD,CAAQvhB,KAAMA,MEdPyhB,GAAe,SAAC,GAAc,IAAZzhB,EAAW,EAAXA,KAE7B,OACE,kBAAC,GAAD,CAAcoD,QAAS,CAAEpD,SACvB,kBAAC,GAAD,CAASsT,YAAa,GACpB,kBAAC,GAAD,CACEI,QACE,kBAAC,IAAD,CAAM9X,UAAW8lB,KAAgBC,KAAM/R,GAAG,KAA1C,qBAON,kBAAC,GAAD,CAAS0D,YAAa,GACpB,kBAAC,GAAD,CAAgBtT,KAAMA,KAGxB,kBAAC,GAAD,CAASsT,YAAa,EAAGC,YAAY,GACnC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAKvT,KAAMA,MAIf,kBAAC,GAAD,CAASsT,YAAa,GACpB,kBAAC,GAAD,CAAW7Q,MAAM,sBACjB,kBAAC,GAAD,OAGF,kBAAC,GAAD,CAAS6Q,YAAa,GACpB,kBAAC,GAAD,S,OCbOsO,OAnBf,WACE,OACE,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAchU,KAAK,KACjB,kBAAC,GAAD,CAAaiU,SAAO,KAEtB,kBAAC,GAAD,CAAcjU,KAAK,SACjB,kBAAC,GAAD,CAAcA,KAAK,YCRb6H,QACa,cAA7BnZ,OAAOof,SAASoG,UAEiB,UAA7BxlB,OAAOof,SAASoG,UAEhBxlB,OAAOof,SAASoG,SAASC,MACrB,2DCZZC,IAASC,OACL,kBAAC,IAAML,WAAP,KACI,kBAAC,GAAD,OAEJ1jB,SAASC,eAAe,SD0HpB,kBAAmB+jB,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAACC,GACHA,EAAaC,gBAEhBC,OAAM,SAACzY,GACJ7H,QAAQ6H,MAAMA,EAAM0Y,c","file":"static/js/main.bbdcd766.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"svg_app__NZ3Nl\",\"light\":\"svg_light__1tyT3\",\"dusk\":\"svg_dusk__yqXl9\",\"dark\":\"svg_dark__mmljC\",\"axis\":\"svg_axis__bET8j\",\"path\":\"svg_path__EmZTS\",\"highlight\":\"svg_highlight__1dzK0\",\"previous\":\"svg_previous__19uFf\",\"current\":\"svg_current__mnSmX\",\"event\":\"svg_event__3Oor8\",\"outer\":\"svg_outer__1Nag9\",\"container\":\"svg_container__2ylni\",\"live\":\"svg_live__2Jj88\",\"now\":\"svg_now__2CbCS\",\"pulse\":\"svg_pulse__2GGpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"rehoboam_app__2vSZA\",\"light\":\"rehoboam_light__rziQr\",\"dusk\":\"rehoboam_dusk__3zUc9\",\"dark\":\"rehoboam_dark__2QkVw\",\"container\":\"rehoboam_container__28M8-\",\"counter\":\"rehoboam_counter__33zQ-\",\"axis\":\"rehoboam_axis__10Kxw\",\"path\":\"rehoboam_path__2oGje\",\"maincircle\":\"rehoboam_maincircle__UPFVE\",\"events\":\"rehoboam_events__24i6B\",\"outer\":\"rehoboam_outer__i-sFc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"tweet_app__1YKqt\",\"light\":\"tweet_light__2q2wS\",\"dusk\":\"tweet_dusk__2D2WU\",\"dark\":\"tweet_dark__1Q5ft\",\"container\":\"tweet_container__2cPfJ\",\"detailed\":\"tweet_detailed__1zw6b\",\"phone\":\"tweet_phone__2hHRD\",\"greyedOut\":\"tweet_greyedOut__187c4\",\"tweet\":\"tweet_tweet__2okc-\",\"active\":\"tweet_active__1wASL\",\"details\":\"tweet_details__165yi\",\"units\":\"tweet_units__2ZVmK\",\"location\":\"tweet_location__26Q8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"group_app__36m5B\",\"light\":\"group_light__3vLZi\",\"dusk\":\"group_dusk__jCyaT\",\"dark\":\"group_dark__XPv8q\",\"container\":\"group_container___U6Y6\",\"item\":\"group_item__1Q6Q7\",\"area\":\"group_area__3alEV\",\"text\":\"group_text__1JC9o\",\"list\":\"group_list__c2KEa\",\"mini\":\"group_mini__151IU\",\"phone\":\"group_phone__rXIIG\",\"major\":\"group_major__2byd-\",\"active\":\"group_active__2THyL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"section_app__2Vo_9\",\"light\":\"section_light__3Rzwq\",\"dusk\":\"section_dusk__2n8zA\",\"dark\":\"section_dark__3d7sN\",\"section\":\"section_section__1TT8J\",\"content\":\"section_content__32e_z\",\"phone\":\"section_phone__C_IbC\",\"styleDefault\":\"section_styleDefault__1fobi\",\"style1\":\"section_style1__-PHu2\",\"style2\":\"section_style2__3JfYX\",\"style3\":\"section_style3__120EE\",\"style4\":\"section_style4__15b6S\",\"style5\":\"section_style5__1cXrW\",\"style6\":\"section_style6__2Pnph\",\"style7\":\"section_style7__2TUBO\",\"style8\":\"section_style8__2W_h1\",\"styleMap\":\"section_styleMap__2ZHhK\",\"subcontent\":\"section_subcontent__1yzVR\",\"edgeToEdge\":\"section_edgeToEdge__28iHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"history_app__3ezRX\",\"light\":\"history_light__2fQs9\",\"dusk\":\"history_dusk__1n3Kx\",\"dark\":\"history_dark__2VOIx\",\"container\":\"history_container__jp729\",\"svg\":\"history_svg__wHz8f\",\"previous\":\"history_previous__1tjyT\",\"current\":\"history_current__2e2uB\",\"years\":\"history_years__2UEbj\",\"left\":\"history_left__YNLcK\",\"right\":\"history_right___nK7k\",\"axis\":\"history_axis__1LX0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"paragraph_app__SRHrQ\",\"light\":\"paragraph_light__MGZls\",\"dusk\":\"paragraph_dusk__2Qeix\",\"dark\":\"paragraph_dark__20gM1\",\"paragraph\":\"paragraph_paragraph__2KRp8\",\"link\":\"paragraph_link__2D61j\",\"text\":\"paragraph_text__1NbBg\",\"margin\":\"paragraph_margin__uTVtm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"chart_app__NgggY\",\"light\":\"chart_light__26OQU\",\"dusk\":\"chart_dusk__tXZzv\",\"dark\":\"chart_dark__2_Xz6\",\"container\":\"chart_container__3RTag\",\"header\":\"chart_header__3gCPW\",\"svg\":\"chart_svg__pP08z\",\"total\":\"chart_total__qkQSI\",\"title\":\"chart_title__2BYUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"topline_app__oxYOD\",\"light\":\"topline_light__3Wkuy\",\"dusk\":\"topline_dusk__3oZf9\",\"dark\":\"topline_dark__2sg1O\",\"topline\":\"topline_topline__3XNKt\",\"phone\":\"topline_phone__2VHBk\",\"text\":\"topline_text__2_5SM\",\"date\":\"topline_date__2k6ha\",\"total\":\"topline_total__b2Zkr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"tweetdetails_app__2e3dp\",\"light\":\"tweetdetails_light__1bFOl\",\"dusk\":\"tweetdetails_dusk__CdslP\",\"dark\":\"tweetdetails_dark__1vbtk\",\"container\":\"tweetdetails_container__1rcoE\",\"explanation\":\"tweetdetails_explanation__3lEx4\",\"secondary\":\"tweetdetails_secondary__sgHzU\",\"unit\":\"tweetdetails_unit__33Rog\",\"link\":\"tweetdetails_link__23U3X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"punchcard_app__3zFJM\",\"light\":\"punchcard_light__3awiA\",\"dusk\":\"punchcard_dusk__3Fp1M\",\"dark\":\"punchcard_dark__14k53\",\"element\":\"punchcard_element__1QO6I\",\"axis\":\"punchcard_axis__1nRhh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"map_app__QgyhH\",\"light\":\"map_light__1l7Uw\",\"dusk\":\"map_dusk__1Kp5m\",\"dark\":\"map_dark__3mN3y\",\"container\":\"map_container__1WM_n\",\"phone\":\"map_phone__1XpbO\",\"area\":\"map_area__1ZdwJ\",\"pane\":\"map_pane__g9Le7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"areashape_app__1jcgu\",\"light\":\"areashape_light__2vos_\",\"dusk\":\"areashape_dusk__1spjy\",\"dark\":\"areashape_dark__3xOoz\",\"container\":\"areashape_container__3TA09\",\"phone\":\"areashape_phone__ZKBlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"spark_app__36AlW\",\"light\":\"spark_light__2xEJ2\",\"dusk\":\"spark_dusk__3_z2Z\",\"dark\":\"spark_dark__kLY0-\",\"container\":\"spark_container__20mVH\",\"total\":\"spark_total__2Kxtk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tweets\":\"tweets_tweets__PhO0z\",\"placeholder\":\"tweets_placeholder__3XAe5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"themeswitch_app__2HrZq\",\"light\":\"themeswitch_light__3BWCp\",\"dusk\":\"themeswitch_dusk__1o_VU\",\"dark\":\"themeswitch_dark__2wyZC\",\"button\":\"themeswitch_button__EJKnS\",\"selected\":\"themeswitch_selected__3Zb_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"freshness_app__1pyQO\",\"light\":\"freshness_light__35wVx\",\"dusk\":\"freshness_dusk__7082x\",\"dark\":\"freshness_dark__TBbwG\",\"time\":\"freshness_time__3D6Db\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"legend_app__3eMcH\",\"light\":\"legend_light__1wq_m\",\"dusk\":\"legend_dusk__1H7LY\",\"dark\":\"legend_dark__7TXq5\",\"legend\":\"legend_legend__1pAdz\"};","import React, { createContext, useState, useEffect } from \"react\";\n// import { getSunrise, getSunset } from \"sunrise-sunset-js\";\n// import { defaultCentroid } from \"./geojson\";\n// import { pacificMidnight } from \"../clientUtils\";\n\nexport const ThemeContext = createContext();\n\nconst useTheme = () => {\n  const [theme, setTheme] = useState(\"dark\"); // TODO\n\n  useEffect(() => {\n    // const midnight = new Date(pacificMidnight());\n    // const nextMidnight = new Date(pacificMidnight(1));\n    // const sunrise = getSunrise(...defaultCentroid, midnight);\n    // const sunset = getSunset(...defaultCentroid, nextMidnight);\n    // const now = new Date();\n    // const threshold = 0.5 * 3600 * 1000;\n    // if (\n    //   Math.abs(now - sunrise) < threshold ||\n    //   Math.abs(now - sunset) < threshold\n    // ) {\n    //   setTheme(\"dusk\");\n    // } else if (now < sunrise || now > sunset) {\n    //   setTheme(\"dark\");\n    // } else {\n    //   setTheme(\"light\");\n    // }\n  }, []);\n\n  return { theme, setTheme };\n};\n\nexport const ThemeProvider = ({ children }) => {\n  const value = useTheme();\n  const { theme } = value;\n  return (\n    <ThemeContext.Provider value={value}>\n      <div id=\"app\" className={theme}>\n        {children}\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n","import { timeMinute as d3timeMinute } from 'd3-time';\nimport { tz as timezone } from \"moment-timezone\";\n\nexport const intervalExtent = ({ start, end }, expandMinutes = 0) =>\n  expand([start, end], expandMinutes);\n\n// move to server/histogram.js\nexport const expand = (extent, expandMinutes = 0) => [\n  d3timeMinute.offset(extent[0], -expandMinutes),\n  d3timeMinute.offset(extent[1], expandMinutes),\n];\n\n// TODO - coordinate with section.module.scss, or find a way to use vars\n\nconst maxWidthPhone = 500;\nconst queryText = `only screen and (max-device-width: ${maxWidthPhone}px)`;\n\nexport const isPhone = () =>\n  window ? !!window.matchMedia(queryText).matches : true;\n\n// see also fileUtils.js on server\nconst SeattleTimezone = \"America/Vancouver\";\nexport const timeFormatter = (timestamp, format = \"h:mm A\") =>\n  timezone(timestamp, SeattleTimezone).format(format);\n\nexport const timeFormatterUserTimezone = (date, format = \"h:mm A\") =>\n  timezone(date, timezone.guess()).format(format);\n\nexport const timeFormatterHourAM = (timestamp) =>\n  timeFormatter(timestamp, \"h A\");\n\nexport const timeFormatterMonth = (timestamp) =>\n  timeFormatter(+timestamp, \"MMM\");\n\nexport const timeFormatterMonthDay = (timestamp) =>\n  timeFormatter(+timestamp, \"MMM D\");\n\nexport const pacificMidnight = (addDays = 0) =>\n  +timezone(new Date(), SeattleTimezone).startOf(\"day\").add(addDays, \"days\");\n\nconst HOUR = 3600 * 1000;\nexport const every6Hours = (start) =>\n  [0, 6, 12, 18, 24].map((h) => start + h * HOUR); // Or use moment.add()\nconst months = [...new Array(12)].map((_, i) => i);\nexport const everyMonth = (start) => {\n  const m = timezone(start, SeattleTimezone);\n  return months.map((v) => m.clone().add(v, \"months\").toDate());\n};\n\nexport const isActive = ({ derived: { active } }) => active;\nexport const isAtLeastSev1 = ({ derived: { severity } }) => severity >= 1;\nexport const isAtLeastSev2 = ({ derived: { severity } }) => severity >= 2;\nexport const isExactlySev1 = ({ derived: { severity } }) => severity === 1;\nexport const isExactlySev2 = ({ derived: { severity } }) => severity === 2;\n\nexport const getStyleProp = (prop) => {\n  const appElement = document.getElementById(\"app\");\n    const style = getComputedStyle(appElement);\n    return style.getPropertyValue(prop);\n}","import React, { useContext, useEffect, useState } from \"react\";\nimport { ThemeContext } from \"./ThemeContext\";\nimport { Circle } from \"react-leaflet\";\nimport { getStyleProp } from \"../clientUtils\";\n\nexport const Appearance = {\n  Normal: 0,\n  Dimmed: -1,\n  Highlighted: 1,\n};\n\nexport const MapDot = ({\n  coordinates,\n  severity = 0,\n  active = false,\n  appearance = Appearance.Normal,\n}) => {\n  const { theme } = useContext(ThemeContext);\n  const [color, setColor] = useState(null);\n\n  useEffect(() => {\n    const regularColor = getStyleProp(\"--graph-primary\");\n    const activeColor = getStyleProp(\"--live\");\n    setColor(active ? activeColor : regularColor);\n  }, [active, theme]);\n\n  // TODO - set opacity in CSS\n  let opacity = 0.5;\n  if (severity >= 1) {\n    opacity = 0.75;\n  }\n  if (active) {\n    opacity = 0.9;\n  }\n  if (appearance === Appearance.Dimmed) {\n    opacity = 0.3;\n  }\n  if (appearance === Appearance.Highlighted) {\n    opacity = 0.9;\n  }\n  const baseRadius = active ? 250 : 150;\n\n  if (!coordinates[0]) {\n    // console.warn(`Dot: coordinates = ${coordinates}`);\n    return null;\n  }\n\n  return (\n    <>\n      <Circle\n        center={coordinates}\n        radius={baseRadius}\n        color={color}\n        fill={true}\n        fillOpacity={opacity}\n        stroke={false}\n      ></Circle>\n      {severity >= 1 && (\n        <Circle\n          center={coordinates}\n          radius={baseRadius + 150}\n          weight={2}\n          color={color}\n          opacity={opacity}\n          fill={false}\n        ></Circle>\n      )}\n      {severity >= 2 && (\n        <Circle\n          center={coordinates}\n          radius={baseRadius + 300}\n          weight={2}\n          color={color}\n          opacity={opacity}\n          fill={false}\n        ></Circle>\n      )}\n    </>\n  );\n};\n","export async function getEnv() {\n  return getByAPI(\"env\");\n}\n\nexport async function getStatus() {\n  return getByAPI(`dispatch/status`);\n}\n\nexport async function getAnnotations() {\n  return getByAPI(`dispatch/history/annotations`);\n}\n\nexport async function getHistory() {\n  return getByAPI(`dispatch/history`);\n}\n\nexport async function getPunchCard() {\n  return getByAPI(`dispatch/punchcard`);\n}\n\nexport async function getTweetsForArea(area, queryParams) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsForAreaMin(\n  area,\n  queryParams = { minimize: true, hiRes: true }\n) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsForAreaMinWeek(\n  area,\n  queryParams = { minimize: true, compare: 6 }\n) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsByArea(queryParams) {\n  return getByAPI(`dispatch/tweets/byArea`, queryParams);\n}\n\nexport async function getTweetsMajor() {\n  return getByAPI(\"dispatch/tweets/major\");\n}\n\nexport async function getTweetsActive24() {\n  return getByAPI(\"dispatch/tweets/active24\");\n}\n\nexport async function getTweetsStatic() {\n  return getByAPI(\"dispatch/static\");\n}\n\nexport async function getTweetsSeattleGov() {\n  return getByAPI(\"dispatch/seattle-gov\");\n}\n\nconst queryString = (query = {}) => {\n  const list = Object.keys(query).map(\n    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(query[key])}`\n  );\n  return list.join(\"&\");\n};\n\nasync function getByAPI(api = \"\", queryParams = {}) {\n  const query = queryString(queryParams);\n  const response = await fetch(\n    `/api/${api}${query.length ? \"?\" : \"\"}${query}`,\n    {\n      // TODO - use axios?\n      headers: { Accept: \"application-json\" },\n    }\n  );\n\n  return response.json();\n}\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { getStatus } from \"../api\";\nconst deepEqual = require(\"fast-deep-equal/es6/react\");\n\nexport const StatusContext = createContext();\n\nconst useStatus = () => {\n  const [status, setStatus] = useState({});\n  const [previousStatus, setPreviousStatus] = useState({});\n\n  useEffect(() => {\n    const delay = 60 * 1000;\n\n    console.log(\n      `🟥 useStatus/starting checker @ every ${delay / 1000} seconds`\n    );\n    const checkForUpdates = async () => {\n      const newStatus = await getStatus();\n      // console.log(\n      //   `useStatus(${intervalId})/current status (next check in ${\n      //     delay / 1000\n      //   } sec)`,\n      //   newStatus\n      // );\n\n      if (!deepEqual(status, newStatus)) {\n        console.log(\"useStatus/setting new status:\", newStatus);\n        setPreviousStatus(status);\n        setStatus(newStatus);\n      }\n\n      if (status.env === \"development\") {\n        document.title = \"KSEA.live (dev)\";\n      }\n    };\n\n    checkForUpdates();\n    const intervalId = setInterval(checkForUpdates, delay);\n    return () => clearInterval(intervalId);\n  }, [status]);\n\n  return { status, previousStatus };\n};\n\nexport const StatusProvider = ({ children }) => {\n  const value = useStatus();\n  return (\n    <StatusContext.Provider value={value}>{children}</StatusContext.Provider>\n  );\n};\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { select as d3select } from \"d3-selection\";\nimport textures from \"textures\";\nimport {\n  annotation as d3annotation,\n  annotationCalloutCircle as d3annotationCalloutCircle,\n} from \"d3-svg-annotation\";\nimport { DataContext } from \"./DataProvider\";\n\nimport \"./annotations.scss\";\nimport { getStyleProp } from \"../clientUtils\";\n\nlet textureCurrent;\nlet texturePrevious;\n\nexport const Annotations = ({ currentStart, rectWidth, scales, clipPaths }) => {\n  const calloutsRef = useRef(null);\n  const regionsRef = useRef(null);\n  const { annotations } = useContext(DataContext);\n  const [regions, setRegions] = useState([]);\n\n  useEffect(() => {\n    if (!scales.length) {\n      return;\n    }\n    \n    const [xScale, yScale] = scales;\n    const annotationColor = getStyleProp(\"--annotation\");\n    const textureColor = getStyleProp(\"--texture\");\n    texturePrevious = textures\n      .lines()\n      // .lighter()\n      .size(8)\n      .stroke(textureColor);\n    textureCurrent = textures\n      .lines()\n      // .lighter()\n      .size(8)\n      .orientation(\"6/8\")\n      .stroke(textureColor);\n\n    d3select(regionsRef.current).call(textureCurrent);\n    d3select(regionsRef.current).call(texturePrevious);\n\n    const regionFn = ({ start, end, offset }, i) => {\n      if (!start || !end) {\n        return undefined;\n      }\n      const isCurrent = offset === 0;\n      const texture = isCurrent ? textureCurrent : texturePrevious;\n\n      return {\n        key: `${start}-${end}-${i}`,\n        x: xScale(0) - (isCurrent ? 0 : rectWidth),\n        y: yScale(start.timestamp + offset),\n        width: rectWidth,\n        height:\n          yScale(end.timestamp + offset) - yScale(start.timestamp + offset),\n        fill: texture.url(),\n      };\n    };\n\n    const calloutFn = ({\n      item: { title, label, value, timestamp },\n      offset,\n      scales: [xScale, yScale],\n      isEnd = false,\n    }) => {\n      const isPrevious = timestamp < currentStart;\n      const sideX = isPrevious ? -1 : 1;\n\n      const x = value ? xScale(value) : rectWidth;\n      const sideY = isEnd ? 1 : -1;\n      const y = yScale(timestamp + offset);\n      const callout = {\n        note: {\n          title,\n          label,\n        },\n        x: sideX * x,\n        y,\n        subject: {\n          radius: 6,\n        },\n        color: annotationColor,\n      };\n\n      if (value) {\n        callout.nx = sideX * (rectWidth + 10);\n        callout.ny = y;\n      } else {\n        callout.dx = sideX * 10;\n        callout.dy = sideY * 10;\n      }\n      return callout;\n    };\n\n    const calloutsFn = ({ start, end, offset }) => [\n      start ? calloutFn({ item: start, offset, scales }) : undefined,\n      end ? calloutFn({ item: end, offset, scales, isEnd: true }) : undefined,\n    ];\n\n    const calloutsSvgData = annotations.flatMap(calloutsFn).filter(Boolean);\n\n    const callout = d3annotation()\n      .annotations(calloutsSvgData)\n      .type(d3annotationCalloutCircle);\n\n    d3select(calloutsRef.current).call(callout);\n\n    const newRegions = annotations.map(regionFn).filter(Boolean);\n    setRegions(newRegions);\n  }, [annotations, currentStart, rectWidth, scales]);\n\n  return (\n    <>\n      <defs>\n        <clipPath id=\"clippath\">\n          <path d={clipPaths.current} />\n          <path d={clipPaths.previous} />\n        </clipPath>\n      </defs>\n      <g ref={regionsRef}>\n        {regions.map((annotation) => (\n          <rect {...annotation} clipPath=\"url(#clippath)\" />\n        ))}\n      </g>\n      <g ref={calloutsRef} />\n    </>\n  );\n};\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\nimport {\n  getTweetsForArea,\n  getTweetsByArea,\n  getHistory,\n  getAnnotations,\n  getTweetsActive24,\n  getTweetsMajor,\n  getTweetsForAreaMin,\n  getTweetsForAreaMinWeek,\n  getPunchCard,\n} from \"../api\";\n\nimport { StatusContext } from \"./StatusContext\";\nconst deepEqual = require(\"fast-deep-equal/es6/react\");\n\nexport const DataContext = createContext();\n\nexport const currentInterval = (dataset) => dataset[0].intervals[0];\nexport const previousInterval = (dataset) => dataset[0].intervals[1];\n\nconst useTweets = (filters = {}) => {\n  const initialValue = {\n    filteredByArea: [],\n    filteredByAreaMin: [],\n    filteredByAreaMinWeek: [],\n    activeOrMajorForArea: [],\n    activeOrMajorByArea: [],\n    groupedByArea: [],\n    history: [],\n    active24: [],\n    major24: [],\n    annotations: [],\n    punchCard: {},\n    status: {},\n  };\n  const [value, setValue] = useState(initialValue);\n  const { status, previousStatus } = useContext(StatusContext);\n  const mostRecentId = previousStatus.mostRecentId\n    ? status.mostRecentId\n    : undefined;\n\n  if (mostRecentId) {\n    console.log(`useTweets/mostRecentId: ${mostRecentId}`);\n  }\n\n  const [filteredByArea, setFilteredByArea] = useState([]);\n  const [filteredByAreaMin, setFilteredByAreaMin] = useState([]);\n  const [filteredByAreaMinWeek, setFilteredByAreaMinWeek] = useState([]);\n  const [activeOrMajorForArea, setActiveOrMajorForArea] = useState([]);\n  const [activeOrMajorByArea, setActiveOrMajorByArea] = useState([]);\n  const [groupedByArea, setGroupedByArea] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [active24, setActive24] = useState([]);\n  const [major24, setMajor24] = useState([]);\n  const [annotations, setAnnotations] = useState([]);\n  const [punchCard, setPunchCard] = useState({});\n\n  const [shouldFetch, setShouldFetch] = useState(true);\n\n  useEffect(() => {\n    if (!deepEqual(status, previousStatus)) {\n      setShouldFetch(true);\n    }\n  }, [status, previousStatus]);\n\n  useEffect(() => {\n    if (!shouldFetch) {\n      console.log(\"PROVIDER/not fetching\");\n      return;\n    }\n    console.log(\"🟢 PROVIDER/fetching all data\");\n    setShouldFetch(false);\n\n    const area = filters.area || \"seattle\";\n\n    console.log(\"PROVIDER/filters.area=\", area);\n    if (area === \"seattle\") {\n      (async () => {\n        setFilteredByAreaMin(await getTweetsForAreaMin(area));\n        setFilteredByAreaMinWeek(await getTweetsForAreaMinWeek(area));\n      })();\n    }\n\n    (async () => {\n      setFilteredByArea(await getTweetsForArea(area));\n    })();\n\n    (async () => {\n      setActiveOrMajorForArea(\n        await getTweetsForArea(area, { activeOrMajor: true })\n      );\n    })();\n\n    (async () => {\n      const response = await getTweetsActive24();\n      setActive24(response[0].intervals[0].values);\n    })();\n\n    (async () => {\n      const response = await getTweetsMajor();\n      setMajor24(response[0].intervals[0].values);\n    })();\n\n    (async () => {\n      setGroupedByArea(await getTweetsByArea());\n    })();\n\n    (async () => {\n      setActiveOrMajorByArea(await getTweetsByArea({ activeOrMajor: true }));\n    })();\n\n    (async () => {\n      setAnnotations(await getAnnotations());\n    })();\n\n\n    (async () => {\n      setPunchCard(await getPunchCard());\n    })();\n\n    if (!history.length) {\n      (async () => {\n        setHistory(await getHistory(area));\n      })();\n    }\n  }, [filters.area, history.length, mostRecentId, shouldFetch]);\n\n  useEffect(() => {\n    setValue({\n      filteredByArea,\n      filteredByAreaMin,\n      filteredByAreaMinWeek,\n      groupedByArea,\n      history,\n      annotations,\n      punchCard,\n      active24,\n      major24,\n      activeOrMajorForArea,\n      activeOrMajorByArea,\n      status,\n    });\n  }, [active24, activeOrMajorByArea, activeOrMajorForArea, annotations, filteredByArea, filteredByAreaMin, filteredByAreaMinWeek, groupedByArea, history, major24, punchCard, status]);\n\n  return value;\n};\n\nexport const DataProvider = ({ filters, children }) => {\n  const value = useTweets(filters);\n  return <DataContext.Provider value={value}>{children}</DataContext.Provider>;\n};\n","import React, { useState, createContext, useEffect } from \"react\";\n\nexport const UserContext = createContext();\n\nexport const UserContextKeys = {\n  SelectedTweet: \"SelectedTweet\",\n  TypeFilter: \"TypeFilter\",\n};\n\nconst useUser = () => {\n  const [user, setUser] = useState({});\n\n  const setSelection = (key, value) => {\n    console.log(`USER: ${key} -->`, value);\n    setUser({ ...user, [key]: value });\n  };\n\n  useEffect(()=>{console.log('USER/useEffect')},[]);\n\n  return { user, setSelection };\n};\n\nexport const UserProvider = ({ children }) => {\n  return (\n    <UserContext.Provider value={useUser()}>{children}</UserContext.Provider>\n  );\n};\n","export const mapOptions = (theme, phone = false) => {\n  const query = phone ? \"?phone=true\" : \"\";\n  return {\n    url: `/api/dispatch/maps/{x}/{y}/{z}/${theme}${query}`,\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; jawg maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">openstreetmap</a> contributors',\n  };\n};\n","import { mean as d3mean, extent as d3extent } from \"d3-array\";\n// import zipCodes from \"./zip-codes.json\";\n// import nhoods from \"./nhoods.json\";\nimport nhoods from \"./2016_seattle_cra.json\";\nimport city from \"./2016_seattle_city.json\";\n\nconst nhoodProp = \"NEIGHBO\"; // TODO - import from server/groupby.js\n// const zipcodeProp = \"GEOID10\";\n\nconst byArea = (features, prop) => {\n  const map = {};\n  features.forEach((feature) => {\n    const key = feature.properties[prop];\n    const list = map[key] || [];\n    list.push(feature);\n    map[key] = list;\n  });\n  return map;\n};\n\nconst nhoodFeaturesByArea = byArea(nhoods.features, nhoodProp);\nconst featuresForNhood = (nhood) => nhoodFeaturesByArea[nhood];\n\n// const zipcodeFeaturesByArea = byArea(zipCodes.features, zipcodeProp);\n// const featuresForZip = (zip) => zipcodeFeaturesByArea[zip];\n\nexport const featuresForArea = featuresForNhood;\n\nexport const areas = {\n  geojson: nhoods,\n  areaProp: nhoodProp,\n};\n\nexport const cityGeojson = city;\n\nconst lat = 47.61485,\n  long = -122.32838;\nexport const defaultCentroid = [lat, long]; // approx. centroid of cityGeojson\n\nexport const mapBounds = [\n  [lat + 0.2, long - 0.3],\n  [lat - 0.2, long + 0.3],\n];\n\nexport const centroid = (features) => {\n  if (!features.length) {\n    return defaultCentroid;\n  }\n\n  let coords = features\n    .map(({ geometry: { coordinates } }) => coordinates)\n    .flat(2);\n  const latExtent = d3extent(coords, ([_, lat]) => lat);\n  const longExtent = d3extent(coords, ([long, _]) => long);\n  return [d3mean(latExtent), d3mean(longExtent)];\n};\n","import React, { useContext } from \"react\";\nimport { Map as LeafletMap, TileLayer, GeoJSON } from \"react-leaflet\";\nimport { MapDot, Appearance } from \"./MapDot\";\nimport { DataContext, currentInterval } from \"./DataProvider\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\nimport { ThemeContext } from \"./ThemeContext\";\nimport { mapOptions } from \"./mapOptions\";\nimport { centroid, areas, cityGeojson, mapBounds } from \"./geojson\";\nimport classnames from \"classnames\";\nimport { isPhone, getStyleProp } from \"../clientUtils\";\nimport \"./leaflet.scss\";\nimport styles from \"./map.module.scss\";\n\nconst minZoom = 10,\n  maxZoom = 13,\n  defaultZoom = 11;\n\nexport const Map = ({ area }) => {\n  const { user } = useContext(UserContext);\n  const { filteredByArea } = useContext(DataContext);\n  const { theme } = useContext(ThemeContext);\n\n  if (!filteredByArea.length) {\n    // console.log(\"MAP/no data\");\n    return null;\n  }\n\n  const geoColor = getStyleProp(\"--geo\");\n  const geoBoundsColor = getStyleProp(\"--geo-bounds\");\n\n  const geojsonStyleBounds = {\n    color: geoBoundsColor,\n    fillOpacity: 0,\n    strokeOpacity: 0.5,\n    weight: 4,\n  };\n  const geojsonStyleActive = {\n    color: geoColor,\n    fillColor: geoColor,\n    fillOpacity: 0.1,\n    strokeOpacity: 0.5,\n    weight: 2,\n  };\n\n  const { geojson, areaProp } = areas;\n\n  const typeFilter = user[UserContextKeys.TypeFilter];\n  const selectedTweet = user[UserContextKeys.SelectedTweet];\n\n  const renderFilter = ({ properties }) =>\n    area && properties[areaProp] === area;\n\n  const { features } = geojson;\n  const rendered = features.filter(renderFilter);\n\n  let zoom = defaultZoom;\n  if (area) {\n    zoom = defaultZoom + 1;\n  }\n  if (selectedTweet && selectedTweet.derived.lat) {\n    zoom = maxZoom;\n  }\n\n  const center =\n    selectedTweet && selectedTweet.derived.lat\n      ? [selectedTweet.derived.lat, selectedTweet.derived.long]\n      : area\n      ? centroid(rendered)\n      : centroid(cityGeojson.features);\n\n  const mapper = ({\n    id_str,\n    derived: { lat, long, type, color, active, severity },\n  }) => ({\n    id_str,\n    lat,\n    long,\n    type,\n    color, // TODO - do not use\n    active,\n    severity,\n  });\n\n  const isSelectedDot = ({ id_str }) => selectedTweet.id_str === id_str;\n\n  // const importantOnTop = (a, b) => { return 0; }; // TODO\n\n  const interval = currentInterval(filteredByArea);\n  let data = interval.values\n    .map(mapper)\n    .filter(({ type }) => !typeFilter || typeFilter === type);\n  // .sort(importantOnTop);\n\n  if (selectedTweet) {\n    // Render selected dot last, so it appears on top\n    const selectedIndex = data.findIndex(isSelectedDot);\n\n    data =\n      selectedIndex === -1\n        ? []\n        : [\n            ...data.slice(0, selectedIndex),\n            ...data.slice(selectedIndex + 1),\n            data[selectedIndex],\n          ];\n  }\n\n  const appearanceFn = (d) => {\n    return selectedTweet && selectedTweet.derived.lat\n      ? isSelectedDot(d)\n        ? Appearance.Highlighted\n        : Appearance.Dimmed\n      : Appearance.Normal;\n  };\n\n   console.log(\"MAP/selected:\",selectedTweet && selectedTweet.derived);\n\n  // console.log(\n  //   `MAP/render area=${area || \"-\"}, zoom=${zoom}, selected:${\n  //     (selectedTweet || {}).id_str || \"-\"\n  //   }, features:${rendered.length}/${features.length}, dots:${\n  //     data.length\n  //   }, geo:${rendered.length}`\n  // );\n  const phone = isPhone();\n  const tileOptions = mapOptions(theme, phone);\n  const city = cityGeojson.features[0];\n\n  return (\n    <LeafletMap\n      className={classnames(styles.container, {\n        [styles.area]: area,\n        [styles.phone]: phone,\n      })}\n      center={center}\n      zoom={zoom}\n      minZoom={minZoom}\n      maxZoom={maxZoom}\n      maxBounds={mapBounds}\n      maxBoundsViscosity={0.6}\n      zoomControl={false}\n    >\n      <TileLayer {...tileOptions} />\n      {!area && <GeoJSON data={city} style={geojsonStyleBounds} />}\n      {rendered.map((feature) => (\n        <GeoJSON\n          key={feature.properties.CRA_NAM}\n          data={feature}\n          style={geojsonStyleActive}\n        />\n      ))}\n      {data.map((d) => (\n        <MapDot // TODO - group under a single container?\n          key={d.id_str}\n          coordinates={[d.lat, d.long]}\n          severity={d.severity}\n          appearance={appearanceFn(d)}\n          active={d.active}\n        />\n      ))}\n    </LeafletMap>\n  );\n};\n","import React from \"react\";\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"ErrorBoundary\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n","import React, { useContext } from \"react\";\nimport { Map as LeafletMap, TileLayer, GeoJSON } from \"react-leaflet\";\nimport { featuresForArea, centroid } from \"./geojson\";\nimport { mapOptions } from \"./mapOptions\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { isPhone, getStyleProp } from \"../clientUtils\";\nimport classnames from \"classnames\";\nimport styles from \"./areashape.module.scss\";\nimport { ThemeContext } from \"./ThemeContext\";\n\nexport const AreaShape = ({ area }) => {\n  const { theme } = useContext(ThemeContext);\n  const features = featuresForArea(area);\n  if (!features || !features.length) {\n    console.warn(\"AreaShape/no features for area\", area);\n    return null;\n  }\n\n  const geoColor = getStyleProp(\"--geo\");\n\n  const geojsonStyle = {\n    color: geoColor,\n    fillColor: geoColor,\n    fillOpacity: 0.1,\n    weight: 2,\n  };\n\n  const center = centroid(features);\n  const zoom = 10;\n  const phone = isPhone();\n  const tileOptions = mapOptions(theme, phone);\n\n  return (\n    <ErrorBoundary>\n      <LeafletMap\n        className={classnames(styles.container, { [styles.phone]: phone })}\n        center={center}\n        zoom={zoom}\n        minZoom={zoom}\n        maxZoom={zoom}\n        zoomControl={false}\n        attributionControl={false}\n        dragging={false}\n        keyboard={false}\n      >\n        <TileLayer {...tileOptions} />\n        <GeoJSON data={features} style={geojsonStyle} />\n      </LeafletMap>\n    </ErrorBoundary>\n  );\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport svgStyles from \"./svg.module.scss\";\n\nexport const SvgDot = ({ radius = 0, active = false, sev1 = false, sev2 = false }) => {\n  const size = 20,\n    sev1Radius = 6.5,\n    sev2Radius = 9;\n  const baseRadius = radius || (4);\n\n  return (\n    <svg\n      className={classnames(svgStyles.container, { [svgStyles.live]: active })}\n      width={size}\n      height={size}\n    >\n      <circle className={svgStyles.event} cx={size / 2} cy={size / 2} r={baseRadius} />\n      {(sev1 || sev2) && (\n        <circle className={svgStyles.outer}\n          cx={size / 2}\n          cy={size / 2}\n          r={sev1Radius}\n          fill=\"none\"\n        />\n      )}\n      {sev2 && (\n        <circle className={svgStyles.outer}\n          cx={size / 2}\n          cy={size / 2}\n          r={sev2Radius}\n          fill=\"none\"\n        />\n      )}\n    </svg>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { intervalExtent, isPhone } from \"../clientUtils\";\nimport classnames from \"classnames\";\n\nimport {\n  scaleLinear as d3scaleLinear,\n  scaleTime as d3scaleTime,\n} from \"d3-scale\";\nimport { max as d3max } from \"d3-array\";\nimport { line as d3line, curveCardinal as d3curveCardinal } from \"d3-shape\";\n\nimport sparkStyles from \"./spark.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nexport const Spark = ({\n  intervals = [],\n  showTotal,\n  useCumulative,\n  showPrevious,\n}) => {\n  const [svgData, setSvgData] = useState([]);\n  const [nowDot, setNowDot] = useState(null);\n\n  const radius = 3;\n  const svgWidth = isPhone() ? 80 : 100;\n  const svgHeight = 0.2 * svgWidth,\n    margin = {\n      top: radius + 1,\n      right: radius + 1,\n      bottom: radius + 1,\n      left: radius + 1,\n    },\n    width = svgWidth - margin.left - margin.right,\n    height = svgHeight - margin.bottom - margin.top;\n\n  useEffect(() => {\n    // TODO - no need for useEffect?\n    if (!intervals.length) {\n      return;\n    }\n\n    const data = showPrevious ? intervals : intervals.slice(0, 1);\n\n    const accessor = ({ length, cumulative }) =>\n      useCumulative ? cumulative : length;\n\n    const xExtent = intervalExtent(data[0]);\n\n    const yExtent = [\n      0,\n      d3max([1.0, ...data.flatMap(({ bins }) => bins).map(accessor)]),\n    ];\n\n    const xScale = d3scaleTime().domain(xExtent).range([0, width]);\n    const yScale = d3scaleLinear().domain(yExtent).range([height, 0]);\n\n    const line = d3line()\n      .curve(d3curveCardinal.tension(0.3))\n      .x((d) => xScale(d.x0))\n      .y((d) => yScale(accessor(d)));\n\n    const paths = data.map((d) => d.bins).map(line);\n\n    let newSvgData = paths.map((path, i) => ({ path, key: i })).reverse(); // render highlight after all others\n\n    setSvgData(newSvgData);\n\n    const bins = data[0].bins;\n    if (bins.length) {\n      const lastBin = bins[bins.length - 1];\n      setNowDot({\n        cx: xScale(lastBin.x0),\n        cy: yScale(accessor(lastBin)),\n        r: radius,\n      });\n    }\n  }, [width, height, intervals, showPrevious, useCumulative]);\n\n  if (!intervals.length) {\n    return null;\n  }\n\n  const total = intervals[0].total;\n  const lastIndex = svgData.length - 1;\n\n  return (\n    <div className={sparkStyles.container}>\n      <svg width={svgWidth} height={svgHeight}>\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <g>\n            {svgData.map(({path,key}, i) => (\n              <path\n              key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: i === lastIndex,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          {nowDot && (\n            <g className={svgStyles.now}>\n              <circle {...nowDot} />\n            </g>\n          )}\n        </g>\n      </svg>\n      {showTotal && <span className={sparkStyles.total}>{total}</span>}\n    </div>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"@reach/router\";\nimport { DataContext } from \"./DataProvider\";\nimport { AreaShape } from \"./AreaShape\";\n\nimport {\n  isActive,\n  isExactlySev2,\n  isExactlySev1,\n  isPhone,\n} from \"../clientUtils\";\nimport { SvgDot } from \"./SvgDot\";\nimport { Spark } from \"./Spark\";\nimport classnames from \"classnames\";\nimport styles from \"./group.module.scss\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\n\nconst Totals = ({ totals }) => {\n  if (!totals) {\n    return null;\n  }\n  return (\n    <>\n      {totals.active > 0 && (\n        <span className={styles.active}>\n          <SvgDot active={true} />\n          <span>{totals.active} </span>\n        </span>\n      )}\n      {totals.sev2 > 0 && (\n        <span>\n          <SvgDot sev2={true} />\n          <span> {totals.sev2} </span>\n        </span>\n      )}\n      {totals.sev1 > 0 && (\n        <span>\n          <SvgDot sev1={true} />\n          <span> {totals.sev1} </span>\n        </span>\n      )}\n    </>\n  );\n};\n\nexport const GroupByArea = () => {\n  const { groupedByArea, activeOrMajorByArea } = useContext(DataContext);\n  const [totalsMap, setTotalsMap] = useState({});\n  const [data, setData] = useState([]);\n  const phone = isPhone();\n\n  useEffect(() => {\n    if (!activeOrMajorByArea.length) {\n      return;\n    }\n\n    const map = {};\n    activeOrMajorByArea.forEach(({ key: area, intervals }) => {\n      const values = intervals[0].values;\n      if (values.length) {\n        map[area] = {\n          active: values.filter(isActive).length,\n          sev1: values.filter(isExactlySev1).length,\n          sev2: values.filter(isExactlySev2).length,\n        };\n      }\n    });\n    setTotalsMap(map);\n  }, [activeOrMajorByArea]);\n\n  useEffect(() => {\n    if (!groupedByArea.length || !totalsMap) {\n      return;\n    }\n\n    const sortByImportance = (\n      { key: areaA, intervals: intervalsA },\n      { key: areaB, intervals: intervalsB }\n    ) => {\n      const { active: activeA, sev1: sev1A, sev2: sev2A } = totalsMap[\n        areaA\n      ] || { active: 0, sev1: 0, sev2: 0 };\n      const { active: activeB, sev1: sev1B, sev2: sev2B } = totalsMap[\n        areaB\n      ] || { active: 0, sev1: 0, sev2: 0 };\n      const totalA = intervalsA[0].total;\n      const totalB = intervalsB[0].total;\n\n      return (\n        activeB - activeA || sev2B - sev2A || sev1B - sev1A || totalB - totalA\n      );\n    };\n    const sortedData = groupedByArea.sort(sortByImportance);\n    setData(sortedData);\n  }, [groupedByArea, totalsMap]);\n\n  if (!data.length) {\n    return null;\n  }\n\n  return (\n    <div className={styles.container}>\n      {data.map(({ key: area, intervals }) => (\n        <div key={area} className={styles.item}>\n          <div\n            className={classnames(styles.text, {\n              [styles.phone]: phone,\n            })}\n          >\n            <div className={styles.area}>{area}</div>\n            {/* {neighborhoodsMap[area] && (\n                  <div className={classnames(styles.list)}>\n                    {neighborhoodsMap[area].map((v) => (\n                      <div key={v}>• {v}</div>\n                    ))}\n                  </div>\n                )} */}\n          </div>\n\n          <Link to={`${encodeURIComponent(area)}`}>\n            <AreaShape area={area} />\n          </Link>\n          <div>\n            <span className={styles.mini}>\n              <ErrorBoundary>\n                <Spark\n                  intervals={intervals}\n                  useCumulative={true}\n                  showTotal={true}\n                />\n              </ErrorBoundary>\n              <Totals totals={totalsMap[area]} />\n            </span>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport classnames from \"classnames\";\n\nimport {\n  scaleLinear as d3scaleLinear,\n  scaleTime as d3scaleTime,\n} from \"d3-scale\";\nimport { max as d3max } from \"d3-array\";\nimport { select as d3select } from \"d3-selection\";\nimport { line as d3line, curveCardinal as d3curveCardinal } from \"d3-shape\";\nimport { axisLeft as d3axisLeft, axisBottom as d3axisBottom } from \"d3-axis\";\n\nimport chartStyles from \"./chart.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\nimport { intervalExtent, timeFormatterHourAM, isPhone, every6Hours } from \"../clientUtils\";\n\nexport const MultiLine = ({\n  intervals = [],\n  title,\n  showHeader = false,\n  useCumulative,\n}) => {\n  const [svgData, setSvgData] = useState([]);\n  const [nowDot, setNowDot] = useState(null);\n\n  const svgWidth = isPhone() ? 350 : 500;\n  const svgHeight = 0.3 * svgWidth,\n    margin = { top: 20, right: 20, bottom: 20, left: 20 },\n    width = svgWidth - margin.left - margin.right,\n    height = svgHeight - margin.bottom - margin.top;\n\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n\n  useEffect(() => {\n    // TODO - no need for useEffect?\n    if (!intervals.length) {\n      return;\n    }\n\n    const accessor = ({ length, cumulative }) =>\n      useCumulative ? cumulative : length;\n\n    const currentInterval = intervals[0];\n    const xExtent = intervalExtent(currentInterval);\n    const yExtent = [\n      0,\n      d3max([1.0, ...intervals.flatMap(({ bins }) => bins).map(accessor)]),\n    ];\n\n    const xScale = d3scaleTime().domain(xExtent).range([0, width]);\n    const xAxis = d3axisBottom()\n      .scale(xScale)\n      .tickValues(every6Hours(currentInterval.start))\n      .tickFormat(timeFormatterHourAM)\n      .tickSize(3);\n    d3select(xAxisRef.current).call(xAxis);\n\n    const yScale = d3scaleLinear().domain(yExtent).range([height, 0]);\n    const yAxis = d3axisLeft().scale(yScale).ticks(2);\n    d3select(yAxisRef.current).call(yAxis);\n\n    const line = d3line()\n      .curve(d3curveCardinal.tension(0.3))\n      .x((d) => xScale(d.x0))\n      .y((d) => yScale(accessor(d)));\n\n    const paths = intervals.map((d) => d.bins).map(line);\n\n    let newSvgData = paths.map((path, i) => ({ path, key: i })).reverse(); // render highlight after all others\n\n    setSvgData(newSvgData);\n\n    const bins = intervals[0].bins;\n    if (bins.length) {\n      const lastBin = bins[bins.length - 1];\n      setNowDot({\n        cx: xScale(lastBin.x0),\n        cy: yScale(accessor(lastBin)),\n        r: 3,\n      });\n    }\n  }, [height, intervals, useCumulative, width]);\n\n  if (!intervals.length) {\n    return null;\n  }\n\n  const total = intervals[0].total;\n  const lastIndex = svgData.length - 1;\n\n  return (\n    <div className={chartStyles.container}>\n      {showHeader && (\n        <div className={chartStyles.header}>\n          {title && <div className={chartStyles.title}>{title}</div>}\n          {typeof total === \"number\" && (\n            <div className={chartStyles.total}>{total}</div>\n          )}\n        </div>\n      )}\n      <svg className={chartStyles.chart} width={svgWidth} height={svgHeight}>\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <g\n            className={svgStyles.axis}\n            ref={xAxisRef}\n            transform={`translate(0,${height})`}\n          />\n          <g className={svgStyles.axis} ref={yAxisRef} />\n          <g>\n            {svgData.map(({path, key}, i) => (\n              <path\n                key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: i === lastIndex,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          {nowDot && (\n            <g className={svgStyles.now}>\n              <circle {...nowDot} />\n            </g>\n          )}\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\nimport { MultiLine } from \"./MultiLine\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\n\nexport const Header = ({ area }) => {\n  const { filteredByAreaMinWeek } = useContext(DataContext);\n\n  if (!filteredByAreaMinWeek.length) {\n    return null;\n  }\n\n  return (\n    <ErrorBoundary>\n      <MultiLine\n        intervals={filteredByAreaMinWeek[0].intervals}\n        useCumulative={!!area}\n      />\n    </ErrorBoundary>\n  );\n};\n","import React from \"react\";\nimport { timeFormatterMonthDay } from \"../clientUtils\";\nimport styles from \"./topline.module.scss\";\nimport { isPhone } from \"../clientUtils\";\nimport classnames from \"classnames\";\n\nexport const Topline = ({ total, text }) => {\n  const isDefined = typeof total === \"number\";\n  const totalContent = isDefined ? total : \"⋯\";\n  const totalElement = <div className={styles.total}>{totalContent}</div>;\n  const phone = isPhone();\n\n  return (\n    <div className={classnames(styles.topline, {[styles.phone]: phone})}>\n      {text && <div className={styles.text}>{text}</div>}\n      {totalElement}\n      <div className={styles.date}>{timeFormatterMonthDay(new Date())}</div>\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { DataContext, currentInterval } from \"./DataProvider\";\nimport {\n  intervalExtent,\n  timeFormatterHourAM,\n  every6Hours,\n  isPhone,\n} from \"../clientUtils\";\nimport { Topline } from \"./Topline\";\nimport classnames from \"classnames\";\n\nimport {\n  scaleLinear as d3scaleLinear,\n} from \"d3-scale\";\nimport { max as d3max } from \"d3-array\";\nimport { select as d3select } from \"d3-selection\";\nimport { lineRadial as d3lineRadial, curveCardinal as d3curveCardinal } from \"d3-shape\";\nimport { axisRadialInner } from \"d3-radial-axis\";\n\nimport styles from \"./rehoboam.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nexport const Rehoboam = ({ area }) => {\n  const { filteredByAreaMin, activeOrMajorForArea } = useContext(DataContext);\n  const [svgPath, setSvgPath] = useState(null);\n  const [circles, setCircles] = useState([]);\n  const [total, setTotal] = useState(undefined);\n  const axisRef = useRef(null);\n\n  const mainRadius = isPhone() ? 100 : 130;\n  const margin = 30,\n    width = 2 * mainRadius,\n    height = 2 * mainRadius,\n    svgWidth = width + 2 * margin,\n    svgHeight = height + 2 * margin;\n\n  const dotRadius = 5;\n\n  useEffect(() => {\n    if (!filteredByAreaMin.length) {\n      return;\n    }\n\n    setTotal(currentInterval(filteredByAreaMin).total); // TODO - use status\n\n    const current = currentInterval(filteredByAreaMin);\n    const bins = current.binsHiRes;\n    const extent = intervalExtent(current);\n    const maxDisturbance = 20;\n    const maxLength = d3max(bins, ({ length }) => length);\n    const [start, end] = extent;\n\n    const toRadial = (timestamp, length) => {\n      const fraction = (timestamp - start) / (end - start);\n      const radians = 2 * Math.PI * fraction;\n      const disturbance = maxLength ? maxDisturbance * (length / maxLength) : 0;\n      return [radians, mainRadius + disturbance];\n    };\n\n    const radialData = bins.map(({ x0, length }) => toRadial(x0, length));\n    const radialGen = d3lineRadial().curve(d3curveCardinal.tension(0.4));\n    const path = radialGen(radialData);\n    setSvgPath(path);\n\n    const angleScale = d3scaleLinear()\n      .domain(extent)\n      .range([0, 2 * Math.PI]);\n\n    const axis = axisRadialInner(angleScale, mainRadius)\n      .tickFormat(timeFormatterHourAM)\n      .tickSize(0)\n      .tickValues(every6Hours(current.start));\n    d3select(axisRef.current).call(axis);\n\n    if (activeOrMajorForArea.length) {\n      const toRadialDot = ({ derived: { timestamp } }) => {\n        const fraction = (timestamp - start) / (end - start);\n        const radians = 2 * Math.PI * fraction;\n        return [radians, mainRadius];\n      };\n\n      const activeOrMajorValues = currentInterval(activeOrMajorForArea).values;\n\n      const radialDots = activeOrMajorValues.map(toRadialDot);\n\n      const newCircles = radialDots.map(([theta, r], i) => {\n        const {\n          derived: { severity, active },\n        } = activeOrMajorValues[i];\n        return {\n          key: i,\n          cx: r * Math.sin(theta),\n          cy: r * -Math.cos(theta),\n          r: dotRadius,\n          sev1: severity >= 1,\n          sev2: severity >= 2,\n          active,\n        };\n      });\n\n      setCircles(newCircles);\n    }\n  }, [activeOrMajorForArea, filteredByAreaMin, mainRadius]);\n\n  const text = area || \"Seattle\";\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.counter}>\n        <Topline total={total} text={text} />\n      </div>\n      <svg className={styles.svg} width={svgWidth} height={svgHeight}>\n        <g\n          transform={`translate(${margin + mainRadius},${margin + mainRadius})`}\n        >\n          <circle className={styles.maincircle} cx={0} cy={0} r={mainRadius} />\n          <g className={styles.axis} ref={axisRef} />\n          {svgPath && <path className={classnames(styles.path)} d={svgPath} />}\n          <g className={styles.events}>\n            {circles.map(({ key, cx, cy, r, sev1, sev2, active }) => (\n              <g key={key} className={classnames({ [svgStyles.live]: active })}>\n                <circle\n                  className={classnames(svgStyles.event)}\n                  cx={cx}\n                  cy={cy}\n                  r={r}\n                />\n                {sev1 && (\n                  <circle className={classnames(styles.outer, svgStyles.outer)} cx={cx} cy={cy} r={r + 3} />\n                )}\n                {sev2 && (\n                  <circle className={classnames(styles.outer, svgStyles.outer)} cx={cx} cy={cy} r={r + 6} />\n                )}\n              </g>\n            ))}\n          </g>\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React from \"react\";\nimport styles from \"./section.module.scss\";\nimport classnames from \"classnames\";\nimport { isPhone } from \"../clientUtils\";\n\nexport const Section = ({ children, styleOption = 0, edgeToEdge = false }) => {\n  const style = styleOption ? styles[`style${styleOption}`] : styles.styleDefault;\n    \n  return (\n    <section className={classnames(styles.section, style)}>\n      <div\n        className={classnames(styles.content, {\n          [styles.phone]: isPhone(),\n        })}\n      >\n        <div\n          className={classnames(styles.subcontent, {\n            [styles.edgeToEdge]: edgeToEdge,\n          })}\n        >\n          {children}\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React from \"react\";\nimport styles from \"./paragraph.module.scss\";\nimport classnames from \"classnames\";\n\nexport const Paragraph = ({ h1, title, content, margin = false }) => {\n  return (\n    <div className={classnames(styles.paragraph, { [styles.margin]: margin })}>\n      {h1 && <h1>{h1}</h1>}\n      {title && <h3>{title}</h3>}\n      {content && <div className={styles.text}>{content}</div>}\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport classnames from \"classnames\";\nimport svgStyles from \"./svg.module.scss\";\n\nimport { DataContext, currentInterval, previousInterval } from \"./DataProvider\";\n\nexport const HistoryEvents = ({ scales, dayHeight = 4 }) => {\n  const { history } = useContext(DataContext);\n  const [circles, setCircles] = useState([]);\n\n  useEffect(() => {\n    if (!history.length || !scales.length) {\n      return;\n    }\n    const intervalCurrent = currentInterval(history);\n    const intervalPrevious = previousInterval(history);\n    const binsCurrent = intervalCurrent.binsLowRes;\n    const binsPrevious = intervalPrevious.binsLowRes;\n    const [, yScale] = scales;\n\n    const radius = dayHeight / 2 + 2;\n    const filter = ({ sev2 }) => sev2 > 0;\n    const mapper = ({ x0, sev2 }) => ({ timestamp: x0, count: sev2 });\n    const stack = ({ timestamp, count }) =>\n      [...new Array(count)].map((_, index) => ({ timestamp, index }));\n    const sev2Current = binsCurrent.filter(filter).map(mapper).flatMap(stack);\n    const sev2Previous = binsPrevious.filter(filter).map(mapper).flatMap(stack);\n\n    const toCirclesGen = (side) => ({ timestamp, index }) => ({\n      key: `${timestamp}-${index}-${side}`,\n      cx: side * (index + 0.75) * 2 * radius,\n      cy: yScale(timestamp),\n      r: radius,\n      isCurrent: side === 1,\n    });\n    const toCirclesCurrent = toCirclesGen(1);\n    const toCirclesPrevious = toCirclesGen(-1);\n\n    const circlesCurrent = sev2Current.map(toCirclesCurrent);\n    const circlesPrevious = sev2Previous.map(toCirclesPrevious);\n\n    const newCircles = [...circlesPrevious, ...circlesCurrent];\n    setCircles(newCircles);\n  }, [dayHeight, history, scales]);\n\n  return (\n    <g>\n      {circles.map(({ key, cx, cy, r, isCurrent }) => (\n        <g\n          key={key}\n          className={classnames({\n            [svgStyles.current]: isCurrent,\n            [svgStyles.previous]: !isCurrent,\n          })}\n        >\n          <circle cx={cx} cy={cy} r={r} />\n        </g>\n      ))}\n    </g>\n  );\n};\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport {\n  DataContext,\n  currentInterval as getCurrentInterval,\n  previousInterval as getPreviousInterval,\n} from \"./DataProvider\";\nimport {\n  intervalExtent as getIntervalExtent,\n  isPhone,\n  timeFormatterMonth,\n  everyMonth,\n} from \"../clientUtils\";\nimport { Annotations } from \"./Annotations\";\nimport { HistoryEvents } from \"./HistoryEvents\";\nimport classnames from \"classnames\";\n\nimport {\n  scaleLinear as d3scaleLinear,\n  scaleTime as d3scaleTime,\n} from \"d3-scale\";\nimport { max as d3max } from \"d3-array\";\nimport { select as d3select } from \"d3-selection\";\nimport { line as d3line, curveCardinal as d3curveCardinal } from \"d3-shape\";\nimport { axisLeft as d3axisLeft, axisBottom as d3axisBottom } from \"d3-axis\";\n\nimport historyStyles from \"./history.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nconst closedPath = (bins, line, offset) => {\n  if (!bins.length) {\n    return \"\";\n  }\n\n  let data = bins.map(({ x0, length }) => ({\n    timestamp: x0,\n    value: length + offset,\n  }));\n\n  const first = data[0],\n    last = data[data.length - 1];\n  const extraBottom = { timestamp: last.timestamp, value: 10000 };\n  const extraTop = { timestamp: first.timestamp, value: 10000 };\n\n  data = [...data, extraBottom, extraTop, first];\n  return line(data);\n};\n\nexport const History = () => {\n  const { history } = useContext(DataContext);\n  // const [svgData, setSvgData] = useState([]);\n  const [scales, setScales] = useState([]);\n  const [currentStart, setCurrentStart] = useState([]);\n  const [paths, setPaths] = useState([]);\n  const [clipPaths, setClipPaths] = useState({});\n\n  const dayHeight = 3;\n  const width = isPhone() ? 360 : 500, // TODO - use screen width\n    margin = { top: 20, right: 0, bottom: 20, left: 0 },\n    height = 365 * dayHeight,\n    svgHeight = height + margin.top + margin.bottom,\n    svgWidth = width + margin.left + margin.right;\n  const yearWidth = width / 2;\n  const maxBarWidth = yearWidth * 0.4;\n  const annotationRectWidth = yearWidth * 0.45;\n\n  const svgRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n\n  useEffect(() => {\n    if (!history.length) {\n      return;\n    }\n\n    const intervalCurrent = getCurrentInterval(history);\n    setCurrentStart(intervalCurrent.start);\n    const intervalPrevious = getPreviousInterval(history);\n    const binsCurrent = intervalCurrent.binsLowRes;\n    const binsPrevious = intervalPrevious.binsLowRes;\n    const timeExtent = getIntervalExtent(intervalCurrent);\n\n    const xScale = d3scaleLinear()\n      .domain([0, d3max(binsCurrent, (b) => b.length)])\n      .range([0, maxBarWidth]);\n\n    const yScale = d3scaleTime().domain(timeExtent).range([0, height]);\n\n    setScales([xScale, yScale]);\n\n    const yAxis = d3axisLeft()\n      .scale(yScale)\n      .tickValues(everyMonth(intervalCurrent.start))\n      .tickFormat(timeFormatterMonth)\n      .tickSize(0);\n    d3select(yAxisRef.current).call(yAxis);\n\n    const xAxis = d3axisBottom().scale(xScale).ticks(2);\n    d3select(xAxisRef.current).call(xAxis);\n\n    // const currentYear = binsCurrent.map(({ x0, length }) => ({\n    //   x: xScale(0),\n    //   width: xScale(length),\n    //   y: yScale(x0),\n    //   height: binHeight,\n    //   rx: 1,\n    // }));\n    // const previousYear = binsPrevious.map(({ x0, length }) => ({\n    //   x: xScale(0) - xScale(length),\n    //   width: xScale(length),\n    //   y: yScale(x0),\n    //   height: binHeight,\n    //   rx: 1,\n    // }));\n    // setSvgData([currentYear, previousYear]);\n\n    const lineCurrent = d3line()\n      .curve(d3curveCardinal.tension(0.3))\n      .x((d) => xScale(d.length))\n      .y((d) => yScale(d.x0));\n    const linePrevious = d3line()\n      .curve(d3curveCardinal.tension(0.3))\n      .x((d) => xScale(-d.length))\n      .y((d) => yScale(d.x0));\n\n    const pathCurrent = lineCurrent(binsCurrent);\n    const pathPrevious = linePrevious(binsPrevious);\n    setPaths([\n      { path: pathCurrent, key: \"current\" },\n      { path: pathPrevious, key: \"previous\" },\n    ]);\n\n    const clipLineCurrent = d3line()\n      .x((d) => xScale(d.value))\n      .y((d) => yScale(d.timestamp));\n\n    const clipLinePrevious = d3line()\n      .x((d) => xScale(-d.value))\n      .y((d) => yScale(d.timestamp));\n\n    const pixelOffset = xScale.invert(2) - xScale.invert(0);\n    const clipPathCurrent = closedPath(\n      binsCurrent,\n      clipLineCurrent,\n      pixelOffset\n    );\n    const clipPathPrevious = closedPath(\n      binsPrevious,\n      clipLinePrevious,\n      pixelOffset\n    );\n\n    setClipPaths({ current: clipPathCurrent, previous: clipPathPrevious });\n  }, [history, height, maxBarWidth]);\n\n  // console.log(\"HISTORY/render\");\n\n  return (\n    <div className={historyStyles.container}>\n      <div className={historyStyles.years}>\n        <div className={historyStyles.left}>2019</div>\n        <div className={historyStyles.right}>2020</div>\n      </div>\n      <svg\n        className={historyStyles.svg}\n        ref={svgRef}\n        width={svgWidth}\n        height={svgHeight}\n      >\n        <g transform={`translate(${margin.left + yearWidth},${margin.top})`}>\n          {/* <g>\n            {svgData.map((dataset, iDataset) =>\n              dataset.map((d) => (\n                <rect\n                  className={classnames({\n                    [historyStyles.previous]: iDataset,\n                    [historyStyles.current]: !iDataset,\n                  })}\n                  x={d.x}\n                  y={d.y}\n                  width={d.width}\n                  height={d.height}\n                  rx={d.rx}\n                ></rect>\n              ))\n            )}\n          </g> */}\n          <g>\n            {paths.map(({ path, key }, i) => (\n              <path\n                key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: !i,\n                  [svgStyles.previous]: i,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          <g>\n            <HistoryEvents scales={scales} dayHeight={dayHeight} />\n          </g>\n          <g>\n            <Annotations\n              currentStart={currentStart}\n              rectWidth={annotationRectWidth}\n              scales={scales}\n              clipPaths={clipPaths}\n            />\n          </g>\n          {/* <g\n            className={classnames(svgStyles.axis, historyStyles.axis)}\n            ref={xAxisRef}\n            transform={`translate(0,${height})`}\n          /> */}\n          <g\n            className={classnames(svgStyles.axis, historyStyles.axis)}\n            ref={yAxisRef}\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n","// see groupby.js\nexport const GroupByOptions = {\n  // TODO - import from server\n  Nothing: undefined,\n  IncidentType: \"type\",\n  ZipCode: \"zip\",\n  Area: \"area\",\n  TimeInterval: \"time\",\n};\n\nexport const AreaAccessors = {\n  ZipCode: ({ derived: { zip } }) => zip,\n  Area: ({ derived: { neighborhoodGroup } }) => neighborhoodGroup,\n  AreaSecondary: ({ derived: { neighborhood } }) => neighborhood,\n};\nAreaAccessors.Default = AreaAccessors.Area;\n","import React from \"react\";\nimport styles from \"./tweetdetails.module.scss\";\nimport { isPhone } from \"../clientUtils\";\nimport { AreaAccessors } from \"../groupingOptions\";\n\nexport const TweetDetails = ({tweet}) => {\n  const { address, units, lat, long } = tweet.derived;\n  const { id_str } = tweet;\n  // const url = `https://data.seattle.gov/resource/fire-911.json?incident_number=${id_str}`;\n  const unitsList = units.split(\" \");\n  const unitsStr = `${unitsList.length} ${\n    unitsList.length === 1 ? \"unit\" : \"units\"\n  } dispatched:`;\n  const area = AreaAccessors.AreaSecondary(tweet);\n  const phone = isPhone();\n\n  const format = (n) => Number.parseFloat(n).toFixed(3);\n  const coordinates = lat ? `${format(lat)}°N ${format(-long)}°W` : \"\";\n  // const incidentLink = <a className={styles.link} href={url}>{id_str}</a>;\n  return (\n    <div className={styles.container}>\n      <div>{address}</div>\n      {phone && <div className={styles.secondary}>{area}</div>}\n      <div className={styles.secondary}>{coordinates}</div>\n      <div>\n        <span>{unitsStr}</span>\n        {unitsList.map((unit) => (\n          <span key={unit} className={styles.unit}>{unit}</span>\n          ))}\n      </div>\n      <div className={styles.secondary}>Incident ID {id_str}</div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport styles from \"./tweet.module.scss\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\nimport { AreaAccessors } from \"../groupingOptions\";\nimport { TweetDetails } from \"./TweetDetails\";\nimport {\n  timeFormatter,\n  isActive,\n  isAtLeastSev1,\n  isAtLeastSev2,\n  isPhone,\n} from \"../clientUtils\";\nimport { SvgDot } from \"./SvgDot\";\nimport classnames from \"classnames\";\n\nexport const TweetModes = {\n  Default: 0,\n  Detailed: 1,\n  GreyedOut: 2,\n};\n\nexport const Tweet = ({ tweet, mode = TweetModes.Default }) => {\n  const { user, setSelection } = useContext(UserContext);\n  const selectedTweet = user[UserContextKeys.SelectedTweet];\n\n  const handleClick = () => {\n    const newSelectedTweet =\n      selectedTweet && selectedTweet.id_str === tweet.id_str ? null : tweet;\n    setSelection(UserContextKeys.SelectedTweet, newSelectedTweet);\n  };\n  const active = isActive(tweet);\n  const sev1 = isAtLeastSev1(tweet);\n  const sev2 = isAtLeastSev2(tweet);\n\n  const area = AreaAccessors.AreaSecondary(tweet);\n\n  const isGreyedOut = mode === TweetModes.GreyedOut;\n  const isDetailed = mode === TweetModes.Detailed;\n  const time = timeFormatter(tweet.derived.timestamp);\n  const phone = isPhone();\n\n  return (\n    <div\n      className={classnames(styles.container, {\n        [styles.detailed]: isDetailed,\n        [styles.greyedOut]: isGreyedOut,\n        [styles.phone]: phone,\n      })}\n      onClick={handleClick}\n    >\n      <div className={styles.tweet}>\n        <div className={styles.details}>\n          <span className={styles.location}>\n            {!phone && area && <span>{area} @ </span>}\n            {time}\n          </span>\n        </div>\n        <div className={classnames({ [styles.active]: active })}>\n          <SvgDot active={active} sev1={sev1} sev2={sev2} />\n          <span> {tweet.derived.description}</span>\n        </div>\n      </div>\n      {isDetailed && <TweetDetails tweet={tweet} />}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport styles from \"./tweets.module.scss\";\nimport { Tweet, TweetModes } from \"./Tweet\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\n\nexport const TweetList = ({ tweets = [], placeholder }) => {\n  const { user } = useContext(UserContext);\n  const selected = user[UserContextKeys.SelectedTweet];\n\n  const mode = ({ id_str }) =>\n    selected\n      ? id_str === selected.id_str\n        ? TweetModes.Detailed\n        : TweetModes.GreyedOut\n      : TweetModes.Default; // TODO - remove modes\n  \n      return (\n    <div className={styles.tweets}>\n      {tweets.map((t) => (\n        <Tweet key={t.id_str} tweet={t} mode={mode(t)} />\n      ))}\n      {!tweets.length && <div className={styles.placeholder}>{placeholder}</div>}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\n\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsActive = () => {\n  const { active24 } = useContext(DataContext);\n\n  return <TweetList tweets={active24} placeholder={\"No active incidents\"} />;\n}\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\n\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsMajor = () => {\n  const { major24 } = useContext(DataContext);\n\n  return <TweetList tweets={major24} placeholder={\"No major incidents\"} />;\n}\n","import React from \"react\";\nimport { Paragraph } from \"./Paragraph\";\n\n\nexport const Sources = () => {\n  const title = <span id=\"sources\">Data Sources</span>;\n\n  const sources = (\n    <p>\n      The primary data source is{\" \"}\n      <a href=\"http://www2.seattle.gov/fire/realTime911/\">\n        Real-Time 911 Dispatch\n      </a>\n      . Geolocation data for each incident is retrieved from{\" \"}\n      <a href=\"https://data.seattle.gov/Public-Safety/Seattle-Real-Time-Fire-911-Calls/kzjm-xkqj\">\n        data.seattle.gov\n      </a>{\" \"}\n      (refreshed every 5 minutes, with occasional delays). City and neighborhood\n      boundary data is from{\" \"}\n      <a href=\"https://github.com/seattleflu/seattle-geojson/tree/master/seattle_geojsons\">\n        seattleflu/seattle-geojson\n      </a>\n      . Map powered by <a href=\"http://leafletjs.com\">Leaflet</a> via{\" \"}\n      <a href=\"https://react-leaflet.js.org\">react-leaflet</a>. Map tiles\n      provided by{\" \"}\n      <a href=\"https://www.jawg.io/docs/apidocs/static-maps/\">Jawg Maps</a>.\n      Visualizations powered by <a href=\"https://d3js.org\">D3</a>.\n    </p>\n  );\n\n  return <Paragraph title={title} content={sources} />;\n};\n","import React, { useContext } from \"react\";\nimport { StatusContext } from \"./StatusContext\";\nimport { timeFormatter, timeFormatterUserTimezone } from \"../clientUtils\";\nimport styles from \"./freshness.module.scss\";\n\nexport const Freshness = () => {\n  const { status = {} } = useContext(StatusContext);\n\n  if (!status.lastUpdated) {\n    return <span>&nbsp;</span>;\n  }\n\n  const date = new Date(status.lastUpdated);\n  const formatTimezone = \"h:mma z\";\n  const formatNoTimezone = \"h:mma\";\n  const seattle = timeFormatter(date, formatNoTimezone);\n  const seattleTZ = timeFormatter(date, formatTimezone);\n  const user = timeFormatterUserTimezone(date, formatNoTimezone);\n  const userTZ = timeFormatterUserTimezone(date, formatTimezone);\n\n  const same = seattle === user;\n  const displayUser = same ? \"\" : ` (${userTZ})`;\n  const displaySeattle = same ? seattle : seattleTZ;\n\n  return (\n    <span>\n      Data is current as of{\" \"}\n      <span className={styles.time}>{displaySeattle}</span>\n      {displayUser}.\n    </span>\n  );\n};\n","import React from \"react\";\nimport styles from \"./legend.module.scss\";\nimport { SvgDot } from \"./SvgDot\";\n\nexport const Legend = () => (\n  <div className={styles.legend}>\n    <div>\n      <span>Active incident </span>\n      <SvgDot active={true} radius={5} />\n    </div>\n    <div>\n      <span>10 or more units dispatched </span>\n      <SvgDot sev2={true} />\n    </div>\n    <div>\n      <span>5 or more units dispatched </span>\n      <SvgDot sev1={true} />\n    </div>\n    <div>\n      <span>Fewer than 5 units dispatched </span>\n      <SvgDot />\n    </div>\n  </div>\n);\n","import React, { useContext } from \"react\";\nimport { Paragraph } from \"./Paragraph\";\nimport { ThemeContext } from \"./ThemeContext\";\nimport classnames from \"classnames\";\nimport styles from \"./themeswitch.module.scss\";\n\nexport const ThemeSwitch = () => {\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  const themes = [\"Light\", \"Dusk\", \"Dark\"];\n\n  const handleClick = (newTheme) => {\n    setTheme(newTheme.toLowerCase());\n  };\n\n  const content = (\n    <p>\n      {/* The color theme changes based on time of day in Seattle. */}\n      {themes.map((t, i) => (\n        <span key={t}>\n          {\" \"}\n          <button\n            className={classnames(styles.button, {\n              [styles.selected]: t.toLowerCase() === theme,\n            })}\n            onClick={() => handleClick(t)}\n          >\n            {t}\n          </button>\n          { (i < (themes.length - 1)) && <span> / </span>}\n        </span>\n      ))}.\n    </p>\n  );\n\n  return <Paragraph content={content} />;\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { select as d3select } from \"d3-selection\";\nimport {\n  annotation as d3annotation,\n  annotationCalloutCircle as d3annotationCalloutCircle,\n} from \"d3-svg-annotation\";\nimport { getStyleProp } from \"../clientUtils\";\nimport \"./annotations.scss\";\n\nexport const PunchCardAnnotations = ({ annotations, scales, cellSize, availableWidth }) => {\n  const calloutsRef = useRef(null);\n\n  useEffect(() => {\n    if (!annotations) {\n      return;\n    }\n    const [_, yScale] = scales;\n\n    const annotationColor = getStyleProp(\"--annotation\");\n\n    const offsetX = -20;\n    const calloutFn = ({day, hour2, title, label}) => {\n\n      const x = day * cellSize;\n      const y = yScale(hour2);\n      const callout = {\n        note: {\n          title,\n          label,\n          wrap: availableWidth + offsetX,\n          align: \"right\"\n        },\n        x,\n        y,\n        subject: {\n          radius: cellSize/2,\n        },\n        color: annotationColor,\n      };\n      callout.nx = offsetX;\n      callout.ny = yScale(hour2) + cellSize/2;\n\n      return callout;\n    };\n\n\n    const calloutsSvgData = annotations.map(calloutFn);\n\n    const callout = d3annotation()\n      .annotations(calloutsSvgData)\n      .type(d3annotationCalloutCircle);\n\n    d3select(calloutsRef.current).call(callout);\n\n  }, [annotations, availableWidth, cellSize, scales]);\n\n  return (\n    <g ref={calloutsRef} />\n  );\n};\n","import React, { useEffect, useState, useRef, useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\nimport { isPhone, getStyleProp } from \"../clientUtils\";\n\nimport {\n  scaleLinear as d3scaleLinear,\n  scaleOrdinal as d3scaleOrdinal,\n} from \"d3-scale\";\nimport * as d3a from \"d3-array\";\nimport { select as d3select } from \"d3-selection\";\nimport { axisRight as d3axisRight, axisTop as d3axisTop } from \"d3-axis\";\n\nimport textures from \"textures\";\nimport styles from \"./punchcard.module.scss\";\nimport { PunchCardAnnotations } from \"./PunchCardAnnotations\";\nimport { ThemeContext } from './ThemeContext';\n\nconst PunchCardElements = ({ elements }) => {\n  if (!elements) {\n    return null;\n  }\n  return (\n    <>\n      {elements.map(({ key, cx, cy, r, fill, stroke }) => (\n        <circle\n          key={key}\n          className={styles.element}\n          cx={cx}\n          cy={cy}\n          r={r}\n          fill={fill}\n          stroke={stroke}\n        />\n      ))}\n    </>\n  );\n};\n\nexport const PunchCard = () => {\n  const { punchCard } = useContext(DataContext);\n  const { theme } = useContext(ThemeContext);\n  const { week, dayAggregates, hourAggregates, annotations } = punchCard;\n  const texturesRef = useRef();\n\n  const [weekSpecs, setWeekSpecs] = useState([]);\n  const [dayAggregateSpecs, setDayAggregateSpecs] = useState([]);\n  const [hourAggregateSpecs, setHourAggregateSpecs] = useState([]);\n  const [scales, setScales] = useState([]);\n\n  const phone = isPhone() ? 375 : 450;\n  const svgWidth = phone;\n  const cellSize = svgWidth / 12;\n  const width = cellSize * 7;\n  const horizontal = svgWidth - width;\n  const horizontalRight = cellSize * 3;\n  const margin = {\n    top: 40,\n    bottom: 120,\n    right: horizontalRight,\n    left: horizontal - horizontalRight,\n  };\n  const gap = 4;\n  const elementSize = cellSize - 2 * gap;\n  const height = cellSize * 12;\n  const svgHeight = height + margin.top + margin.bottom;\n\n  const yAxisRef = useRef(null);\n  const xAxisRef = useRef(null);\n\n  useEffect(() => {\n    // TODO - no need for useEffect?\n    if (!week) {\n      return;\n    }\n\n    const [min, max] = d3a.extent(week.flat(2).map(({ avg }) => avg));\n\n    // TODO: d3-scale can accomplish most of this stuff\n    // if you refactor the data a bit.\n    const xDomain = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n    const xRange = xDomain.map((_, i) => i * cellSize);\n    const xScale = d3scaleOrdinal(xDomain, xRange);\n    const xAxis = d3axisTop().scale(xScale).ticks(12).tickSize(0);\n    d3select(xAxisRef.current).call(xAxis);\n\n    const yExtent = [0, 12];\n    const yScale = d3scaleLinear().domain(yExtent).range([0, height]);\n    const formatter = (d, i) => {\n      const hour = 2 * d;\n      if (hour === 0 || hour === 24) {\n        return \"12am\";\n      }\n      if (hour === 12) {\n        return \"noon\";\n      }\n      return `${hour % 12}${hour < 12 ? \"am\" : \"pm\"}`;\n    };\n    const yAxis = d3axisRight()\n      .scale(yScale)\n      .tickValues([0, 3, 6, 9, 12])\n      .tickFormat(formatter)\n      .tickSize(phone ? 0 : 3);\n    d3select(yAxisRef.current).call(yAxis);\n\n    setScales([xScale, yScale]);\n\n    const data = week\n      .map((day, iDay) =>\n        day.map(({ avg }, iHour) => ({\n          hour: iHour,\n          day: iDay,\n          value: avg,\n        }))\n      )\n      .flat(2);\n\n    const color1 = getStyleProp(\"--graph-primary1\");\n    const color2 = getStyleProp(\"--graph-primary2\");\n    const color3 = getStyleProp(\"--graph-primary3\");\n    const color4 = getStyleProp(\"--graph-primary4\");\n\n    const texture1 = textures.lines().size(7).strokeWidth(3).stroke(color1);\n    const texture2 = textures.lines().size(6).strokeWidth(2).stroke(color2);\n    const texture3 = textures.lines().size(5).strokeWidth(1).stroke(color3);\n    const texture4 = textures.lines().size(5).strokeWidth(1).stroke(color4);\n\n    d3select(texturesRef.current)\n      .call(texture1)\n      .call(texture2)\n      .call(texture3)\n      .call(texture4);\n\n    const appearance = [\n      { color: color1, texture: texture1 },\n      { color: color2, texture: texture2 },\n      { color: color3, texture: texture3 },\n      { color: color4, texture: texture4 },\n    ];\n    const appearanceFn = (value) => {\n      const offsetValue = value - min;\n      const offsetMax = max - min;\n\n      const index =\n        offsetValue >= 0.75 * offsetMax\n          ? 0\n          : offsetValue >= 0.5 * offsetMax\n          ? 1\n          : offsetValue >= 0.25 * offsetMax\n          ? 2\n          : 3;\n      return appearance[index];\n    };\n\n    const maxRadius = elementSize / 2;\n\n    const newWeekSpecs = data.map(({ hour, day, value }) => {\n      const appearance = appearanceFn(value);\n      return {\n        key: `${day}-${hour}`,\n        cx: day * cellSize,\n        cy: yScale(hour),\n        r: maxRadius * Math.sqrt(value / max),\n        fill: appearance.texture.url(),\n        stroke: appearance.color,\n      };\n    });\n\n    setWeekSpecs(newWeekSpecs);\n\n    const toAggregateElementSpec = (value, i) => {\n      const appearance = appearanceFn(value);\n      return {\n        cx: 0,\n        cy: 0,\n        r: maxRadius * Math.sqrt(value / max),\n        fill: appearance.texture.url(),\n        stroke: appearance.color,\n      };\n    };\n\n    const newDayAggregateSpecs = dayAggregates\n      .map(toAggregateElementSpec)\n      .map((spec, i) => ({\n        ...spec,\n        cx: i * cellSize,\n        key: `day-${i}`,\n      }));\n\n    const newHourAggregateSpecs = hourAggregates\n      .map(toAggregateElementSpec)\n      .map((spec, i) => ({\n        ...spec,\n        cy: i * cellSize,\n        key: `hour-${i}`,\n      }));\n\n    setDayAggregateSpecs(newDayAggregateSpecs);\n    setHourAggregateSpecs(newHourAggregateSpecs);\n  }, [\n    theme,\n    week,\n    height,\n    width,\n    elementSize,\n    cellSize,\n    dayAggregates,\n    hourAggregates,\n    phone,\n  ]);\n\n  if (!weekSpecs.length) {\n    return null;\n  }\n\n  return (\n    <svg className={styles.svg} width={svgWidth} height={svgHeight}>\n      <g transform={`translate(${margin.left},${margin.top})`}>\n        <g\n          ref={xAxisRef}\n          className={styles.axis}\n          transform={`translate(${0.5 * cellSize},${12.9 * cellSize})`}\n        />\n        <g\n          ref={yAxisRef}\n          className={styles.axis}\n          transform={`translate(${(phone ? 7 : 6.5) * cellSize},0)`}\n        />\n        <g\n          ref={texturesRef}\n          transform={`translate(${cellSize / 2},${cellSize / 2})`}\n        >\n          <g transform={`translate(${0},0)`}>\n            <PunchCardElements elements={weekSpecs} />\n          </g>\n          <g transform={`translate(${(phone ? 8.5 : 8) * cellSize},0)`}>\n            <PunchCardElements elements={hourAggregateSpecs} />\n          </g>\n          <g transform={`translate(0,${13.25 * cellSize})`}>\n            <PunchCardElements elements={dayAggregateSpecs} />\n          </g>\n          <g transform={`translate(${0},${0})`}>\n            <PunchCardAnnotations\n              annotations={annotations}\n              cellSize={cellSize}\n              scales={scales}\n              availableWidth={margin.left}\n            />\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n};\n","import React from \"react\";\nimport { Map } from \"./Map\";\nimport { DataProvider } from \"./DataProvider\";\nimport { GroupByArea } from \"./GroupByArea\";\nimport { Header } from \"./Header\";\nimport { Rehoboam } from \"./Rehoboam\";\nimport { Section } from \"./Section\";\nimport { Paragraph } from \"./Paragraph\";\nimport { History } from \"./History\";\nimport { TweetsActive } from \"./TweetsActive\";\nimport { TweetsMajor } from \"./TweetsMajor\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { Sources } from \"./Sources\";\nimport { Freshness } from \"./Freshness\";\nimport { Legend } from \"./Legend\";\nimport { ThemeSwitch } from \"./ThemeSwitch\";\nimport { PunchCard } from \"./PunchCard\";\n\nexport const DispatchAll = () => {\n  const intro = (\n    <p>\n      A visualization of Seattle Fire Department 911 dispatch data. All timestamps are in\n        Seattle local time. The page updates automatically every minute. <a href=\"#sources\">Data sources</a> are listed below. Legend as follows:\n    </p>\n  );\n\n  const live = (\n    <p>\n      <span>\n        A near-real-time view of today's incidents. \n      </span>{\" \"}\n      <Freshness />\n    </p>\n  );\n\n  const outline = \"The outline represents the Seattle city boundary.\";\n\n  const week = `An aggregate view of year-to-date dispatches by day of week and by time of day.`;\n\n  const active = (\n    <p>\n      Select an incident to view dispatch details. If geolocation data is\n      available (typically within 5 minutes) the map above will zoom in to the spot.\n    </p>\n  );\n\n  const major = (\n    <p>\n      Today's incidents with 5 or more units dispatched.\n    </p>\n  );\n\n  const areas = \"Select an area to zoom in on today's incidents there.\";\n\n  const history = (\n    <p>\n      A side-by-side comparison of this year's dispatch volume against last year's. Lines\n      trace daily totals for all of Seattle. Circles represent major\n      incidents (10 or more units dispatched).\n    </p>\n  );\n\n  const notes = (\n    <p>\n      Created by <a href=\"https://linkedin.com/in/anarseyf/\">Anar Seyf</a>.\n    </p>\n  );\n\n  return (\n    <DataProvider>\n      <Section styleOption={1}>\n        <Paragraph h1=\"Seattle Fire 911 Dispatch\" content={intro} />\n        <Paragraph content={<Legend />} />\n      </Section>\n\n      <Section styleOption={2}>\n        <Paragraph title=\"Today\" />\n        <Rehoboam />\n        <Paragraph content={live} />\n      </Section>\n\n      <Section styleOption={2} edgeToEdge={true}>\n        <ErrorBoundary>\n          <Map />\n        </ErrorBoundary>\n        <Paragraph content={outline} margin={true} />\n      </Section>\n\n      <Section styleOption={2}> \n        <Paragraph title=\"Active Incidents\" content={active} />\n        <TweetsActive />\n        <Paragraph title=\"Major Incidents\" content={major} />\n        <TweetsMajor />\n      </Section>\n\n      <Section styleOption={3}>\n        <Paragraph title=\"City Areas\" content={areas} />\n        <GroupByArea />\n      </Section>\n\n      <Section styleOption={4} edgeToEdge={true} >\n        <Paragraph title=\"Weekly Highs and Lows\" content={week} margin={true} />\n        <PunchCard />\n        <Paragraph\n          title=\"This Year\"\n          content={history}\n          margin={true}\n        />\n        <History />\n      </Section>\n\n      <Section styleOption={5}>\n        <Sources />\n        <Paragraph title=\"Themes\" content={<ThemeSwitch />} />\n        <Paragraph title=\"About\" content={notes} />\n      </Section>\n    </DataProvider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext, currentInterval } from \"./DataProvider\";\n\nimport { UserContextKeys, UserContext } from \"./UserProvider\";\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsForArea = () => {\n  const { filteredByArea } = useContext(DataContext);\n  const { user } = useContext(UserContext);\n  const filter = user[UserContextKeys.TypeFilter];\n\n  if (!filteredByArea.length) {\n    return null;\n  }\n  const all = currentInterval(filteredByArea).values;\n  const filtered = all.filter(\n    ({ derived: { type } }) => !filter || filter === type\n  );\n\n  return <TweetList tweets={filtered} />;\n}\n","import React from \"react\";\nimport { Paragraph } from \"./Paragraph\";\nimport { Header } from \"./Header\";\nimport { useNeighborhoods } from \"./neighborhoods\";\n\nexport const AreaPageHeader = ({ area }) => {\n  const neighborhoodsMap = useNeighborhoods();\n  const decodedArea = decodeURIComponent(area);\n  const subareas = (\n    <div>\n      {(neighborhoodsMap[decodedArea] || []).map((subarea) => (\n        <div key={subarea}>{subarea}</div>\n      ))}\n    </div>\n  );\n\n  // const [list, setList] = useState([]);\n  // useEffect(() => {\n  //   if (neighborhoodsMap[area]) {\n  //     setList(neighborhoodsMap[area]);\n  //   }\n  // }, [area, neighborhoodsMap]);\n\n  return (\n    <>\n      <Paragraph title={decodedArea} content={subareas} />\n      <Header area={area} />\n    </>\n  );\n};\n","import { useState, useEffect, useContext } from 'react';\nimport { DataContext } from './DataProvider';\nimport { featuresForArea } from \"./geojson\";\n\nexport const useNeighborhoods = () => {\n  const [map, setMap] = useState({});\n\n  const { groupedByArea } = useContext(DataContext);\n\n  useEffect(() => {\n    const newMap = {};\n    groupedByArea\n      .map(({ key }) => key)\n      .forEach((key) => {\n        newMap[key] = featuresForArea(key)\n          .map(({ properties: { CRA_NAM } }) => CRA_NAM)\n          .sort();\n      });\n\n      setMap(newMap);\n  }, [groupedByArea]);\n\n  return map;\n}","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport { Map } from \"./Map\";\nimport { DataProvider } from \"./DataProvider\";\nimport { TweetsForArea } from \"./TweetsForArea\";\nimport { Paragraph } from \"./Paragraph\";\nimport { Section } from \"./Section\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { Sources } from \"./Sources\";\nimport { AreaPageHeader } from \"./AreaPageHeader\";\nimport paragraphStyles from \"./paragraph.module.scss\";\n\nexport const DispatchArea = ({ area }) => {\n\n  return (\n    <DataProvider filters={{ area }}>\n      <Section styleOption={2}>\n        <Paragraph\n          content={\n            <Link className={paragraphStyles.link} to=\"/\">\n              « main page\n            </Link>\n          }\n        />\n      </Section>\n\n      <Section styleOption={1}>\n        <AreaPageHeader area={area} />\n      </Section>\n\n      <Section styleOption={2} edgeToEdge={true}>\n        <ErrorBoundary>\n          <Map area={area} />\n        </ErrorBoundary>\n      </Section>\n\n      <Section styleOption={1}>\n        <Paragraph title=\"Today's Incidents\" />\n        <TweetsForArea />\n      </Section>\n\n      <Section styleOption={2}>\n        <Sources />\n      </Section>\n    </DataProvider>\n  );\n};\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\nimport { DispatchAll } from \"./dispatch/DispatchAll\";\nimport { DispatchArea } from \"./dispatch/DispatchArea\";\nimport { StatusProvider } from \"./dispatch/StatusContext\";\nimport { UserProvider } from \"./dispatch/UserProvider\";\nimport \"./colors.scss\";\n// import styles from \"./app.module.scss\";\nimport { ThemeProvider } from \"./dispatch/ThemeContext\";\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <ThemeProvider>\n        <StatusProvider>\n          <Router>\n            <UserProvider path=\"/\">\n              <DispatchAll default />\n            </UserProvider>\n            <UserProvider path=\":area\">\n              <DispatchArea path=\"/\" />\n            </UserProvider>\n          </Router>\n        </StatusProvider>\n      </ThemeProvider>\n    </React.StrictMode>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport const register = (config) => {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport const unregister = () => {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./custom.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}