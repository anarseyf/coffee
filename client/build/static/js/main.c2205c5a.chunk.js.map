{"version":3,"sources":["dispatch/group.module.scss","dispatch/ThemeContext.jsx","clientUtils.js","dispatch/MapDot.jsx","api.jsx","dispatch/StatusContext.jsx","dispatch/Annotations.jsx","dispatch/DataProvider.jsx","dispatch/UserProvider.jsx","dispatch/mapOptions.js","dispatch/geojson.js","dispatch/Map.jsx","dispatch/ErrorBoundary.jsx","dispatch/AreaShape.jsx","dispatch/SvgDot.jsx","dispatch/Spark.jsx","dispatch/neighborhoods.js","dispatch/GroupByArea.jsx","dispatch/MultiLine.jsx","dispatch/Header.jsx","dispatch/Topline.jsx","dispatch/Rehoboam.jsx","dispatch/Section.jsx","dispatch/Paragraph.jsx","dispatch/HistoryEvents.jsx","dispatch/History.jsx","groupingOptions.js","dispatch/TweetDetails.jsx","dispatch/Tweet.jsx","dispatch/TweetList.jsx","dispatch/TweetsActive.jsx","dispatch/TweetsMajor.jsx","dispatch/Sources.jsx","dispatch/Freshness.jsx","dispatch/Legend.jsx","dispatch/ThemeSwitch.jsx","dispatch/DispatchAll.jsx","dispatch/TweetsForArea.jsx","dispatch/AreaPageHeader.jsx","dispatch/DispatchArea.jsx","App.jsx","serviceWorker.js","index.tsx","dispatch/rehoboam.module.scss","dispatch/tweet.module.scss","dispatch/section.module.scss","dispatch/history.module.scss","dispatch/paragraph.module.scss","dispatch/chart.module.scss","dispatch/topline.module.scss","dispatch/tweetdetails.module.scss","dispatch/map.module.scss","dispatch/areashape.module.scss","dispatch/spark.module.scss","dispatch/svg.module.scss","dispatch/themeswitch.module.scss","dispatch/annotations.module.scss","dispatch/tweets.module.scss","dispatch/freshness.module.scss","dispatch/legend.module.scss"],"names":["module","exports","ThemeContext","createContext","ThemeProvider","children","value","useState","theme","setTheme","useEffect","useTheme","Provider","id","className","intervalExtent","start","end","expandMinutes","expand","extent","d3timeMinute","offset","queryText","isPhone","window","matchMedia","matches","timeFormatter","timestamp","format","timezone","timeFormatterUserTimezone","date","guess","timeFormatterHourAM","timeFormatterMonth","every6Hours","map","h","months","Array","_","i","isActive","derived","active","isExactlySev1","severity","isExactlySev2","getStyleProp","prop","appElement","document","getElementById","getComputedStyle","getPropertyValue","Appearance","MapDot","coordinates","appearance","useContext","color","setColor","regularColor","activeColor","opacity","baseRadius","Circle","center","radius","fill","fillOpacity","stroke","weight","getStatus","a","getByAPI","getAnnotations","getHistory","getTweetsForArea","area","queryParams","getTweetsForAreaMin","minimize","hiRes","getTweetsForAreaMinWeek","compare","getTweetsByArea","getTweetsMajor","getTweetsActive24","queryString","query","list","Object","keys","key","encodeURIComponent","join","api","fetch","length","headers","Accept","response","json","textureCurrent","texturePrevious","deepEqual","require","StatusContext","StatusProvider","status","setStatus","previousStatus","setPreviousStatus","console","log","delay","checkForUpdates","newStatus","env","title","intervalId","setInterval","clearInterval","useStatus","DataContext","currentInterval","dataset","intervals","previousInterval","DataProvider","filters","initialValue","filteredByArea","filteredByAreaMin","filteredByAreaMinWeek","activeOrMajorForArea","activeOrMajorByArea","groupedByArea","history","active24","major24","annotations","setValue","mostRecentId","undefined","setFilteredByArea","setFilteredByAreaMin","setFilteredByAreaMinWeek","setActiveOrMajorForArea","setActiveOrMajorByArea","setGroupedByArea","setHistory","setActive24","setMajor24","setAnnotations","shouldFetch","setShouldFetch","activeOrMajor","values","useTweets","UserContext","UserContextKeys","useUser","user","setUser","setSelection","UserProvider","mapOptions","phone","url","attribution","nhoodFeaturesByArea","features","forEach","feature","properties","push","byArea","nhoods","featuresForArea","nhood","areas","geojson","areaProp","cityGeojson","city","defaultCentroid","mapBounds","lat","long","centroid","coords","geometry","flat","latExtent","d3extent","longExtent","d3mean","Map","geoColor","geojsonStyleBounds","strokeOpacity","geojsonStyleActive","fillColor","typeFilter","selectedTweet","rendered","filter","zoom","defaultZoom","isSelectedDot","id_str","data","type","selectedIndex","findIndex","slice","appearanceFn","d","tileOptions","classnames","styles","container","minZoom","maxZoom","maxBounds","maxBoundsViscosity","zoomControl","TileLayer","GeoJSON","style","CRA_NAM","ErrorBoundary","props","state","hasError","error","errorInfo","this","React","Component","AreaShape","warn","geojsonStyle","attributionControl","dragging","keyboard","SvgDot","sev1","sev2","svgStyles","live","width","height","event","cx","size","cy","r","outer","Spark","showTotal","useCumulative","showPrevious","svgData","setSvgData","nowDot","setNowDot","svgWidth","svgHeight","margin","top","right","bottom","left","accessor","cumulative","xExtent","yExtent","d3max","flatMap","bins","xScale","d3scaleTime","domain","range","yScale","d3scaleLinear","line","d3line","curve","d3curveCardinal","tension","x","x0","y","newSvgData","path","reverse","lastBin","total","lastIndex","sparkStyles","transform","current","now","useNeighborhoods","setMap","newMap","sort","GroupByArea","totalsMap","setTotalsMap","setData","neighborhoodsMap","sortedData","areaA","intervalsA","areaB","intervalsB","activeA","sev1A","sev2A","activeB","sev1B","sev2B","totalA","totalB","itemContainer","to","vpadding","fullWidth","item","major","text","v","spark","MultiLine","showHeader","xAxisRef","useRef","yAxisRef","xAxis","d3axisBottom","scale","tickValues","tickFormat","tickSize","d3select","call","yAxis","d3axisLeft","ticks","chartStyles","header","chart","axis","ref","Header","Topline","totalContent","totalElement","topline","Date","Rehoboam","svgPath","setSvgPath","circles","setCircles","setTotal","axisRef","mainRadius","binsHiRes","maxLength","radialData","fraction","Math","PI","toRadial","d3lineRadial","radialGen","angleScale","axisRadialInner","activeOrMajorValues","newCircles","theta","sin","cos","counter","svg","maincircle","events","Section","styleOption","edgeToEdge","styleDefault","section","content","subcontent","Paragraph","h1","paragraph","Annotations","currentStart","rectWidth","scales","clipPaths","calloutsRef","regionsRef","regions","setRegions","annotationColor","textureColor","textures","lines","orientation","calloutFn","label","isEnd","sideX","sideY","callout","note","subject","nx","ny","dx","dy","calloutsSvgData","Boolean","d3annotation","d3annotationCalloutCircle","newRegions","isCurrent","texture","previous","annotation","clipPath","HistoryEvents","dayHeight","intervalCurrent","intervalPrevious","binsCurrent","binsLowRes","binsPrevious","mapper","count","stack","index","sev2Current","sev2Previous","toCirclesGen","side","toCirclesCurrent","toCirclesPrevious","circlesCurrent","circlesPrevious","closedPath","first","extraBottom","extraTop","History","setScales","setCurrentStart","paths","setPaths","setClipPaths","yearWidth","maxBarWidth","annotationRectWidth","svgRef","getCurrentInterval","getPreviousInterval","timeExtent","getIntervalExtent","b","m","clone","add","toDate","everyMonth","lineCurrent","linePrevious","pathCurrent","pathPrevious","clipLineCurrent","clipLinePrevious","pixelOffset","invert","clipPathCurrent","clipPathPrevious","historyStyles","years","AreaAccessors","ZipCode","zip","Area","neighborhoodGroup","AreaSecondary","neighborhood","Default","TweetDetails","tweet","address","units","unitsList","split","unitsStr","n","Number","parseFloat","toFixed","secondary","unit","TweetModes","Tweet","mode","isGreyedOut","isDetailed","time","detailed","greyedOut","onClick","newSelectedTweet","details","location","description","TweetList","tweets","selected","t","TweetsActive","TweetsMajor","Sources","sources","href","Freshness","lastUpdated","seattle","seattleTZ","userTZ","same","displayUser","displaySeattle","Legend","legend","ThemeSwitch","button","DispatchAll","intro","notes","TweetsForArea","filtered","AreaPageHeader","decodedArea","decodeURIComponent","subareas","subarea","DispatchArea","paragraphStyles","link","App","StrictMode","default","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c2205c5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"group_app__36m5B\",\"light\":\"group_light__3vLZi\",\"dusk\":\"group_dusk__jCyaT\",\"dark\":\"group_dark__XPv8q\",\"container\":\"group_container___U6Y6\",\"itemContainer\":\"group_itemContainer__91pkk\",\"vpadding\":\"group_vpadding__3db4T\",\"fullWidth\":\"group_fullWidth__33LFP\",\"right\":\"group_right__2euLw\",\"item\":\"group_item__1Q6Q7\",\"area\":\"group_area__3alEV\",\"text\":\"group_text__1JC9o\",\"list\":\"group_list__c2KEa\",\"phone\":\"group_phone__rXIIG\",\"major\":\"group_major__2byd-\",\"active\":\"group_active__2THyL\"};","import React, { createContext, useState, useEffect } from \"react\";\n// import { getSunrise, getSunset } from \"sunrise-sunset-js\";\n// import { defaultCentroid } from \"./geojson\";\n// import { pacificMidnight } from \"../clientUtils\";\n\nexport const ThemeContext = createContext();\n\nconst useTheme = () => {\n  const [theme, setTheme] = useState(\"dark\"); // TODO\n\n  useEffect(() => {\n    // const midnight = new Date(pacificMidnight());\n    // const nextMidnight = new Date(pacificMidnight(1));\n    // const sunrise = getSunrise(...defaultCentroid, midnight);\n    // const sunset = getSunset(...defaultCentroid, nextMidnight);\n    // const now = new Date();\n    // const threshold = 0.5 * 3600 * 1000;\n    // if (\n    //   Math.abs(now - sunrise) < threshold ||\n    //   Math.abs(now - sunset) < threshold\n    // ) {\n    //   setTheme(\"dusk\");\n    // } else if (now < sunrise || now > sunset) {\n    //   setTheme(\"dark\");\n    // } else {\n    //   setTheme(\"light\");\n    // }\n  }, []);\n\n  return { theme, setTheme };\n};\n\nexport const ThemeProvider = ({ children }) => {\n  const value = useTheme();\n  const { theme } = value;\n  return (\n    <ThemeContext.Provider value={value}>\n      <div id=\"app\" className={theme}>\n        {children}\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n","import { timeMinute as d3timeMinute } from 'd3-time';\nimport { tz as timezone } from \"moment-timezone\";\n\nexport const intervalExtent = ({ start, end }, expandMinutes = 0) =>\n  expand([start, end], expandMinutes);\n\n// move to server/histogram.js\nexport const expand = (extent, expandMinutes = 0) => [\n  d3timeMinute.offset(extent[0], -expandMinutes),\n  d3timeMinute.offset(extent[1], expandMinutes),\n];\n\n// TODO - coordinate with section.module.scss, or find a way to use vars\n\nconst maxWidthPhone = 500;\nconst queryText = `only screen and (max-device-width: ${maxWidthPhone}px)`;\n\nexport const isPhone = () =>\n  window ? !!window.matchMedia(queryText).matches : true;\n\n// see also fileUtils.js on server\nconst SeattleTimezone = \"America/Vancouver\";\nexport const timeFormatter = (timestamp, format = \"h:mm A\") =>\n  timezone(timestamp, SeattleTimezone).format(format);\n\nexport const timeFormatterUserTimezone = (date, format = \"h:mm A\") =>\n  timezone(date, timezone.guess()).format(format);\n\nexport const timeFormatterHourAM = (timestamp) =>\n  timeFormatter(timestamp, \"h A\");\n\nexport const timeFormatterMonth = (timestamp) =>\n  timeFormatter(+timestamp, \"MMM\");\n\nexport const timeFormatterMonthDay = (timestamp) =>\n  timeFormatter(+timestamp, \"MMM D\");\n\nexport const pacificMidnight = (addDays = 0) =>\n  +timezone(new Date(), SeattleTimezone).startOf(\"day\").add(addDays, \"days\");\n\nconst HOUR = 3600 * 1000;\nexport const every6Hours = (start) =>\n  [0, 6, 12, 18, 24].map((h) => start + h * HOUR); // Or use moment.add()\nconst months = [...new Array(12)].map((_, i) => i);\nexport const everyMonth = (start) => {\n  const m = timezone(start, SeattleTimezone);\n  return months.map((v) => m.clone().add(v, \"months\").toDate());\n};\n\nexport const isActive = ({ derived: { active } }) => active;\nexport const isAtLeastSev1 = ({ derived: { severity } }) => severity >= 1;\nexport const isAtLeastSev2 = ({ derived: { severity } }) => severity >= 2;\nexport const isExactlySev1 = ({ derived: { severity } }) => severity === 1;\nexport const isExactlySev2 = ({ derived: { severity } }) => severity === 2;\n\nexport const getStyleProp = (prop) => {\n  const appElement = document.getElementById(\"app\");\n    const style = getComputedStyle(appElement);\n    return style.getPropertyValue(prop);\n}","import React, { useContext, useEffect, useState } from \"react\";\nimport { ThemeContext } from \"./ThemeContext\";\nimport { Circle } from \"react-leaflet\";\nimport { getStyleProp } from \"../clientUtils\";\n\nexport const Appearance = {\n  Normal: 0,\n  Dimmed: -1,\n  Highlighted: 1,\n};\n\nexport const MapDot = ({\n  coordinates,\n  severity = 0,\n  active = false,\n  appearance = Appearance.Normal,\n}) => {\n  const { theme } = useContext(ThemeContext);\n  const [color, setColor] = useState(null);\n\n  useEffect(() => {\n    const regularColor = getStyleProp(\"--graph-primary\");\n    const activeColor = getStyleProp(\"--live\");\n    setColor(active ? activeColor : regularColor);\n  }, [active, theme]);\n\n  // TODO - set opacity in CSS\n  let opacity = 0.4;\n  if (severity >= 1) {\n    opacity = 0.7;\n  }\n  if (active) {\n    opacity = 0.9;\n  }\n  if (appearance === Appearance.Dimmed) {\n    opacity = 0.35;\n  }\n  if (appearance === Appearance.Highlighted) {\n    opacity = 0.9;\n  }\n  const baseRadius = active ? 250 : 150;\n\n  if (!coordinates[0]) {\n    // console.warn(`Dot: coordinates = ${coordinates}`);\n    return null;\n  }\n\n  return (\n    <>\n      <Circle\n        center={coordinates}\n        radius={baseRadius}\n        color={color}\n        fill={true}\n        fillOpacity={opacity}\n        stroke={false}\n      ></Circle>\n      {severity >= 1 && (\n        <Circle\n          center={coordinates}\n          radius={baseRadius + 150}\n          weight={2}\n          color={color}\n          opacity={opacity}\n          fill={false}\n        ></Circle>\n      )}\n      {severity >= 2 && (\n        <Circle\n          center={coordinates}\n          radius={baseRadius + 300}\n          weight={2}\n          color={color}\n          opacity={opacity}\n          fill={false}\n        ></Circle>\n      )}\n    </>\n  );\n};\n","export async function getEnv() {\n  return getByAPI(\"env\");\n}\n\nexport async function getStatus() {\n  return getByAPI(`dispatch/status`);\n}\n\nexport async function getAnnotations() {\n  return getByAPI(`dispatch/history/annotations`);\n}\n\nexport async function getHistory() {\n  return getByAPI(`dispatch/history`);\n}\n\nexport async function getTweetsForArea(area, queryParams) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsForAreaMin(\n  area,\n  queryParams = { minimize: true, hiRes: true }\n) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsForAreaMinWeek(\n  area,\n  queryParams = { minimize: true, compare: 6 }\n) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsByArea(queryParams) {\n  return getByAPI(`dispatch/tweets/byArea`, queryParams);\n}\n\nexport async function getTweetsMajor() {\n  return getByAPI(\"dispatch/tweets/major\");\n}\n\nexport async function getTweetsActive24() {\n  return getByAPI(\"dispatch/tweets/active24\");\n}\n\nexport async function getTweetsStatic() {\n  return getByAPI(\"dispatch/static\");\n}\n\nexport async function getTweetsSeattleGov() {\n  return getByAPI(\"dispatch/seattle-gov\");\n}\n\nconst queryString = (query = {}) => {\n  const list = Object.keys(query).map(\n    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(query[key])}`\n  );\n  return list.join(\"&\");\n};\n\nasync function getByAPI(api = \"\", queryParams = {}) {\n  const query = queryString(queryParams);\n  const response = await fetch(\n    `/api/${api}${query.length ? \"?\" : \"\"}${query}`,\n    {\n      // TODO - use axios?\n      headers: { Accept: \"application-json\" },\n    }\n  );\n\n  return response.json();\n}\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { getStatus } from \"../api\";\nconst deepEqual = require(\"fast-deep-equal/es6/react\");\n\nexport const StatusContext = createContext();\n\nconst useStatus = () => {\n  const [status, setStatus] = useState({});\n  const [previousStatus, setPreviousStatus] = useState({});\n\n  useEffect(() => {\n    const delay = 60 * 1000;\n\n    console.log(\n      `🟥 useStatus/starting checker @ every ${delay / 1000} seconds`\n    );\n    const checkForUpdates = async () => {\n      const newStatus = await getStatus();\n      // console.log(\n      //   `useStatus(${intervalId})/current status (next check in ${\n      //     delay / 1000\n      //   } sec)`,\n      //   newStatus\n      // );\n\n      if (!deepEqual(status, newStatus)) {\n        console.log(\"useStatus/setting new status:\", newStatus);\n        setPreviousStatus(status);\n        setStatus(newStatus);\n      }\n\n      if (status.env === \"development\") {\n        document.title = \"KSEA.live (dev)\";\n      }\n    };\n\n    checkForUpdates();\n    const intervalId = setInterval(checkForUpdates, delay);\n    return () => clearInterval(intervalId);\n  }, [status]);\n\n  return { status, previousStatus };\n};\n\nexport const StatusProvider = ({ children }) => {\n  const value = useStatus();\n  return (\n    <StatusContext.Provider value={value}>{children}</StatusContext.Provider>\n  );\n};\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { select as d3select } from \"d3-selection\";\nimport textures from \"textures\";\nimport {\n  annotation as d3annotation,\n  annotationCalloutCircle as d3annotationCalloutCircle,\n} from \"d3-svg-annotation\";\nimport { DataContext } from \"./DataProvider\";\n\nimport styles from \"./annotations.module.scss\";\nimport { getStyleProp } from \"../clientUtils\";\n\nlet textureCurrent;\nlet texturePrevious;\n\nexport const Annotations = ({ currentStart, rectWidth, scales, clipPaths }) => {\n  const calloutsRef = useRef(null);\n  const regionsRef = useRef(null);\n  const { annotations } = useContext(DataContext);\n  const [regions, setRegions] = useState([]);\n\n  useEffect(() => {\n    if (!scales.length) {\n      return;\n    }\n\n    const annotationColor = getStyleProp(\"--annotation\");\n    const textureColor = getStyleProp(\"--texture\");\n    texturePrevious = textures\n      .lines()\n      // .lighter()\n      .size(8)\n      .stroke(textureColor);\n    textureCurrent = textures\n      .lines()\n      // .lighter()\n      .size(8)\n      .orientation(\"6/8\")\n      .stroke(textureColor);\n\n    d3select(regionsRef.current).call(textureCurrent);\n    d3select(regionsRef.current).call(texturePrevious);\n\n    const regionFn = ({ start, end, offset }, i) => {\n      if (!start || !end) {\n        return undefined;\n      }\n      const [xScale, yScale] = scales;\n      const isCurrent = offset === 0;\n      const texture = isCurrent ? textureCurrent : texturePrevious;\n\n      return {\n        key: `${start}-${end}-${i}`,\n        x: xScale(0) - (isCurrent ? 0 : rectWidth),\n        y: yScale(start.timestamp + offset),\n        width: rectWidth,\n        height:\n          yScale(end.timestamp + offset) - yScale(start.timestamp + offset),\n        fill: texture.url(),\n      };\n    };\n\n    const calloutFn = ({\n      item: { title, label, value, timestamp },\n      offset,\n      scales: [xScale, yScale],\n      isEnd = false,\n    }) => {\n      const isPrevious = timestamp < currentStart;\n      const sideX = isPrevious ? -1 : 1;\n\n      const x = value ? xScale(value) : rectWidth;\n      const sideY = isEnd ? 1 : -1;\n      const y = yScale(timestamp + offset);\n      const callout = {\n        note: {\n          title,\n          label,\n        },\n        x: sideX * x,\n        y,\n        subject: {\n          radius: 6,\n        },\n        color: annotationColor,\n      };\n\n      if (value) {\n        callout.nx = sideX * (rectWidth + 10);\n        callout.ny = y;\n      } else {\n        callout.dx = sideX * 10;\n        callout.dy = sideY * 10;\n      }\n      return callout;\n    };\n\n    const calloutsFn = ({ start, end, offset }) => [\n      start ? calloutFn({ item: start, offset, scales }) : undefined,\n      end ? calloutFn({ item: end, offset, scales, isEnd: true }) : undefined,\n    ];\n\n    const calloutsSvgData = annotations.flatMap(calloutsFn).filter(Boolean);\n\n    const callout = d3annotation()\n      .annotations(calloutsSvgData)\n      .type(d3annotationCalloutCircle);\n\n    d3select(calloutsRef.current).call(callout);\n\n    const newRegions = annotations.map(regionFn).filter(Boolean);\n    setRegions(newRegions);\n  }, [annotations, currentStart, rectWidth, scales]);\n\n  return (\n    <>\n      <defs>\n        <clipPath id=\"clippath\">\n          <path d={clipPaths.current} />\n          <path d={clipPaths.previous} />\n        </clipPath>\n      </defs>\n      <g ref={regionsRef}>\n        {regions.map((annotation) => (\n          <rect {...annotation} clipPath=\"url(#clippath)\" />\n        ))}\n      </g>\n      <g className={styles.annotations} ref={calloutsRef} />\n    </>\n  );\n};\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\nimport {\n  getTweetsForArea,\n  getTweetsByArea,\n  getHistory,\n  getAnnotations,\n  getTweetsActive24,\n  getTweetsMajor,\n  getTweetsForAreaMin,\n  getTweetsForAreaMinWeek,\n} from \"../api\";\n\nimport { StatusContext } from \"./StatusContext\";\nconst deepEqual = require(\"fast-deep-equal/es6/react\");\n\nexport const DataContext = createContext();\n\nexport const currentInterval = (dataset) => dataset[0].intervals[0];\nexport const previousInterval = (dataset) => dataset[0].intervals[1];\n\nconst useTweets = (filters = {}) => {\n  const initialValue = {\n    filteredByArea: [],\n    filteredByAreaMin: [],\n    filteredByAreaMinWeek: [],\n    activeOrMajorForArea: [],\n    activeOrMajorByArea: [],\n    groupedByArea: [],\n    history: [],\n    active24: [],\n    major24: [],\n    annotations: [],\n    status: {},\n  };\n  const [value, setValue] = useState(initialValue);\n  const { status, previousStatus } = useContext(StatusContext);\n  const mostRecentId = previousStatus.mostRecentId\n    ? status.mostRecentId\n    : undefined;\n\n  if (mostRecentId) {\n    console.log(`useTweets/mostRecentId: ${mostRecentId}`);\n  }\n\n  const [filteredByArea, setFilteredByArea] = useState([]);\n  const [filteredByAreaMin, setFilteredByAreaMin] = useState([]);\n  const [filteredByAreaMinWeek, setFilteredByAreaMinWeek] = useState([]);\n  const [activeOrMajorForArea, setActiveOrMajorForArea] = useState([]);\n  const [activeOrMajorByArea, setActiveOrMajorByArea] = useState([]);\n  const [groupedByArea, setGroupedByArea] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [active24, setActive24] = useState([]);\n  const [major24, setMajor24] = useState([]);\n  const [annotations, setAnnotations] = useState([]);\n\n  const [shouldFetch, setShouldFetch] = useState(true);\n\n  useEffect(() => {\n    if (!deepEqual(status, previousStatus)) {\n      setShouldFetch(true);\n    }\n  }, [status, previousStatus]);\n\n  useEffect(() => {\n    if (!shouldFetch) {\n      console.log(\"PROVIDER/not fetching\");\n      return;\n    }\n    console.log(\"🟢 PROVIDER/fetching all data\");\n    setShouldFetch(false);\n\n    const area = filters.area || \"seattle\";\n\n    console.log(\"PROVIDER/filters.area=\", area);\n    if (area === \"seattle\") {\n      (async () => {\n        setFilteredByAreaMin(await getTweetsForAreaMin(area));\n        setFilteredByAreaMinWeek(await getTweetsForAreaMinWeek(area));\n      })();\n    }\n\n    (async () => {\n      setFilteredByArea(await getTweetsForArea(area));\n    })();\n\n    (async () => {\n      setActiveOrMajorForArea(\n        await getTweetsForArea(area, { activeOrMajor: true })\n      );\n    })();\n\n    (async () => {\n      const response = await getTweetsActive24();\n      setActive24(response[0].intervals[0].values);\n    })();\n\n    (async () => {\n      const response = await getTweetsMajor();\n      setMajor24(response[0].intervals[0].values);\n    })();\n\n    (async () => {\n      setGroupedByArea(await getTweetsByArea());\n    })();\n\n    (async () => {\n      setActiveOrMajorByArea(await getTweetsByArea({ activeOrMajor: true }));\n    })();\n\n    (async () => {\n      setAnnotations(await getAnnotations());\n    })();\n\n    if (!history.length) {\n      (async () => {\n        setHistory(await getHistory(area));\n      })();\n    }\n  }, [filters.area, history.length, mostRecentId, shouldFetch]);\n\n  useEffect(() => {\n    setValue({\n      filteredByArea,\n      filteredByAreaMin,\n      filteredByAreaMinWeek,\n      groupedByArea,\n      history,\n      annotations,\n      active24,\n      major24,\n      activeOrMajorForArea,\n      activeOrMajorByArea,\n      status,\n    });\n  }, [\n    active24,\n    activeOrMajorByArea,\n    activeOrMajorForArea,\n    annotations,\n    filteredByArea,\n    filteredByAreaMin,\n    filteredByAreaMinWeek,\n    groupedByArea,\n    history,\n    major24,\n    status,\n  ]);\n\n  return value;\n};\n\nexport const DataProvider = ({ filters, children }) => {\n  const value = useTweets(filters);\n  return <DataContext.Provider value={value}>{children}</DataContext.Provider>;\n};\n","import React, { useState, createContext, useEffect } from \"react\";\n\nexport const UserContext = createContext();\n\nexport const UserContextKeys = {\n  SelectedTweet: \"SelectedTweet\",\n  TypeFilter: \"TypeFilter\",\n};\n\nconst useUser = () => {\n  const [user, setUser] = useState({});\n\n  const setSelection = (key, value) => {\n    console.log(`USER: ${key} -->`, value);\n    setUser({ ...user, [key]: value });\n  };\n\n  useEffect(()=>{console.log('USER/useEffect')},[]);\n\n  return { user, setSelection };\n};\n\nexport const UserProvider = ({ children }) => {\n  return (\n    <UserContext.Provider value={useUser()}>{children}</UserContext.Provider>\n  );\n};\n","export const mapOptions = (theme, phone = false) => {\n  const query = phone ? \"?phone=true\" : \"\";\n  return {\n    url: `/api/dispatch/maps/{x}/{y}/{z}/${theme}${query}`,\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; jawg maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">openstreetmap</a> contributors',\n  };\n};\n","import { mean as d3mean, extent as d3extent } from \"d3-array\";\n// import zipCodes from \"./zip-codes.json\";\n// import nhoods from \"./nhoods.json\";\nimport nhoods from \"./2016_seattle_cra.json\";\nimport city from \"./2016_seattle_city.json\";\n\nconst nhoodProp = \"NEIGHBO\"; // TODO - import from server/groupby.js\n// const zipcodeProp = \"GEOID10\";\n\nconst byArea = (features, prop) => {\n  const map = {};\n  features.forEach((feature) => {\n    const key = feature.properties[prop];\n    const list = map[key] || [];\n    list.push(feature);\n    map[key] = list;\n  });\n  return map;\n};\n\nconst nhoodFeaturesByArea = byArea(nhoods.features, nhoodProp);\nconst featuresForNhood = (nhood) => nhoodFeaturesByArea[nhood];\n\n// const zipcodeFeaturesByArea = byArea(zipCodes.features, zipcodeProp);\n// const featuresForZip = (zip) => zipcodeFeaturesByArea[zip];\n\nexport const featuresForArea = featuresForNhood;\n\nexport const areas = {\n  geojson: nhoods,\n  areaProp: nhoodProp,\n};\n\nexport const cityGeojson = city;\n\nconst lat = 47.61485,\n  long = -122.32838;\nexport const defaultCentroid = [lat, long]; // approx. centroid of cityGeojson\n\nexport const mapBounds = [\n  [lat + 0.2, long - 0.3],\n  [lat - 0.2, long + 0.3],\n];\n\nexport const centroid = (features) => {\n  if (!features.length) {\n    return defaultCentroid;\n  }\n\n  let coords = features\n    .map(({ geometry: { coordinates } }) => coordinates)\n    .flat(2);\n  const latExtent = d3extent(coords, ([_, lat]) => lat);\n  const longExtent = d3extent(coords, ([long, _]) => long);\n  return [d3mean(latExtent), d3mean(longExtent)];\n};\n","import React, { useContext } from \"react\";\nimport { Map as LeafletMap, TileLayer, GeoJSON } from \"react-leaflet\";\nimport { MapDot, Appearance } from \"./MapDot\";\nimport { DataContext, currentInterval } from \"./DataProvider\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\nimport { ThemeContext } from \"./ThemeContext\";\nimport { mapOptions } from \"./mapOptions\";\nimport { centroid, areas, cityGeojson, mapBounds } from \"./geojson\";\nimport classnames from \"classnames\";\nimport { isPhone, getStyleProp } from \"../clientUtils\";\nimport \"./leaflet.scss\";\nimport styles from \"./map.module.scss\";\n\nconst minZoom = 10,\n  maxZoom = 13,\n  defaultZoom = 11;\n\nexport const Map = ({ area }) => {\n  const { user } = useContext(UserContext);\n  const { filteredByArea } = useContext(DataContext);\n  const { theme } = useContext(ThemeContext);\n\n  if (!filteredByArea.length) {\n    // console.log(\"MAP/no data\");\n    return null;\n  }\n\n  const geoColor = getStyleProp(\"--geo\");\n  const geoBoundsColor = getStyleProp(\"--geo-bounds\");\n\n  const geojsonStyleBounds = {\n    color: geoBoundsColor,\n    fillOpacity: 0,\n    strokeOpacity: 0.5,\n    weight: 4,\n  };\n  const geojsonStyleActive = {\n    color: geoColor,\n    fillColor: geoColor,\n    fillOpacity: 0.1,\n    strokeOpacity: 0.5,\n    weight: 2,\n  };\n\n  const { geojson, areaProp } = areas;\n\n  const typeFilter = user[UserContextKeys.TypeFilter];\n  const selectedTweet = user[UserContextKeys.SelectedTweet];\n\n  const renderFilter = ({ properties }) =>\n    area && properties[areaProp] === area;\n\n  const { features } = geojson;\n  const rendered = features.filter(renderFilter);\n\n  let zoom = defaultZoom;\n  if (area) {\n    zoom = defaultZoom + 1;\n  }\n  if (selectedTweet && selectedTweet.derived.lat) {\n    zoom = maxZoom;\n  }\n\n  const center =\n    selectedTweet && selectedTweet.derived.lat\n      ? [selectedTweet.derived.lat, selectedTweet.derived.long]\n      : area\n      ? centroid(rendered)\n      : centroid(cityGeojson.features);\n\n  const mapper = ({\n    id_str,\n    derived: { lat, long, type, color, active, severity },\n  }) => ({\n    id_str,\n    lat,\n    long,\n    type,\n    color, // TODO - do not use\n    active,\n    severity,\n  });\n\n  const isSelectedDot = ({ id_str }) => selectedTweet.id_str === id_str;\n\n  // const importantOnTop = (a, b) => { return 0; }; // TODO\n\n  const interval = currentInterval(filteredByArea);\n  let data = interval.values\n    .map(mapper)\n    .filter(({ type }) => !typeFilter || typeFilter === type);\n  // .sort(importantOnTop);\n\n  if (selectedTweet) {\n    // Render selected dot last, so it appears on top\n    const selectedIndex = data.findIndex(isSelectedDot);\n\n    data =\n      selectedIndex === -1\n        ? []\n        : [\n            ...data.slice(0, selectedIndex),\n            ...data.slice(selectedIndex + 1),\n            data[selectedIndex],\n          ];\n  }\n\n  const appearanceFn = (d) => {\n    return selectedTweet\n      ? isSelectedDot(d)\n        ? Appearance.Highlighted\n        : Appearance.Dimmed\n      : Appearance.Normal;\n  };\n\n  // console.log(\n  //   `MAP/render area=${area || \"-\"}, zoom=${zoom}, selected:${\n  //     (selectedTweet || {}).id_str || \"-\"\n  //   }, features:${rendered.length}/${features.length}, dots:${\n  //     data.length\n  //   }, geo:${rendered.length}`\n  // );\n  const phone = isPhone();\n  const tileOptions = mapOptions(theme, phone);\n  const city = cityGeojson.features[0];\n\n  return (\n    <LeafletMap\n      className={classnames(styles.container, {\n        [styles.area]: area,\n        [styles.phone]: phone,\n      })}\n      center={center}\n      zoom={zoom}\n      minZoom={minZoom}\n      maxZoom={maxZoom}\n      maxBounds={mapBounds}\n      maxBoundsViscosity={0.6}\n      zoomControl={false}\n    >\n      <TileLayer {...tileOptions} />\n      {!area && <GeoJSON data={city} style={geojsonStyleBounds} />}\n      {rendered.map((feature) => (\n        <GeoJSON\n          key={feature.properties.CRA_NAM}\n          data={feature}\n          style={geojsonStyleActive}\n        />\n      ))}\n      {data.map((d) => (\n        <MapDot // TODO - group under a single container?\n          key={d.id_str}\n          coordinates={[d.lat, d.long]}\n          severity={d.severity}\n          appearance={appearanceFn(d)}\n          active={d.active}\n        />\n      ))}\n    </LeafletMap>\n  );\n};\n","import React from \"react\";\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"ErrorBoundary\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n","import React, { useContext } from \"react\";\nimport { Map as LeafletMap, TileLayer, GeoJSON } from \"react-leaflet\";\nimport { featuresForArea, centroid } from \"./geojson\";\nimport { mapOptions } from \"./mapOptions\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { isPhone, getStyleProp } from \"../clientUtils\";\nimport classnames from \"classnames\";\nimport styles from \"./areashape.module.scss\";\nimport { ThemeContext } from \"./ThemeContext\";\n\nexport const AreaShape = ({ area }) => {\n  const { theme } = useContext(ThemeContext);\n  const features = featuresForArea(area);\n  if (!features || !features.length) {\n    console.warn(\"AreaShape/no features for area\", area);\n    return null;\n  }\n\n  const geoColor = getStyleProp(\"--geo\");\n\n  const geojsonStyle = {\n    color: geoColor,\n    fillColor: geoColor,\n    fillOpacity: 0.1,\n    weight: 2,\n  };\n\n  const center = centroid(features);\n  const zoom = 10;\n  const phone = isPhone();\n  const tileOptions = mapOptions(theme, phone);\n\n  return (\n    <ErrorBoundary>\n      <LeafletMap\n        className={classnames(styles.container, { [styles.phone]: phone })}\n        center={center}\n        zoom={zoom}\n        minZoom={zoom}\n        maxZoom={zoom}\n        zoomControl={false}\n        attributionControl={false}\n        dragging={false}\n        keyboard={false}\n      >\n        <TileLayer {...tileOptions} />\n        <GeoJSON data={features} style={geojsonStyle} />\n      </LeafletMap>\n    </ErrorBoundary>\n  );\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport svgStyles from \"./svg.module.scss\";\n\nexport const SvgDot = ({ radius = 0, active = false, sev1 = false, sev2 = false }) => {\n  const size = 20,\n    sev1Radius = 6.5,\n    sev2Radius = 9;\n  const baseRadius = radius || (4);\n\n  return (\n    <svg\n      className={classnames(svgStyles.container, { [svgStyles.live]: active })}\n      width={size}\n      height={size}\n    >\n      <circle className={svgStyles.event} cx={size / 2} cy={size / 2} r={baseRadius} />\n      {(sev1 || sev2) && (\n        <circle className={svgStyles.outer}\n          cx={size / 2}\n          cy={size / 2}\n          r={sev1Radius}\n          fill=\"none\"\n        />\n      )}\n      {sev2 && (\n        <circle className={svgStyles.outer}\n          cx={size / 2}\n          cy={size / 2}\n          r={sev2Radius}\n          fill=\"none\"\n        />\n      )}\n    </svg>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { intervalExtent, isPhone } from \"../clientUtils\";\nimport classnames from \"classnames\";\n\nimport {\n  scaleLinear as d3scaleLinear,\n  scaleTime as d3scaleTime,\n} from \"d3-scale\";\nimport { max as d3max } from \"d3-array\";\nimport { line as d3line, curveCardinal as d3curveCardinal } from \"d3-shape\";\n\nimport sparkStyles from \"./spark.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nexport const Spark = ({\n  intervals = [],\n  title,\n  showTotal,\n  useCumulative,\n  showPrevious,\n}) => {\n  const [svgData, setSvgData] = useState([]);\n  const [nowDot, setNowDot] = useState(null);\n\n  const radius = 3;\n  const svgWidth = isPhone() ? 90 : 120;\n  const svgHeight = 0.2 * svgWidth,\n    margin = {\n      top: radius + 1,\n      right: radius + 1,\n      bottom: radius + 1,\n      left: radius + 1,\n    },\n    width = svgWidth - margin.left - margin.right,\n    height = svgHeight - margin.bottom - margin.top;\n\n  useEffect(() => {\n    // TODO - no need for useEffect?\n    if (!intervals.length) {\n      return;\n    }\n\n    const data = showPrevious ? intervals : intervals.slice(0, 1);\n\n    const accessor = ({ length, cumulative }) =>\n      useCumulative ? cumulative : length;\n\n    const xExtent = intervalExtent(data[0]);\n\n    const yExtent = [\n      0,\n      d3max([1.0, ...data.flatMap(({ bins }) => bins).map(accessor)]),\n    ];\n\n    const xScale = d3scaleTime().domain(xExtent).range([0, width]);\n    const yScale = d3scaleLinear().domain(yExtent).range([height, 0]);\n\n    const line = d3line()\n      .curve(d3curveCardinal.tension(0.3))\n      .x((d) => xScale(d.x0))\n      .y((d) => yScale(accessor(d)));\n\n    const paths = data.map((d) => d.bins).map(line);\n\n    let newSvgData = paths.map((path, i) => ({ path, key: i })).reverse(); // render highlight after all others\n\n    setSvgData(newSvgData);\n\n    const bins = data[0].bins;\n    if (bins.length) {\n      const lastBin = bins[bins.length - 1];\n      setNowDot({\n        cx: xScale(lastBin.x0),\n        cy: yScale(accessor(lastBin)),\n        r: radius,\n      });\n    }\n  }, [width, height, intervals, showPrevious, useCumulative]);\n\n  if (!intervals.length) {\n    return null;\n  }\n\n  const total = intervals[0].total;\n  const lastIndex = svgData.length - 1;\n\n  return (\n    <div className={sparkStyles.container}>\n      <svg width={svgWidth} height={svgHeight}>\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <g>\n            {svgData.map(({path,key}, i) => (\n              <path\n              key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: i === lastIndex,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          {nowDot && (\n            <g className={svgStyles.now}>\n              <circle {...nowDot} />\n            </g>\n          )}\n        </g>\n      </svg>\n      {showTotal && <span className={sparkStyles.total}>{total}</span>}\n    </div>\n  );\n};\n","import { useState, useEffect, useContext } from 'react';\nimport { DataContext } from './DataProvider';\nimport { featuresForArea } from \"./geojson\";\n\nexport const useNeighborhoods = () => {\n  const [map, setMap] = useState({});\n\n  const { groupedByArea } = useContext(DataContext);\n\n  useEffect(() => {\n    const newMap = {};\n    groupedByArea\n      .map(({ key }) => key)\n      .forEach((key) => {\n        newMap[key] = featuresForArea(key)\n          .map(({ properties: { CRA_NAM } }) => CRA_NAM)\n          .sort();\n      });\n\n      setMap(newMap);\n  }, [groupedByArea]);\n\n  return map;\n}","import React, { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"@reach/router\";\nimport { DataContext } from \"./DataProvider\";\nimport { AreaShape } from \"./AreaShape\";\n\nimport { isActive, isExactlySev2, isExactlySev1, isPhone } from \"../clientUtils\";\nimport { SvgDot } from \"./SvgDot\";\nimport { Spark } from \"./Spark\";\nimport classnames from \"classnames\";\nimport styles from \"./group.module.scss\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { useNeighborhoods } from \"./neighborhoods\";\n\nexport const GroupByArea = () => {\n  const { groupedByArea, activeOrMajorByArea } = useContext(DataContext);\n  const [totalsMap, setTotalsMap] = useState({});\n  const [data, setData] = useState([]);\n  const neighborhoodsMap = useNeighborhoods();\n  const phone = isPhone();\n\n  useEffect(() => {\n    if (!activeOrMajorByArea.length) {\n      return;\n    }\n\n    const map = {};\n    activeOrMajorByArea.forEach(({ key: area, intervals }) => {\n      const values = intervals[0].values;\n      if (values.length) {\n        map[area] = {\n          active: values.filter(isActive).length,\n          sev1: values.filter(isExactlySev1).length,\n          sev2: values.filter(isExactlySev2).length,\n        };\n      }\n    });\n    setTotalsMap(map);\n  }, [activeOrMajorByArea]);\n\n  useEffect(() => {\n    if (!groupedByArea.length || !totalsMap) {\n      return;\n    }\n\n    const sortByImportance = (\n      { key: areaA, intervals: intervalsA },\n      { key: areaB, intervals: intervalsB }\n    ) => {\n      const { active: activeA, sev1: sev1A, sev2: sev2A } = totalsMap[\n        areaA\n      ] || { active: 0, sev1: 0, sev2: 0 };\n      const { active: activeB, sev1: sev1B, sev2: sev2B } = totalsMap[\n        areaB\n      ] || { active: 0, sev1: 0, sev2: 0 };\n      const totalA = intervalsA[0].total;\n      const totalB = intervalsB[0].total;\n\n      return (\n        activeB - activeA || sev2B - sev2A || sev1B - sev1A || totalB - totalA\n      );\n    };\n    const sortedData = groupedByArea.sort(sortByImportance);\n    setData(sortedData);\n  }, [groupedByArea, totalsMap]);\n\n  if (!data.length) {\n    return null;\n  }\n\n  return (\n    <div className={styles.container}>\n      {data.map(({ key: area, intervals }) => (\n        <div key={area} className={styles.itemContainer}>\n          <Link to={`${encodeURIComponent(area)}`}>\n            <div className={styles.vpadding}>\n              <div className={styles.fullWidth}>\n                <div className={styles.item}>&nbsp;</div>\n                <div className={classnames(styles.item, styles.right)}>\n                  {totalsMap[area] && (\n                    <div className={styles.major}>\n                      {totalsMap[area].active > 0 && (\n                        <span className={styles.active}>\n                          <SvgDot active={true} />\n                          <span>{totalsMap[area].active} </span>\n                        </span>\n                      )}\n                      {totalsMap[area].sev1 > 0 && (\n                        <>\n                          <SvgDot sev1={true} />\n                          <span> {totalsMap[area].sev1} </span>\n                        </>\n                      )}\n                      {totalsMap[area].sev2 > 0 && (\n                        <>\n                          <SvgDot sev2={true} />\n                          <span> {totalsMap[area].sev2} </span>\n                        </>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className={classnames(styles.item, styles.text, {[styles.phone]:phone})}>\n                <div className={styles.area}>{area}</div>\n                {neighborhoodsMap[area] && (\n                  <div className={classnames(styles.list)}>\n                    {neighborhoodsMap[area].map((v) => (\n                      <div key={v}>• {v}</div>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              <div className={classnames(styles.item, styles.right)}>\n                <AreaShape area={area} />\n                <ErrorBoundary>\n                  <Spark\n                    className={styles.spark}\n                    intervals={intervals}\n                    useCumulative={true}\n                    showTotal={true}\n                  />\n                </ErrorBoundary>\n              </div>\n            </div>\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport classnames from \"classnames\";\n\nimport {\n  scaleLinear as d3scaleLinear,\n  scaleTime as d3scaleTime,\n} from \"d3-scale\";\nimport { max as d3max } from \"d3-array\";\nimport { select as d3select } from \"d3-selection\";\nimport { line as d3line, curveCardinal as d3curveCardinal } from \"d3-shape\";\nimport { axisLeft as d3axisLeft, axisBottom as d3axisBottom } from \"d3-axis\";\n\nimport chartStyles from \"./chart.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\nimport { intervalExtent, timeFormatterHourAM, isPhone, every6Hours } from \"../clientUtils\";\n\nexport const MultiLine = ({\n  intervals = [],\n  title,\n  showHeader = false,\n  useCumulative,\n}) => {\n  const [svgData, setSvgData] = useState([]);\n  const [nowDot, setNowDot] = useState(null);\n\n  const svgWidth = isPhone() ? 350 : 500;\n  const svgHeight = 0.3 * svgWidth,\n    margin = { top: 20, right: 20, bottom: 20, left: 20 },\n    width = svgWidth - margin.left - margin.right,\n    height = svgHeight - margin.bottom - margin.top;\n\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n\n  useEffect(() => {\n    // TODO - no need for useEffect?\n    if (!intervals.length) {\n      return;\n    }\n\n    const accessor = ({ length, cumulative }) =>\n      useCumulative ? cumulative : length;\n\n    const currentInterval = intervals[0];\n    const xExtent = intervalExtent(currentInterval);\n    const yExtent = [\n      0,\n      d3max([1.0, ...intervals.flatMap(({ bins }) => bins).map(accessor)]),\n    ];\n\n    const xScale = d3scaleTime().domain(xExtent).range([0, width]);\n    const xAxis = d3axisBottom()\n      .scale(xScale)\n      .tickValues(every6Hours(currentInterval.start))\n      .tickFormat(timeFormatterHourAM)\n      .tickSize(3);\n    d3select(xAxisRef.current).call(xAxis);\n\n    const yScale = d3scaleLinear().domain(yExtent).range([height, 0]);\n    const yAxis = d3axisLeft().scale(yScale).ticks(2);\n    d3select(yAxisRef.current).call(yAxis);\n\n    const line = d3line()\n      .curve(d3curveCardinal.tension(0.3))\n      .x((d) => xScale(d.x0))\n      .y((d) => yScale(accessor(d)));\n\n    const paths = intervals.map((d) => d.bins).map(line);\n\n    let newSvgData = paths.map((path, i) => ({ path, key: i })).reverse(); // render highlight after all others\n\n    setSvgData(newSvgData);\n\n    const bins = intervals[0].bins;\n    if (bins.length) {\n      const lastBin = bins[bins.length - 1];\n      setNowDot({\n        cx: xScale(lastBin.x0),\n        cy: yScale(accessor(lastBin)),\n        r: 3,\n      });\n    }\n  }, [height, intervals, useCumulative, width]);\n\n  if (!intervals.length) {\n    return null;\n  }\n\n  const total = intervals[0].total;\n  const lastIndex = svgData.length - 1;\n\n  return (\n    <div className={chartStyles.container}>\n      {showHeader && (\n        <div className={chartStyles.header}>\n          {title && <div className={chartStyles.title}>{title}</div>}\n          {typeof total === \"number\" && (\n            <div className={chartStyles.total}>{total}</div>\n          )}\n        </div>\n      )}\n      <svg className={chartStyles.chart} width={svgWidth} height={svgHeight}>\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <g\n            className={svgStyles.axis}\n            ref={xAxisRef}\n            transform={`translate(0,${height})`}\n          />\n          <g className={svgStyles.axis} ref={yAxisRef} />\n          <g>\n            {svgData.map(({path, key}, i) => (\n              <path\n                key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: i === lastIndex,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          {nowDot && (\n            <g className={svgStyles.now}>\n              <circle {...nowDot} />\n            </g>\n          )}\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\nimport { MultiLine } from \"./MultiLine\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\n\nexport const Header = ({ area }) => {\n  const { filteredByAreaMinWeek } = useContext(DataContext);\n\n  if (!filteredByAreaMinWeek.length) {\n    return null;\n  }\n\n  return (\n    <ErrorBoundary>\n      <MultiLine\n        intervals={filteredByAreaMinWeek[0].intervals}\n        useCumulative={!!area}\n      />\n    </ErrorBoundary>\n  );\n};\n","import React from \"react\";\nimport { timeFormatterMonthDay } from \"../clientUtils\";\nimport styles from \"./topline.module.scss\";\nimport { isPhone } from \"../clientUtils\";\nimport classnames from \"classnames\";\n\nexport const Topline = ({ total, text }) => {\n  const isDefined = typeof total === \"number\";\n  const totalContent = isDefined ? total : \"⋯\";\n  const totalElement = <div className={styles.total}>{totalContent}</div>;\n  const phone = isPhone();\n\n  return (\n    <div className={classnames(styles.topline, {[styles.phone]: phone})}>\n      {text && <div className={styles.text}>{text}</div>}\n      {totalElement}\n      <div className={styles.date}>{timeFormatterMonthDay(new Date())}</div>\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { DataContext, currentInterval } from \"./DataProvider\";\nimport {\n  intervalExtent,\n  timeFormatterHourAM,\n  every6Hours,\n  isPhone,\n} from \"../clientUtils\";\nimport { Topline } from \"./Topline\";\nimport classnames from \"classnames\";\n\nimport {\n  scaleLinear as d3scaleLinear,\n} from \"d3-scale\";\nimport { max as d3max } from \"d3-array\";\nimport { select as d3select } from \"d3-selection\";\nimport { lineRadial as d3lineRadial, curveCardinal as d3curveCardinal } from \"d3-shape\";\nimport { axisRadialInner } from \"d3-radial-axis\";\n\nimport styles from \"./rehoboam.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nexport const Rehoboam = ({ area }) => {\n  const { filteredByAreaMin, activeOrMajorForArea } = useContext(DataContext);\n  const [svgPath, setSvgPath] = useState(null);\n  const [circles, setCircles] = useState([]);\n  const [total, setTotal] = useState(undefined);\n  const axisRef = useRef(null);\n\n  const mainRadius = isPhone() ? 100 : 130;\n  const margin = 30,\n    width = 2 * mainRadius,\n    height = 2 * mainRadius,\n    svgWidth = width + 2 * margin,\n    svgHeight = height + 2 * margin;\n\n  const dotRadius = 5;\n\n  useEffect(() => {\n    if (!filteredByAreaMin.length) {\n      return;\n    }\n\n    setTotal(currentInterval(filteredByAreaMin).total); // TODO - use status\n\n    const current = currentInterval(filteredByAreaMin);\n    const bins = current.binsHiRes;\n    const extent = intervalExtent(current);\n    const maxDisturbance = 20;\n    const maxLength = d3max(bins, ({ length }) => length);\n    const [start, end] = extent;\n\n    const toRadial = (timestamp, length) => {\n      const fraction = (timestamp - start) / (end - start);\n      const radians = 2 * Math.PI * fraction;\n      const disturbance = maxLength ? maxDisturbance * (length / maxLength) : 0;\n      return [radians, mainRadius + disturbance];\n    };\n\n    const radialData = bins.map(({ x0, length }) => toRadial(x0, length));\n    const radialGen = d3lineRadial().curve(d3curveCardinal.tension(0.4));\n    const path = radialGen(radialData);\n    setSvgPath(path);\n\n    const angleScale = d3scaleLinear()\n      .domain(extent)\n      .range([0, 2 * Math.PI]);\n\n    const axis = axisRadialInner(angleScale, mainRadius)\n      .tickFormat(timeFormatterHourAM)\n      .tickSize(0)\n      .tickValues(every6Hours(current.start));\n    d3select(axisRef.current).call(axis);\n\n    if (activeOrMajorForArea.length) {\n      const toRadialDot = ({ derived: { timestamp } }) => {\n        const fraction = (timestamp - start) / (end - start);\n        const radians = 2 * Math.PI * fraction;\n        return [radians, mainRadius];\n      };\n\n      const activeOrMajorValues = currentInterval(activeOrMajorForArea).values;\n\n      const radialDots = activeOrMajorValues.map(toRadialDot);\n\n      const newCircles = radialDots.map(([theta, r], i) => {\n        const {\n          derived: { severity, active },\n        } = activeOrMajorValues[i];\n        return {\n          key: i,\n          cx: r * Math.sin(theta),\n          cy: r * -Math.cos(theta),\n          r: dotRadius,\n          sev1: severity >= 1,\n          sev2: severity >= 2,\n          active,\n        };\n      });\n\n      setCircles(newCircles);\n    }\n  }, [activeOrMajorForArea, filteredByAreaMin, mainRadius]);\n\n  const text = area || \"Seattle\";\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.counter}>\n        <Topline total={total} text={text} />\n      </div>\n      <svg className={styles.svg} width={svgWidth} height={svgHeight}>\n        <g\n          transform={`translate(${margin + mainRadius},${margin + mainRadius})`}\n        >\n          <g className={svgStyles.axis} ref={axisRef} />\n          <circle className={styles.maincircle} cx={0} cy={0} r={mainRadius} />\n          {svgPath && <path className={classnames(styles.path)} d={svgPath} />}\n          <g className={styles.events}>\n            {circles.map(({ key, cx, cy, r, sev1, sev2, active }) => (\n              <g key={key} className={classnames({ [svgStyles.live]: active })}>\n                <circle\n                  className={classnames(svgStyles.event)}\n                  cx={cx}\n                  cy={cy}\n                  r={r}\n                />\n                {sev1 && (\n                  <circle className={classnames(styles.outer, svgStyles.outer)} cx={cx} cy={cy} r={r + 3} />\n                )}\n                {sev2 && (\n                  <circle className={classnames(styles.outer, svgStyles.outer)} cx={cx} cy={cy} r={r + 6} />\n                )}\n              </g>\n            ))}\n          </g>\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React from \"react\";\nimport styles from \"./section.module.scss\";\nimport classnames from \"classnames\";\nimport { isPhone } from \"../clientUtils\";\n\nexport const Section = ({ children, styleOption = 0, edgeToEdge = false }) => {\n  const style = styleOption ? styles[`style${styleOption}`] : styles.styleDefault;\n    \n  return (\n    <section className={classnames(styles.section, style)}>\n      <div\n        className={classnames(styles.content, {\n          [styles.phone]: isPhone(),\n        })}\n      >\n        <div\n          className={classnames(styles.subcontent, {\n            [styles.edgeToEdge]: edgeToEdge,\n          })}\n        >\n          {children}\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React from \"react\";\nimport styles from \"./paragraph.module.scss\";\nimport classnames from \"classnames\";\n\nexport const Paragraph = ({ h1, title, content, margin = false }) => {\n  return (\n    <div className={classnames(styles.paragraph, { [styles.margin]: margin })}>\n      {h1 && <h1>{h1}</h1>}\n      {title && <h3>{title}</h3>}\n      {content && <div className={styles.text}>{content}</div>}\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport classnames from \"classnames\";\nimport svgStyles from \"./svg.module.scss\";\n\nimport { DataContext, currentInterval, previousInterval } from \"./DataProvider\";\n\nexport const HistoryEvents = ({ scales, dayHeight = 4 }) => {\n  const { history } = useContext(DataContext);\n  const [circles, setCircles] = useState([]);\n\n  useEffect(() => {\n    if (!history.length || !scales.length) {\n      return;\n    }\n    const intervalCurrent = currentInterval(history);\n    const intervalPrevious = previousInterval(history);\n    const binsCurrent = intervalCurrent.binsLowRes;\n    const binsPrevious = intervalPrevious.binsLowRes;\n    const [, yScale] = scales;\n\n    const radius = dayHeight / 2 + 2;\n    const filter = ({ sev2 }) => sev2 > 0;\n    const mapper = ({ x0, sev2 }) => ({ timestamp: x0, count: sev2 });\n    const stack = ({ timestamp, count }) =>\n      [...new Array(count)].map((_, index) => ({ timestamp, index }));\n    const sev2Current = binsCurrent.filter(filter).map(mapper).flatMap(stack);\n    const sev2Previous = binsPrevious.filter(filter).map(mapper).flatMap(stack);\n\n    const toCirclesGen = (side) => ({ timestamp, index }) => ({\n      key: `${timestamp}-${index}-${side}`,\n      cx: side * (index + 0.75) * 2 * radius,\n      cy: yScale(timestamp),\n      r: radius,\n      isCurrent: side === 1,\n    });\n    const toCirclesCurrent = toCirclesGen(1);\n    const toCirclesPrevious = toCirclesGen(-1);\n\n    const circlesCurrent = sev2Current.map(toCirclesCurrent);\n    const circlesPrevious = sev2Previous.map(toCirclesPrevious);\n\n    const newCircles = [...circlesPrevious, ...circlesCurrent];\n    setCircles(newCircles);\n  }, [dayHeight, history, scales]);\n\n  return (\n    <g>\n      {circles.map(({ key, cx, cy, r, isCurrent }) => (\n        <g\n          key={key}\n          className={classnames({\n            [svgStyles.current]: isCurrent,\n            [svgStyles.previous]: !isCurrent,\n          })}\n        >\n          <circle cx={cx} cy={cy} r={r} />\n        </g>\n      ))}\n    </g>\n  );\n};\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport {\n  DataContext,\n  currentInterval as getCurrentInterval,\n  previousInterval as getPreviousInterval,\n} from \"./DataProvider\";\nimport {\n  intervalExtent as getIntervalExtent,\n  isPhone,\n  timeFormatterMonth,\n  everyMonth,\n} from \"../clientUtils\";\nimport { Annotations } from \"./Annotations\";\nimport { HistoryEvents } from \"./HistoryEvents\";\nimport classnames from \"classnames\";\n\nimport {\n  scaleLinear as d3scaleLinear,\n  scaleTime as d3scaleTime,\n} from \"d3-scale\";\nimport { max as d3max } from \"d3-array\";\nimport { select as d3select } from \"d3-selection\";\nimport { line as d3line, curveCardinal as d3curveCardinal } from \"d3-shape\";\nimport { axisLeft as d3axisLeft, axisBottom as d3axisBottom } from \"d3-axis\";\n\nimport historyStyles from \"./history.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nconst closedPath = (bins, line, offset) => {\n  if (!bins.length) {\n    return \"\";\n  }\n\n  let data = bins.map(({ x0, length }) => ({\n    timestamp: x0,\n    value: length + offset,\n  }));\n\n  const first = data[0],\n    last = data[data.length - 1];\n  const extraBottom = { timestamp: last.timestamp, value: 10000 };\n  const extraTop = { timestamp: first.timestamp, value: 10000 };\n\n  data = [...data, extraBottom, extraTop, first];\n  return line(data);\n};\n\nexport const History = () => {\n  const { history } = useContext(DataContext);\n  // const [svgData, setSvgData] = useState([]);\n  const [scales, setScales] = useState([]);\n  const [currentStart, setCurrentStart] = useState([]);\n  const [paths, setPaths] = useState([]);\n  const [clipPaths, setClipPaths] = useState({});\n\n  const dayHeight = 3.5;\n  const width = isPhone() ? 360 : 500, // TODO - use screen width\n    margin = { top: 20, right: 0, bottom: 20, left: 0 },\n    height = 365 * dayHeight,\n    svgHeight = height + margin.top + margin.bottom,\n    svgWidth = width + margin.left + margin.right;\n  const yearWidth = width / 2;\n  const maxBarWidth = yearWidth * 0.4;\n  const annotationRectWidth = yearWidth * 0.45;\n\n  const svgRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n\n  useEffect(() => {\n    if (!history.length) {\n      return;\n    }\n\n    const intervalCurrent = getCurrentInterval(history);\n    setCurrentStart(intervalCurrent.start);\n    const intervalPrevious = getPreviousInterval(history);\n    const binsCurrent = intervalCurrent.binsLowRes;\n    const binsPrevious = intervalPrevious.binsLowRes;\n    const timeExtent = getIntervalExtent(intervalCurrent);\n\n    const xScale = d3scaleLinear()\n      .domain([0, d3max(binsCurrent, (b) => b.length)])\n      .range([0, maxBarWidth]);\n\n    const yScale = d3scaleTime().domain(timeExtent).range([0, height]);\n\n    setScales([xScale, yScale]);\n\n    const yAxis = d3axisLeft()\n      .scale(yScale)\n      .tickValues(everyMonth(intervalCurrent.start))\n      .tickFormat(timeFormatterMonth)\n      .tickSize(0);\n    d3select(yAxisRef.current).call(yAxis);\n\n    const xAxis = d3axisBottom().scale(xScale).ticks(2);\n    d3select(xAxisRef.current).call(xAxis);\n\n    // const currentYear = binsCurrent.map(({ x0, length }) => ({\n    //   x: xScale(0),\n    //   width: xScale(length),\n    //   y: yScale(x0),\n    //   height: binHeight,\n    //   rx: 1,\n    // }));\n    // const previousYear = binsPrevious.map(({ x0, length }) => ({\n    //   x: xScale(0) - xScale(length),\n    //   width: xScale(length),\n    //   y: yScale(x0),\n    //   height: binHeight,\n    //   rx: 1,\n    // }));\n    // setSvgData([currentYear, previousYear]);\n\n    const lineCurrent = d3line()\n      .curve(d3curveCardinal.tension(0.3))\n      .x((d) => xScale(d.length))\n      .y((d) => yScale(d.x0));\n    const linePrevious = d3line()\n      .curve(d3curveCardinal.tension(0.3))\n      .x((d) => xScale(-d.length))\n      .y((d) => yScale(d.x0));\n\n    const pathCurrent = lineCurrent(binsCurrent);\n    const pathPrevious = linePrevious(binsPrevious);\n    setPaths([\n      { path: pathCurrent, key: \"current\" },\n      { path: pathPrevious, key: \"previous\" },\n    ]);\n\n    const clipLineCurrent = d3line()\n      .x((d) => xScale(d.value))\n      .y((d) => yScale(d.timestamp));\n\n    const clipLinePrevious = d3line()\n      .x((d) => xScale(-d.value))\n      .y((d) => yScale(d.timestamp));\n\n    const pixelOffset = xScale.invert(2) - xScale.invert(0);\n    const clipPathCurrent = closedPath(\n      binsCurrent,\n      clipLineCurrent,\n      pixelOffset\n    );\n    const clipPathPrevious = closedPath(\n      binsPrevious,\n      clipLinePrevious,\n      pixelOffset\n    );\n\n    setClipPaths({ current: clipPathCurrent, previous: clipPathPrevious });\n  }, [history, height, maxBarWidth]);\n\n  // console.log(\"HISTORY/render\");\n\n  return (\n    <div className={historyStyles.container}>\n      <div className={historyStyles.years}>\n        <div className={historyStyles.left}>2019</div>\n        <div className={historyStyles.right}>2020</div>\n      </div>\n      <svg\n        className={historyStyles.svg}\n        ref={svgRef}\n        width={svgWidth}\n        height={svgHeight}\n      >\n        <g transform={`translate(${margin.left + yearWidth},${margin.top})`}>\n          {/* <g>\n            {svgData.map((dataset, iDataset) =>\n              dataset.map((d) => (\n                <rect\n                  className={classnames({\n                    [historyStyles.previous]: iDataset,\n                    [historyStyles.current]: !iDataset,\n                  })}\n                  x={d.x}\n                  y={d.y}\n                  width={d.width}\n                  height={d.height}\n                  rx={d.rx}\n                ></rect>\n              ))\n            )}\n          </g> */}\n          <g>\n            {paths.map(({ path, key }, i) => (\n              <path\n                key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: !i,\n                  [svgStyles.previous]: i,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          <g>\n            <HistoryEvents scales={scales} dayHeight={dayHeight} />\n          </g>\n          <g>\n            <Annotations\n              currentStart={currentStart}\n              rectWidth={annotationRectWidth}\n              scales={scales}\n              clipPaths={clipPaths}\n            />\n          </g>\n          {/* <g\n            className={classnames(svgStyles.axis, historyStyles.axis)}\n            ref={xAxisRef}\n            transform={`translate(0,${height})`}\n          /> */}\n          <g\n            className={classnames(svgStyles.axis, historyStyles.axis)}\n            ref={yAxisRef}\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n","// see groupby.js\nexport const GroupByOptions = {\n  // TODO - import from server\n  Nothing: undefined,\n  IncidentType: \"type\",\n  ZipCode: \"zip\",\n  Area: \"area\",\n  TimeInterval: \"time\",\n};\n\nexport const AreaAccessors = {\n  ZipCode: ({ derived: { zip } }) => zip,\n  Area: ({ derived: { neighborhoodGroup } }) => neighborhoodGroup,\n  AreaSecondary: ({ derived: { neighborhood } }) => neighborhood,\n};\nAreaAccessors.Default = AreaAccessors.Area;\n","import React from \"react\";\nimport styles from \"./tweetdetails.module.scss\";\nimport { isPhone } from \"../clientUtils\";\nimport { AreaAccessors } from \"../groupingOptions\";\n\nexport const TweetDetails = ({tweet}) => {\n  const { address, units, lat, long } = tweet.derived;\n  const { id_str } = tweet;\n  // const url = `https://data.seattle.gov/resource/fire-911.json?incident_number=${id_str}`;\n  const unitsList = units.split(\" \");\n  const unitsStr = `${unitsList.length} ${\n    unitsList.length === 1 ? \"unit\" : \"units\"\n  } dispatched:`;\n  const area = AreaAccessors.AreaSecondary(tweet);\n  const phone = isPhone();\n\n  const format = (n) => Number.parseFloat(n).toFixed(3);\n  const coordinates = lat ? `${format(lat)}°N ${format(-long)}°W` : \"\";\n  // const incidentLink = <a className={styles.link} href={url}>{id_str}</a>;\n  return (\n    <div className={styles.container}>\n      <div>{address}</div>\n      {phone && <div className={styles.secondary}>{area}</div>}\n      <div className={styles.secondary}>{coordinates}</div>\n      <div>\n        <span>{unitsStr}</span>\n        {unitsList.map((unit) => (\n          <span key={unit} className={styles.unit}>{unit}</span>\n          ))}\n      </div>\n      <div className={styles.secondary}>Incident ID {id_str}</div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport styles from \"./tweet.module.scss\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\nimport { AreaAccessors } from \"../groupingOptions\";\nimport { TweetDetails } from \"./TweetDetails\";\nimport {\n  timeFormatter,\n  isActive,\n  isAtLeastSev1,\n  isAtLeastSev2,\n  isPhone,\n} from \"../clientUtils\";\nimport { SvgDot } from \"./SvgDot\";\nimport classnames from \"classnames\";\n\nexport const TweetModes = {\n  Default: 0,\n  Detailed: 1,\n  GreyedOut: 2,\n};\n\nexport const Tweet = ({ tweet, mode = TweetModes.Default }) => {\n  const { user, setSelection } = useContext(UserContext);\n  const selectedTweet = user[UserContextKeys.SelectedTweet];\n\n  const handleClick = () => {\n    const newSelectedTweet =\n      selectedTweet && selectedTweet.id_str === tweet.id_str ? null : tweet;\n    setSelection(UserContextKeys.SelectedTweet, newSelectedTweet);\n  };\n  const active = isActive(tweet);\n  const sev1 = isAtLeastSev1(tweet);\n  const sev2 = isAtLeastSev2(tweet);\n\n  const area = AreaAccessors.AreaSecondary(tweet);\n\n  const isGreyedOut = mode === TweetModes.GreyedOut;\n  const isDetailed = mode === TweetModes.Detailed;\n  const time = timeFormatter(tweet.derived.timestamp);\n  const phone = isPhone();\n\n  return (\n    <div\n      className={classnames(styles.container, {\n        [styles.detailed]: isDetailed,\n        [styles.greyedOut]: isGreyedOut,\n        [styles.phone]: phone,\n      })}\n      onClick={handleClick}\n    >\n      <div className={styles.tweet}>\n        <div className={styles.details}>\n          <span className={styles.location}>\n            {!phone && area && <span>{area} @ </span>}\n            {time}\n          </span>\n        </div>\n        <div className={classnames({ [styles.active]: active })}>\n          <SvgDot active={active} sev1={sev1} sev2={sev2} />\n          <span> {tweet.derived.description}</span>\n        </div>\n      </div>\n      {isDetailed && <TweetDetails tweet={tweet} />}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport styles from \"./tweets.module.scss\";\nimport { Tweet, TweetModes } from \"./Tweet\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\n\nexport const TweetList = ({ tweets = [] }) => {\n  const { user } = useContext(UserContext);\n  const selected = user[UserContextKeys.SelectedTweet];\n\n  const mode = ({ id_str }) =>\n    selected\n      ? id_str === selected.id_str\n        ? TweetModes.Detailed\n        : TweetModes.GreyedOut\n      : TweetModes.Default; // TODO - remove modes\n\n  return (\n    <div className={styles.tweets}>\n      {tweets.map((t) => (\n        <Tweet key={t.id_str} tweet={t} mode={mode(t)} />\n      ))}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\n\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsActive = () => {\n  const { active24 } = useContext(DataContext);\n\n  return <TweetList tweets={active24} />;\n}\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\n\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsMajor = () => {\n  const { major24 } = useContext(DataContext);\n\n  return <TweetList tweets={major24} />;\n}\n","import React from \"react\";\nimport { Paragraph } from \"./Paragraph\";\n\n\nexport const Sources = () => {\n  const title = <span id=\"sources\">Data Sources</span>;\n\n  const sources = (\n    <p>\n      The primary data source is{\" \"}\n      <a href=\"http://www2.seattle.gov/fire/realTime911/\">\n        Real-Time 911 Dispatch\n      </a>\n      . Geolocation data for each incident is retrieved from{\" \"}\n      <a href=\"https://data.seattle.gov/Public-Safety/Seattle-Real-Time-Fire-911-Calls/kzjm-xkqj\">\n        data.seattle.gov\n      </a>{\" \"}\n      (refreshed every 5 minutes, with occasional delays). City and neighborhood\n      boundary data is from{\" \"}\n      <a href=\"https://github.com/seattleflu/seattle-geojson/tree/master/seattle_geojsons\">\n        seattleflu/seattle-geojson\n      </a>\n      . Map powered by <a href=\"http://leafletjs.com\">Leaflet</a> via{\" \"}\n      <a href=\"https://react-leaflet.js.org\">react-leaflet</a>. Map tiles\n      provided by{\" \"}\n      <a href=\"https://www.jawg.io/docs/apidocs/static-maps/\">Jawg Maps</a>.\n      Visualizations powered by <a href=\"https://d3js.org\">D3</a>.\n    </p>\n  );\n\n  return <Paragraph title={title} content={sources} />;\n};\n","import React, { useContext } from \"react\";\nimport { StatusContext } from \"./StatusContext\";\nimport { timeFormatter, timeFormatterUserTimezone } from \"../clientUtils\";\nimport styles from \"./freshness.module.scss\";\n\nexport const Freshness = () => {\n  const { status = {} } = useContext(StatusContext);\n\n  if (!status.lastUpdated) {\n    return <span>&nbsp;</span>;\n  }\n\n  const date = new Date(status.lastUpdated);\n  const formatTimezone = \"h:mma z\";\n  const formatNoTimezone = \"h:mma\";\n  const seattle = timeFormatter(date, formatNoTimezone);\n  const seattleTZ = timeFormatter(date, formatTimezone);\n  const user = timeFormatterUserTimezone(date, formatNoTimezone);\n  const userTZ = timeFormatterUserTimezone(date, formatTimezone);\n\n  const same = seattle === user;\n  const displayUser = same ? \"\" : ` (${userTZ})`;\n  const displaySeattle = same ? seattle : seattleTZ;\n\n  return (\n    <span>\n      Data is current as of{\" \"}\n      <span className={styles.time}>{displaySeattle}</span>\n      {displayUser}.\n    </span>\n  );\n};\n","import React from \"react\";\nimport styles from \"./legend.module.scss\";\nimport { SvgDot } from \"./SvgDot\";\n\nexport const Legend = () => (\n  <div className={styles.legend}>\n    <div>\n      <span>Active incident </span>\n      <SvgDot active={true} radius={5} />\n    </div>\n    <div>\n      <span>10 or more units dispatched </span>\n      <SvgDot sev2={true} />\n    </div>\n    <div>\n      <span>5 or more units dispatched </span>\n      <SvgDot sev1={true} />\n    </div>\n    <div>\n      <span>Fewer than 5 units dispatched </span>\n      <SvgDot />\n    </div>\n  </div>\n);\n","import React, { useContext } from \"react\";\nimport { Paragraph } from \"./Paragraph\";\nimport { ThemeContext } from \"./ThemeContext\";\nimport classnames from \"classnames\";\nimport styles from \"./themeswitch.module.scss\";\n\nexport const ThemeSwitch = () => {\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  const themes = [\"light\", \"dusk\", \"dark\"];\n\n  const handleClick = (newTheme) => {\n    setTheme(newTheme);\n  };\n\n  const content = (\n    <p>\n      {/* The color theme changes based on time of day in Seattle. */}\n      See this page in\n      {themes.map((t) => (\n        <span key={t}>\n          {\" \"}\n          <button\n            className={classnames(styles.button, {\n              [styles.selected]: t === theme,\n            })}\n            onClick={() => handleClick(t)}\n          >\n            {t}\n          </button>\n        </span>\n      ))} theme.\n    </p>\n  );\n\n  return <Paragraph content={content} />;\n};\n","import React from \"react\";\nimport { Map } from \"./Map\";\nimport { DataProvider } from \"./DataProvider\";\nimport { GroupByArea } from \"./GroupByArea\";\nimport { Header } from \"./Header\";\nimport { Rehoboam } from \"./Rehoboam\";\nimport { Section } from \"./Section\";\nimport { Paragraph } from \"./Paragraph\";\nimport { History } from \"./History\";\nimport { TweetsActive } from \"./TweetsActive\";\nimport { TweetsMajor } from \"./TweetsMajor\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { Sources } from \"./Sources\";\nimport { Freshness } from \"./Freshness\";\nimport { Legend } from \"./Legend\";\nimport { ThemeSwitch } from \"./ThemeSwitch\";\n\nexport const DispatchAll = () => {\n  const intro = (\n    <p>\n      A visualization of Seattle Fire Department 911 dispatch data: real-time\n      view of incidents across the city; per-neighborhood breakdown; overview of\n      the year's cumulative data.{\" \"}\n    </p>\n  );\n\n  const live = (\n    <p>\n      <span>\n        A near-real-time view of today's incidents. All timestamps are in\n        Seattle local time.\n      </span>{\" \"}\n      <Freshness />\n    </p>\n  );\n\n  const todayText = \"\";\n\n  const pastWeek = `The past 7 days of dispatches.`;\n\n  const active = (\n    <p>\n      Select an incident to view dispatch details. If geolocation data is\n      available (typically within 5 minutes) the map will zoom in to the spot.\n    </p>\n  );\n\n  const major = (\n    <p>\n      Today's incidents with <strong>five or more</strong> units dispatched.\n    </p>\n  );\n\n  const areas = \"Select an area to zoom in on today's incidents there.\";\n\n  const history = (\n    <p>\n      Zooming out even further, this view presents a year's worth of data. Lines\n      trace daily dispatch totals for all of Seattle. Circles represent major\n      incidents (those with 10 or more units dispatched).\n    </p>\n  );\n\n  const notes = (\n    <>\n      <ThemeSwitch />\n      <p>\n        Created by <a href=\"https://linkedin.com/in/anarseyf/\">Anar Seyf</a>.\n      </p>\n    </>\n  );\n\n  return (\n    <DataProvider>\n      <Section styleOption={1}>\n        <Paragraph h1=\"Seattle Fire 911 Dispatch\" content={intro} />\n      </Section>\n\n      <Section styleOption={2}>\n        <Paragraph title=\"Live View\" content={live} />\n        <Rehoboam />\n        <Paragraph content={<Legend />} />\n      </Section>\n\n      <Section styleOption={3} edgeToEdge={true}>\n        <Paragraph title=\"\" content={todayText} margin={true} />\n        <ErrorBoundary>\n          <Map />\n        </ErrorBoundary>\n      </Section>\n\n      <Section styleOption={4}>\n        <Paragraph title=\"Active Incidents\" content={active} />\n        <TweetsActive />\n        <Paragraph title=\"Major Incidents\" content={major} />\n        <TweetsMajor />\n      </Section>\n\n      <Section styleOption={5} edgeToEdge={true}>\n        <Paragraph title=\"City Areas\" content={areas} margin={true} />\n        <GroupByArea />\n      </Section>\n\n      <Section styleOption={6}>\n        <Paragraph title=\"Past Week\" content={pastWeek} />\n        <Header />\n      </Section>\n\n      <Section styleOption={7} edgeToEdge={true}>\n        <Paragraph\n          title=\"This Year compared to Last Year\"\n          content={history}\n          margin={true}\n        />\n        <History />\n      </Section>\n\n      <Section styleOption={8}>\n        <Sources />\n        <Paragraph title=\"Notes\" content={notes} />\n      </Section>\n    </DataProvider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext, currentInterval } from \"./DataProvider\";\n\nimport { UserContextKeys, UserContext } from \"./UserProvider\";\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsForArea = () => {\n  const { filteredByArea } = useContext(DataContext);\n  const { user } = useContext(UserContext);\n  const filter = user[UserContextKeys.TypeFilter];\n\n  if (!filteredByArea.length) {\n    return null;\n  }\n  const all = currentInterval(filteredByArea).values;\n  const filtered = all.filter(\n    ({ derived: { type } }) => !filter || filter === type\n  );\n\n  return <TweetList tweets={filtered} />;\n}\n","import React from \"react\";\nimport { Paragraph } from \"./Paragraph\";\nimport { Header } from \"./Header\";\nimport { useNeighborhoods } from \"./neighborhoods\";\n\nexport const AreaPageHeader = ({ area }) => {\n  const neighborhoodsMap = useNeighborhoods();\n  const decodedArea = decodeURIComponent(area);\n  const subareas = (\n    <div>\n      {(neighborhoodsMap[decodedArea] || []).map((subarea) => (\n        <div key={subarea}>{subarea}</div>\n      ))}\n    </div>\n  );\n\n  // const [list, setList] = useState([]);\n  // useEffect(() => {\n  //   if (neighborhoodsMap[area]) {\n  //     setList(neighborhoodsMap[area]);\n  //   }\n  // }, [area, neighborhoodsMap]);\n\n  return (\n    <>\n      <Paragraph title={decodedArea} content={subareas} />\n      <Header area={area} />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport { Map } from \"./Map\";\nimport { DataProvider } from \"./DataProvider\";\nimport { TweetsForArea } from \"./TweetsForArea\";\nimport { Paragraph } from \"./Paragraph\";\nimport { Section } from \"./Section\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { Sources } from \"./Sources\";\nimport { AreaPageHeader } from \"./AreaPageHeader\";\nimport paragraphStyles from \"./paragraph.module.scss\";\n\nexport const DispatchArea = ({ area }) => {\n\n  return (\n    <DataProvider filters={{ area }}>\n      <Section styleOption={2}>\n        <Paragraph\n          content={\n            <Link className={paragraphStyles.link} to=\"/\">\n              « main page\n            </Link>\n          }\n        />\n      </Section>\n\n      <Section styleOption={1}>\n        <AreaPageHeader area={area} />\n      </Section>\n\n      <Section styleOption={2} edgeToEdge={true}>\n        <ErrorBoundary>\n          <Map area={area} />\n        </ErrorBoundary>\n      </Section>\n\n      <Section styleOption={1}>\n        <Paragraph title=\"Today's Incidents\" />\n        <TweetsForArea />\n      </Section>\n\n      <Section styleOption={2}>\n        <Sources />\n      </Section>\n    </DataProvider>\n  );\n};\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\nimport { DispatchAll } from \"./dispatch/DispatchAll\";\nimport { DispatchArea } from \"./dispatch/DispatchArea\";\nimport { StatusProvider } from \"./dispatch/StatusContext\";\nimport { UserProvider } from \"./dispatch/UserProvider\";\nimport \"./colors.scss\";\n// import styles from \"./app.module.scss\";\nimport { ThemeProvider } from \"./dispatch/ThemeContext\";\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <ThemeProvider>\n        <StatusProvider>\n          <Router>\n            <UserProvider path=\"/\">\n              <DispatchAll default />\n            </UserProvider>\n            <UserProvider path=\":area\">\n              <DispatchArea path=\"/\" />\n            </UserProvider>\n          </Router>\n        </StatusProvider>\n      </ThemeProvider>\n    </React.StrictMode>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport const register = (config) => {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport const unregister = () => {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./custom.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"rehoboam_app__2vSZA\",\"light\":\"rehoboam_light__rziQr\",\"dusk\":\"rehoboam_dusk__3zUc9\",\"dark\":\"rehoboam_dark__2QkVw\",\"container\":\"rehoboam_container__28M8-\",\"counter\":\"rehoboam_counter__33zQ-\",\"path\":\"rehoboam_path__2oGje\",\"maincircle\":\"rehoboam_maincircle__UPFVE\",\"events\":\"rehoboam_events__24i6B\",\"outer\":\"rehoboam_outer__i-sFc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"tweet_app__1YKqt\",\"light\":\"tweet_light__2q2wS\",\"dusk\":\"tweet_dusk__2D2WU\",\"dark\":\"tweet_dark__1Q5ft\",\"container\":\"tweet_container__2cPfJ\",\"detailed\":\"tweet_detailed__1zw6b\",\"phone\":\"tweet_phone__2hHRD\",\"greyedOut\":\"tweet_greyedOut__187c4\",\"tweet\":\"tweet_tweet__2okc-\",\"active\":\"tweet_active__1wASL\",\"details\":\"tweet_details__165yi\",\"units\":\"tweet_units__2ZVmK\",\"location\":\"tweet_location__26Q8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"section_app__2Vo_9\",\"light\":\"section_light__3Rzwq\",\"dusk\":\"section_dusk__2n8zA\",\"dark\":\"section_dark__3d7sN\",\"section\":\"section_section__1TT8J\",\"content\":\"section_content__32e_z\",\"phone\":\"section_phone__C_IbC\",\"styleDefault\":\"section_styleDefault__1fobi\",\"style1\":\"section_style1__-PHu2\",\"style2\":\"section_style2__3JfYX\",\"style3\":\"section_style3__120EE\",\"style4\":\"section_style4__15b6S\",\"style5\":\"section_style5__1cXrW\",\"style6\":\"section_style6__2Pnph\",\"style7\":\"section_style7__2TUBO\",\"style8\":\"section_style8__2W_h1\",\"styleMap\":\"section_styleMap__2ZHhK\",\"subcontent\":\"section_subcontent__1yzVR\",\"edgeToEdge\":\"section_edgeToEdge__28iHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"history_app__3ezRX\",\"light\":\"history_light__2fQs9\",\"dusk\":\"history_dusk__1n3Kx\",\"dark\":\"history_dark__2VOIx\",\"container\":\"history_container__jp729\",\"svg\":\"history_svg__wHz8f\",\"previous\":\"history_previous__1tjyT\",\"current\":\"history_current__2e2uB\",\"years\":\"history_years__2UEbj\",\"left\":\"history_left__YNLcK\",\"right\":\"history_right___nK7k\",\"axis\":\"history_axis__1LX0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"paragraph_app__SRHrQ\",\"light\":\"paragraph_light__MGZls\",\"dusk\":\"paragraph_dusk__2Qeix\",\"dark\":\"paragraph_dark__20gM1\",\"paragraph\":\"paragraph_paragraph__2KRp8\",\"link\":\"paragraph_link__2D61j\",\"text\":\"paragraph_text__1NbBg\",\"margin\":\"paragraph_margin__uTVtm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"chart_app__NgggY\",\"light\":\"chart_light__26OQU\",\"dusk\":\"chart_dusk__tXZzv\",\"dark\":\"chart_dark__2_Xz6\",\"container\":\"chart_container__3RTag\",\"header\":\"chart_header__3gCPW\",\"svg\":\"chart_svg__pP08z\",\"total\":\"chart_total__qkQSI\",\"title\":\"chart_title__2BYUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"topline_app__oxYOD\",\"light\":\"topline_light__3Wkuy\",\"dusk\":\"topline_dusk__3oZf9\",\"dark\":\"topline_dark__2sg1O\",\"topline\":\"topline_topline__3XNKt\",\"phone\":\"topline_phone__2VHBk\",\"text\":\"topline_text__2_5SM\",\"date\":\"topline_date__2k6ha\",\"total\":\"topline_total__b2Zkr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"tweetdetails_app__2e3dp\",\"light\":\"tweetdetails_light__1bFOl\",\"dusk\":\"tweetdetails_dusk__CdslP\",\"dark\":\"tweetdetails_dark__1vbtk\",\"container\":\"tweetdetails_container__1rcoE\",\"explanation\":\"tweetdetails_explanation__3lEx4\",\"secondary\":\"tweetdetails_secondary__sgHzU\",\"unit\":\"tweetdetails_unit__33Rog\",\"link\":\"tweetdetails_link__23U3X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"map_app__QgyhH\",\"light\":\"map_light__1l7Uw\",\"dusk\":\"map_dusk__1Kp5m\",\"dark\":\"map_dark__3mN3y\",\"container\":\"map_container__1WM_n\",\"phone\":\"map_phone__1XpbO\",\"area\":\"map_area__1ZdwJ\",\"pane\":\"map_pane__g9Le7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"areashape_app__1jcgu\",\"light\":\"areashape_light__2vos_\",\"dusk\":\"areashape_dusk__1spjy\",\"dark\":\"areashape_dark__3xOoz\",\"container\":\"areashape_container__3TA09\",\"phone\":\"areashape_phone__ZKBlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"spark_app__36AlW\",\"light\":\"spark_light__2xEJ2\",\"dusk\":\"spark_dusk__3_z2Z\",\"dark\":\"spark_dark__kLY0-\",\"container\":\"spark_container__20mVH\",\"total\":\"spark_total__2Kxtk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"svg_app__NZ3Nl\",\"light\":\"svg_light__1tyT3\",\"dusk\":\"svg_dusk__yqXl9\",\"dark\":\"svg_dark__mmljC\",\"axis\":\"svg_axis__bET8j\",\"path\":\"svg_path__EmZTS\",\"highlight\":\"svg_highlight__1dzK0\",\"previous\":\"svg_previous__19uFf\",\"current\":\"svg_current__mnSmX\",\"event\":\"svg_event__3Oor8\",\"outer\":\"svg_outer__1Nag9\",\"container\":\"svg_container__2ylni\",\"live\":\"svg_live__2Jj88\",\"now\":\"svg_now__2CbCS\",\"pulse\":\"svg_pulse__2GGpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"themeswitch_app__2HrZq\",\"light\":\"themeswitch_light__3BWCp\",\"dusk\":\"themeswitch_dusk__1o_VU\",\"dark\":\"themeswitch_dark__2wyZC\",\"button\":\"themeswitch_button__EJKnS\",\"selected\":\"themeswitch_selected__3Zb_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"annotations_app__1PGHU\",\"light\":\"annotations_light__3wl8i\",\"dusk\":\"annotations_dusk__1lYhr\",\"dark\":\"annotations_dark__2aqhQ\",\"annotations\":\"annotations_annotations__1BK52\",\"line\":\"annotations_line__I-f5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tweets\":\"tweets_tweets__PhO0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"freshness_app__1pyQO\",\"light\":\"freshness_light__35wVx\",\"dusk\":\"freshness_dusk__7082x\",\"dark\":\"freshness_dark__TBbwG\",\"time\":\"freshness_time__3D6Db\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"legend_app__3eMcH\",\"light\":\"legend_light__1wq_m\",\"dusk\":\"legend_dusk__1H7LY\",\"dark\":\"legend_dark__7TXq5\",\"legend\":\"legend_legend__1pAdz\"};"],"sourceRoot":""}