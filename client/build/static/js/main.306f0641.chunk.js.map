{"version":3,"sources":["dispatch/group.module.scss","dispatch/rehoboam.module.scss","dispatch/Dot.jsx","api.jsx","dispatch/StatusContext.jsx","dispatch/DataProvider.jsx","dispatch/UserProvider.jsx","dispatch/mapOptions.js","dispatch/geojson.js","clientUtils.js","dispatch/Map.jsx","dispatch/ErrorBoundary.jsx","dispatch/AreaShape.jsx","dispatch/SvgDot.jsx","dispatch/Spark.jsx","dispatch/neighborhoods.js","dispatch/GroupByArea.jsx","dispatch/MultiLine.jsx","dispatch/Header.jsx","dispatch/Topline.jsx","dispatch/Rehoboam.jsx","dispatch/Section.jsx","dispatch/Paragraph.jsx","dispatch/Annotations.jsx","dispatch/History.jsx","groupingOptions.js","dispatch/TweetDetails.jsx","dispatch/Tweet.jsx","dispatch/TweetList.jsx","dispatch/TweetsActive.jsx","dispatch/TweetsMajor.jsx","dispatch/DispatchAll.jsx","dispatch/TweetsForArea.jsx","dispatch/AreaPageHeader.jsx","dispatch/DispatchArea.jsx","App.jsx","serviceWorker.js","index.tsx","dispatch/section.module.scss","dispatch/history.module.scss","dispatch/tweet.module.scss","dispatch/paragraph.module.scss","dispatch/chart.module.scss","dispatch/map.module.scss","dispatch/topline.module.scss","dispatch/tweetdetails.module.scss","dispatch/areashape.module.scss","dispatch/spark.module.scss","dispatch/annotations.module.scss","dispatch/tweets.module.scss","dispatch/svg.module.scss","app.module.scss"],"names":["module","exports","Appearance","Dot","coordinates","severity","active","color","opacity","baseRadius","Circle","center","radius","fill","fillOpacity","stroke","weight","console","warn","getStatus","a","getByAPI","getAnnotations","getHistory","getTweetsForArea","area","queryParams","activeOrMajor","minimize","getTweetsForAreaMin","hiRes","getTweetsByArea","getTweetsByType","getTweetsMajor24","getTweetsActive24","queryString","query","list","Object","keys","map","key","encodeURIComponent","join","api","allQueryParams","fetch","headers","Accept","response","json","deepEqual","require","StatusContext","createContext","StatusProvider","children","value","useState","status","setStatus","previousStatus","setPreviousStatus","useEffect","log","delay","checkForUpdates","newStatus","env","document","title","intervalId","setInterval","clearInterval","useStatus","Provider","DataContext","currentInterval","dataset","intervals","DataProvider","filters","initialValue","filteredByArea","filteredByAreaMin","activeOrMajorForArea","activeOrMajorByArea","byTypeForArea","groupedByArea","history","active24","major24","annotations","setValue","useContext","mostRecentId","undefined","setFilteredByArea","setFilteredByAreaMin","setActiveOrMajorForArea","setActiveOrMajorByArea","setByTypeForArea","setGroupedByArea","setHistory","setActive24","setMajor24","setAnnotations","shouldFetch","setShouldFetch","values","length","useTweets","UserContext","UserContextKeys","useUser","user","setUser","setSelection","UserProvider","MapOptions","ProxyLight","url","r","attribution","ProxyDark","CartoDB_DarkMatter","ext","subdomains","CartoDB_DarkMatterNoLabels","CartoDB_Positron","CartoDB_PositronNoLabels","Jawg_Dark","token","Jawg_Light","Mapbox","Stadia_Alidade","Stamen_Toner","Default","NoLabels","byArea","features","prop","forEach","feature","properties","push","nhoodFeaturesByArea","zipCodes","nhoods","featuresForArea","nhood","areas","geojson","areaProp","cityGeojson","city","defaultCentroid","mapBounds","lat","long","centroid","coords","geometry","flat","latExtent","d3","longExtent","intervalExtent","start","end","expandMinutes","expand","extent","offset","queryText","isPhone","window","matchMedia","matches","isActive","derived","isAtLeastSev1","isAtLeastSev2","geojsonStyleBounds","strokeOpacity","geojsonStyleActive","fillColor","Map","tileOptions","typeFilter","selectedTweet","rendered","filter","zoom","defaultZoom","isSelectedDot","id_str","data","flatMap","type","selectedIndex","findIndex","slice","appearanceFn","d","className","classnames","styles","container","phone","minZoom","maxZoom","maxBounds","maxBoundsViscosity","zoomControl","TileLayer","GeoJSON","style","CRA_NAM","appearance","ErrorBoundary","props","state","hasError","error","errorInfo","this","React","Component","geojsonStyle","AreaShape","attributionControl","dragging","keyboard","SvgDot","sev1","sev2","svgStyles","live","width","height","cx","size","cy","Spark","showTotal","useCumulative","showPrevious","svgData","setSvgData","nowDot","setNowDot","svgWidth","svgHeight","margin","top","right","bottom","left","accessor","cumulative","xExtent","yExtent","bins","xScale","domain","range","yScale","line","curve","tension","x","x0","y","newSvgData","path","i","reverse","lastBin","total","lastIndex","sparkStyles","transform","current","now","useNeighborhoods","setMap","newMap","sort","GroupByArea","totalsMap","setTotalsMap","setData","neighborhoodsMap","sortedData","areaA","intervalsA","areaB","intervalsB","activeA","sev1A","sev2A","activeB","sev1B","sev2B","totalA","totalB","itemContainer","to","vpadding","fullWidth","item","major","text","v","spark","MultiLine","showHeader","xAxisRef","useRef","yAxisRef","dateFormatter","xAxis","tickFormat","tickSize","scale","ticks","every","call","yAxis","chartStyles","header","chart","axis","ref","Header","Topline","topline","Rehoboam","svgPath","setSvgPath","circles","setCircles","setTotal","axisRef","binsHiRes","maxLength","radialData","timestamp","fraction","Math","PI","toRadial","radialGen","angleScale","tickValues","h","axisRadialInner","activeOrMajorValues","newCircles","theta","sin","cos","counter","svg","maincircle","events","eventcircle","Section","styleOption","edgeToEdge","style1","style2","styleMap","styleDefault","section","content","subcontent","Paragraph","h1","paragraph","textureCurrent","textures","lines","lighter","orientation","texturePrevious","Annotations","rectWidth","scales","currentStart","clipPaths","calloutsRef","regionsRef","regions","setRegions","calloutFn","label","isEnd","sideX","sideY","callout","note","subject","nx","ny","dx","dy","calloutsSvgData","Boolean","d3annotation","d3annotationCalloutCircle","newRegions","isCurrent","texture","id","previous","annotation","clipPath","closedPath","first","extraBottom","extraTop","History","setScales","setCurrentStart","paths","setPaths","setClipPaths","yearWidth","maxBarWidth","annotationRectWidth","svgRef","intervalCurrent","intervalPrevious","binsCurrent","binsLowRes","binsPrevious","timeExtent","b","lineCurrent","linePrevious","pathCurrent","pathPrevious","clipLineCurrent","clipLinePrevious","pixelOffset","invert","clipPathCurrent","clipPathPrevious","historyStyles","years","AreaAccessors","ZipCode","zip","Area","neighborhoodGroup","AreaSecondary","neighborhood","TweetDetails","tweet","address","units","unitsList","split","unitsStr","format","n","Number","parseFloat","toFixed","latlong","unit","TweetModes","Tweet","mode","isGreyedOut","isDetailed","time","timezone","detailed","greyedOut","onClick","newSelectedTweet","details","location","description","TweetList","tweets","selected","t","TweetsActive","TweetsMajor","formatter","DispatchAll","lastUpdated","Date","intro","sources","href","notes","TweetsForArea","filtered","AreaPageHeader","subareas","subarea","DispatchArea","paragraphStyles","link","App","app","default","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.306f0641.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"group_container___U6Y6\",\"itemContainer\":\"group_itemContainer__91pkk\",\"vpadding\":\"group_vpadding__3db4T\",\"fullWidth\":\"group_fullWidth__33LFP\",\"right\":\"group_right__2euLw\",\"item\":\"group_item__1Q6Q7\",\"text\":\"group_text__1JC9o\",\"list\":\"group_list__c2KEa\",\"major\":\"group_major__2byd-\",\"active\":\"group_active__2THyL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"rehoboam_container__28M8-\",\"counter\":\"rehoboam_counter__33zQ-\",\"path\":\"rehoboam_path__2oGje\",\"maincircle\":\"rehoboam_maincircle__UPFVE\",\"events\":\"rehoboam_events__24i6B\",\"eventcircle\":\"rehoboam_eventcircle__2SvTX\",\"major\":\"rehoboam_major__1xPRx\",\"active\":\"rehoboam_active__Tv3Oe\"};","import React from \"react\";\nimport { Circle } from \"react-leaflet\";\n\nexport const Appearance = {\n  Normal: 0,\n  Dimmed: -1,\n  Highlighted: 1,\n};\n\nexport const Dot = ({ coordinates, severity = 0, active = false }) => {\n  const color = active ? \"red\" : \"white\";\n  let opacity = 0.4;\n  if (severity >= 1) {\n    opacity = 0.7;\n  }\n  if (active) {\n    opacity = 0.9;\n  }\n  const baseRadius = active ? 250 : 150;\n\n  if (!coordinates[0]) {\n    console.warn(`Dot: coordinates = ${coordinates}`);\n    return null;\n  }\n\n  return (\n    <>\n      <Circle\n        center={coordinates}\n        radius={baseRadius}\n        color={color}\n        fill={true}\n        fillOpacity={opacity}\n        stroke={false}\n      ></Circle>\n      {severity >= 1 && (\n        <Circle\n          center={coordinates}\n          radius={baseRadius + 150}\n          weight={2}\n          color={color}\n          opacity={opacity}\n          fill={false}\n        ></Circle>\n      )}\n      {severity >= 2 && (\n        <Circle\n          center={coordinates}\n          radius={baseRadius + 300}\n          weight={2}\n          color={color}\n          opacity={opacity}\n          fill={false}\n        ></Circle>\n      )}\n    </>\n  );\n};\n","export async function getEnv() {\n  return getByAPI(\"env\");\n}\n\nexport async function getStatus() {\n  return getByAPI(`dispatch/status`);\n}\n\nexport async function getAnnotations() {\n  return getByAPI(`dispatch/history/annotations`);\n}\n\nexport async function getHistory() {\n  return getByAPI(`dispatch/history`);\n}\n\nexport async function getTweetsForArea(\n  area,\n  queryParams = { activeOrMajor: false, minimize: false }\n) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsForAreaMin(\n  area,\n  queryParams = { activeOrMajor: false, minimize: true, hiRes: true }\n) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsByArea(queryParams = { activeOrMajor: false }) {\n  return getByAPI(`dispatch/tweets/byArea`, queryParams);\n}\n\nexport async function getTweetsByType(area = \"seattle\") {\n  return getByAPI(`dispatch/tweets/byType/${area}`, { minimize: false });\n}\n\nexport async function getTweetsMajor24() {\n  return getByAPI(\"dispatch/tweets/major24\", { minimize: false });\n}\n\nexport async function getTweetsActive24() {\n  return getByAPI(\"dispatch/tweets/active24\", { minimize: false });\n}\n\nexport async function getTweetsStatic() {\n  return getByAPI(\"dispatch/static\");\n}\n\nexport async function getTweetsSeattleGov() {\n  return getByAPI(\"dispatch/seattle-gov\");\n}\n\nconst queryString = (query = {}) => {\n  const list = Object.keys(query).map(\n    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(query[key])}`\n  );\n  return list.join(\"&\");\n};\n\nasync function getByAPI(api = \"\", queryParams = {}) {\n  const allQueryParams = {\n    minimize: true,\n    ...queryParams,\n  };\n  const query = queryString(allQueryParams);\n  const response = await fetch(`/api/${api}?${query}`, {\n    // TODO - use axios?\n    headers: { Accept: \"application-json\" },\n  });\n\n  return response.json();\n}\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { getStatus } from \"../api\";\nconst deepEqual = require(\"fast-deep-equal/es6/react\");\n\nexport const StatusContext = createContext();\n\nconst useStatus = () => {\n  const [status, setStatus] = useState({});\n  const [previousStatus, setPreviousStatus] = useState({});\n\n  useEffect(() => {\n    const delay = 60 * 1000;\n\n    console.log(\n      `🟥 useStatus/starting checker @ every ${delay / 1000} seconds`\n    );\n    const checkForUpdates = async () => {\n      const newStatus = await getStatus();\n      // console.log(\n      //   `useStatus(${intervalId})/current status (next check in ${\n      //     delay / 1000\n      //   } sec)`,\n      //   newStatus\n      // );\n\n      if (!deepEqual(status, newStatus)) {\n        console.log(\"useStatus/setting new status:\", newStatus);\n        setPreviousStatus(status);\n        setStatus(newStatus);\n      }\n\n      if (status.env === \"development\") {\n        document.title = \"KSEA.live (dev)\";\n      }\n    };\n\n    checkForUpdates();\n    const intervalId = setInterval(checkForUpdates, delay);\n    return () => clearInterval(intervalId);\n  }, [status]);\n\n  return { status, previousStatus };\n};\n\nexport const StatusProvider = ({ children }) => {\n  const value = useStatus();\n  return (\n    <StatusContext.Provider value={value}>{children}</StatusContext.Provider>\n  );\n};\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\nimport {\n  getTweetsForArea,\n  getTweetsByArea,\n  getTweetsByType,\n  getHistory,\n  getAnnotations,\n  getTweetsActive24,\n  getTweetsMajor24,\n  getTweetsForAreaMin,\n} from \"../api\";\n\nimport { StatusContext } from \"./StatusContext\";\nconst deepEqual = require(\"fast-deep-equal/es6/react\");\n\nexport const DataContext = createContext();\n\nexport const currentInterval = (dataset) => dataset[0].intervals[0];\nexport const previousInterval = (dataset) => dataset[0].intervals[1];\n\nconst useTweets = (filters = {}) => {\n  const initialValue = {\n    filteredByArea: [],\n    filteredByAreaMin: [],\n    activeOrMajorForArea: [],\n    activeOrMajorByArea: [],\n    byTypeForArea: [],\n    groupedByArea: [],\n    history: [],\n    active24: [],\n    major24: [],\n    annotations: [],\n    status: {},\n  };\n  const [value, setValue] = useState(initialValue);\n  const { status, previousStatus } = useContext(StatusContext);\n  const mostRecentId = previousStatus.mostRecentId\n    ? status.mostRecentId\n    : undefined;\n\n  if (mostRecentId) {\n    console.log(`useTweets/mostRecentId: ${mostRecentId}`);\n  }\n\n  const [filteredByArea, setFilteredByArea] = useState([]);\n  const [filteredByAreaMin, setFilteredByAreaMin] = useState([]);\n  const [activeOrMajorForArea, setActiveOrMajorForArea] = useState([]);\n  const [activeOrMajorByArea, setActiveOrMajorByArea] = useState([]);\n  const [byTypeForArea, setByTypeForArea] = useState([]);\n  const [groupedByArea, setGroupedByArea] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [active24, setActive24] = useState([]);\n  const [major24, setMajor24] = useState([]);\n  const [annotations, setAnnotations] = useState([]);\n\n  const [shouldFetch, setShouldFetch] = useState(true);\n\n  useEffect(() => {\n    if (!deepEqual(status, previousStatus)) {\n      setShouldFetch(true);\n    }\n  }, [status, previousStatus]);\n\n  useEffect(() => {\n    if (!shouldFetch) {\n      console.log(\"PROVIDER/not fetching\");\n      return;\n    }\n    console.log(\"🟢 PROVIDER/fetching all data\");\n    setShouldFetch(false);\n\n    const area = filters.area || \"seattle\";\n\n    console.log(\"PROVIDER/filters.area=\", area);\n    if (area === \"seattle\") {\n      (async () => {\n        setFilteredByAreaMin(await getTweetsForAreaMin(area));\n      })();\n    } else {\n      (async () => {\n        setFilteredByArea(await getTweetsForArea(area));\n      })();\n    }\n\n    (async () => {\n      setActiveOrMajorForArea(\n        await getTweetsForArea(area, { activeOrMajor: true, minimize: false })\n      );\n    })();\n\n    (async () => {\n      const response = await getTweetsActive24();\n      setActive24(response[0].intervals[0].values);\n    })();\n\n    (async () => {\n      const response = await getTweetsMajor24();\n      setMajor24(response[0].intervals[0].values);\n    })();\n\n    (async () => {\n      setByTypeForArea(await getTweetsByType(area));\n    })();\n\n    (async () => {\n      setGroupedByArea(await getTweetsByArea());\n    })();\n\n    (async () => {\n      setActiveOrMajorByArea(\n        await getTweetsByArea({ activeOrMajor: true, minimize: false })\n      );\n    })();\n\n    (async () => {\n      setAnnotations(await getAnnotations());\n    })();\n\n    if (!history.length) {\n      (async () => {\n        setHistory(await getHistory(area));\n      })();\n    }\n  }, [filters.area, history.length, mostRecentId, shouldFetch]);\n\n  useEffect(() => {\n    setValue({\n      filteredByArea,\n      filteredByAreaMin,\n      byTypeForArea,\n      groupedByArea,\n      history,\n      annotations,\n      active24,\n      major24,\n      activeOrMajorForArea,\n      activeOrMajorByArea,\n      status,\n    });\n  }, [\n    active24,\n    activeOrMajorByArea,\n    activeOrMajorForArea,\n    annotations,\n    byTypeForArea,\n    filteredByArea,\n    filteredByAreaMin,\n    groupedByArea,\n    history,\n    major24,\n    status,\n  ]);\n\n  return value;\n};\n\nexport const DataProvider = ({ filters, children }) => {\n  const value = useTweets(filters);\n  return <DataContext.Provider value={value}>{children}</DataContext.Provider>;\n};\n","import React, { useState, createContext, useEffect } from \"react\";\n\nexport const UserContext = createContext();\n\nexport const UserContextKeys = {\n  SelectedTweet: \"SelectedTweet\",\n  TypeFilter: \"TypeFilter\",\n};\n\nconst useUser = () => {\n  const [user, setUser] = useState({});\n\n  const setSelection = (key, value) => {\n    console.log(`USER: ${key} -->`, value);\n    setUser({ ...user, [key]: value });\n  };\n\n  useEffect(()=>{console.log('USER/useEffect')},[]);\n\n  return { user, setSelection };\n};\n\nexport const UserProvider = ({ children }) => {\n  return (\n    <UserContext.Provider value={useUser()}>{children}</UserContext.Provider>\n  );\n};\n","export const MapOptions = {\n  ProxyLight: {\n    url: \"/api/dispatch/maps/{s}/{x}/{y}/{z}/{r}/light\",\n    r: \"@2x\",\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n  },\n  ProxyDark: {\n    url: \"/api/dispatch/maps/{s}/{x}/{y}/{z}/{r}/dark\",\n    r: \"@2x\",\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n  },\n  CartoDB_DarkMatter: {\n    url: \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n  },\n  CartoDB_DarkMatterNoLabels: {\n    url: \"https://{s}.basemaps.cartocdn.com/dark_nolabels/{z}/{x}/{y}{r}.png\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n  },\n  CartoDB_Positron: {\n    subdomains: \"abcd\",\n    url: \"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\",\n    ext: \"png\",\n    r: \"@2x\",\n\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n  },\n  CartoDB_PositronNoLabels: {\n    subdomains: \"abcd\",\n    url: \"https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png\",\n    ext: \"png\",\n    r: \"@2x\",\n\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n  },\n  Jawg_Dark: {\n    url:\n      \"https://{s}.tile.jawg.io/jawg-dark/{z}/{x}/{y}{r}.{ext}?access-token={token}\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    token: \"nMsnktvLJ03hHw3Bk4ehaEaNPGKjBE2pLhYTEcMdFEu65cNh4nMfXhGCdEwmhD7H\", // https://www.jawg.io/lab/access-tokens\n  },\n  Jawg_Light: {\n    url:\n      \"https://{s}.tile.jawg.io/jawg-light/{z}/{x}/{y}{r}.{ext}?access-token={token}\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    token: \"nMsnktvLJ03hHw3Bk4ehaEaNPGKjBE2pLhYTEcMdFEu65cNh4nMfXhGCdEwmhD7H\", // https://www.jawg.io/lab/access-tokens\n  },\n  Mapbox: {\n    // accessToken: \"pk.eyJ1IjoiYW5hcnNleWYiLCJhIjoiY2thZXlra3llMGF4MDJ4cXYzY2ZkamVkdyJ9.K8CENC0jz2D0O6ziL_jnNg\"\n  },\n  Stadia_Alidade: {\n    url:\n      \"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.{ext}\",\n    ext: \"png\",\n    r: \"@2x\",\n    attribution:\n      '&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n  },\n  Stamen_Toner: {\n    url: \"https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}{r}.{ext}\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      'Tiles by <a href=\"http://stamen.com\">Stamen</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OSM</a>',\n  },\n};\n\n// MapOptions.Default = MapOptions.Jawg_Dark;\n// MapOptions.NoLabels = MapOptions.Jawg_Dark;\nMapOptions.Default = MapOptions.ProxyDark;\nMapOptions.NoLabels = MapOptions.Default;\n","import * as d3 from \"d3\";\nimport zipCodes from \"./zip-codes.json\";\n// import nhoods from \"./nhoods.json\";\nimport nhoods from \"./2016_seattle_cra.json\";\nimport city from \"./2016_seattle_city.json\";\n\nconst nhoodProp = \"NEIGHBO\"; // TODO - import from server/groupby.js\nconst zipcodeProp = \"GEOID10\";\n\nconst byArea = (features, prop) => {\n  const map = {};\n  features.forEach((feature) => {\n    const key = feature.properties[prop];\n    const list = map[key] || [];\n    list.push(feature);\n    map[key] = list;\n  });\n  return map;\n};\n\nconst zipcodeFeaturesByArea = byArea(zipCodes.features, zipcodeProp);\nconst nhoodFeaturesByArea = byArea(nhoods.features, nhoodProp);\n\nconst featuresForZip = (zip) => zipcodeFeaturesByArea[zip];\nconst featuresForNhood = (nhood) => nhoodFeaturesByArea[nhood];\n\nexport const featuresForArea = featuresForNhood;\n\nexport const areas = {\n  geojson: nhoods,\n  areaProp: nhoodProp,\n};\n\nexport const cityGeojson = city;\n\nconst lat = 47.61485, long = -122.32838;\nconst defaultCentroid = [lat, long]; // approx. centroid of cityGeojson\n\nexport const mapBounds = [\n  [lat + 0.2, long - 0.3],\n  [lat - 0.2, long + 0.3],\n];\n\nexport const centroid = (features) => {\n  if (!features.length) {\n    return defaultCentroid;\n  }\n  \n  let coords = features\n    .map(({ geometry: { coordinates } }) => coordinates)\n    .flat(2);\n  const latExtent = d3.extent(coords, ([_, lat]) => lat);\n  const longExtent = d3.extent(coords, ([long, _]) => long);\n  return [d3.mean(latExtent), d3.mean(longExtent)];\n};\n","import * as d3 from \"d3\";\nimport { tz as timezone } from \"moment-timezone\";\n\nexport const intervalExtent = ({ start, end }, expandMinutes = 0) =>\n  expand([start, end], expandMinutes);\n\n// move to server/histogram.js\nexport const expand = (extent, expandMinutes = 0) => [\n  d3.timeMinute.offset(extent[0], -expandMinutes),\n  d3.timeMinute.offset(extent[1], expandMinutes),\n];\n\n// TODO - coordinate with section.module.scss, or find a way to use vars\n\nconst maxWidthPhone = 500;\nconst queryText = `only screen and (max-device-width: ${maxWidthPhone}px)`;\n\nexport const isPhone = () =>\n  window ? !!window.matchMedia(queryText).matches : true;\n\n// see also fileUtils.js\nexport const toPacificStr = (timestamp) =>\n  timezone(timestamp, \"America/Vancouver\").format(\"h:mma\");\n\nexport const isActive = ({ derived: { active } }) => active;\nexport const isAtLeastSev1 = ({ derived: { severity } }) => severity >= 1;\nexport const isAtLeastSev2 = ({ derived: { severity } }) => severity >= 2;\n\nexport const isExactlySev1 = ({ derived: { severity } }) => severity === 1;\nexport const isExactlySev2 = ({ derived: { severity } }) => severity === 2;\n","import React, { useContext } from \"react\";\nimport { Map as LeafletMap, TileLayer, GeoJSON } from \"react-leaflet\";\nimport { Dot, Appearance } from \"./Dot\";\nimport { DataContext } from \"./DataProvider\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\nimport { MapOptions } from \"./mapOptions\";\nimport { centroid, areas, cityGeojson, mapBounds } from \"./geojson\";\nimport classnames from \"classnames\";\nimport \"./leaflet.scss\";\nimport styles from \"./map.module.scss\";\nimport { isPhone } from \"../clientUtils\";\n\nconst minZoom = 10,\n  maxZoom = 13,\n  defaultZoom = 11;\n\nconst activeColor = \"dodgerblue\";\nconst geojsonStyleBounds = {\n  color: \"#1e90ff66\", // dodgerblue with alpha\n  fillOpacity: 0,\n  strokeOpacity: 0.5,\n  weight: 4,\n};\nconst geojsonStyleActive = {\n  color: activeColor,\n  fillColor: activeColor,\n  fillOpacity: 0.15,\n  weight: 2,\n};\n\nexport const Map = ({ area, tileOptions = MapOptions.Default }) => {\n  // TODO - no need for types, so don't use byTypeForArea\n  const { byTypeForArea } = useContext(DataContext);\n  const { user } = useContext(UserContext);\n\n  if (!byTypeForArea.length) {\n    return null;\n  }\n\n  const { geojson, areaProp } = areas;\n\n  const typeFilter = user[UserContextKeys.TypeFilter];\n  const selectedTweet = user[UserContextKeys.SelectedTweet];\n\n  const renderFilter = ({ properties }) =>\n    area && properties[areaProp] === area;\n\n  const { features } = geojson;\n  const rendered = features.filter(renderFilter);\n\n  let zoom = defaultZoom;\n  if (area) {\n    zoom = defaultZoom + 1;\n  }\n  if (selectedTweet) {\n    zoom = maxZoom;\n  }\n\n  const center = selectedTweet\n    ? [selectedTweet.derived.lat, selectedTweet.derived.long]\n    : area\n    ? centroid(rendered)\n    : centroid(cityGeojson.features);\n\n  const mapper = ({ intervals }) =>\n    intervals[0].values.map(\n      ({ id_str, derived: { lat, long, type, color, active, severity } }) => ({\n        id_str,\n        lat,\n        long,\n        type,\n        color, // TODO - do not use\n        active,\n        severity,\n      })\n    );\n\n  const isSelectedDot = ({ id_str }) => selectedTweet.id_str === id_str;\n\n  let data = byTypeForArea\n    .flatMap(mapper)\n    .filter(({ type }) => !typeFilter || typeFilter === type);\n\n  if (selectedTweet) {\n    // Render selected dot last, so it appears on top\n    const selectedIndex = data.findIndex(isSelectedDot);\n\n    data =\n      selectedIndex === -1\n        ? []\n        : [\n            ...data.slice(0, selectedIndex),\n            ...data.slice(selectedIndex + 1),\n            data[selectedIndex],\n          ];\n  }\n\n  const appearanceFn = (d) => {\n    return selectedTweet\n      ? isSelectedDot(d)\n        ? Appearance.Highlighted\n        : Appearance.Dimmed\n      : Appearance.Normal;\n  };\n\n  console.log(\n    `MAP/render area=${area}, zoom=${zoom}, selected:${\n      (selectedTweet || {}).id_str\n    }, features:${rendered.length}/${features.length}, dots:${data.length}, geo:${rendered.length}, center:${center}`\n  );\n  const city = cityGeojson.features[0];\n\n  return (\n    <LeafletMap\n      className={classnames(styles.container, {\n        [styles.area]: area,\n        [styles.phone]: isPhone(),\n      })}\n      center={center}\n      zoom={zoom}\n      minZoom={minZoom}\n      maxZoom={maxZoom}\n      maxBounds={mapBounds}\n      maxBoundsViscosity={0.6}\n      zoomControl={false}\n    >\n      <TileLayer {...tileOptions} />\n      {!area && <GeoJSON data={city} style={geojsonStyleBounds} />}\n      {rendered.map((feature) => (\n        <GeoJSON key={feature.properties.CRA_NAM} data={feature} style={geojsonStyleActive} />\n      ))}\n      {data.map((d) => (\n        <Dot // TODO - group under a single container?\n          key={d.id_str}\n          coordinates={[d.lat, d.long]}\n          severity={d.severity}\n          appearance={appearanceFn(d)}\n          active={d.active}\n          // color={d.color}\n        ></Dot>\n      ))}\n    </LeafletMap>\n  );\n};\n","import React from \"react\";\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"ErrorBoundary\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n","import React from \"react\";\nimport { Map as LeafletMap, TileLayer, GeoJSON } from \"react-leaflet\";\nimport { featuresForArea, centroid } from \"./geojson\";\nimport { MapOptions } from \"./mapOptions\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { isPhone } from \"../clientUtils\";\nimport classnames from \"classnames\";\nimport styles from \"./areashape.module.scss\";\n\nconst geojsonStyle = {\n  color: \"dodgerblue\",\n  fillColor: \"dodgerblue\",\n  fillOpacity: 0.15,\n  weight: 1,\n};\n\nexport const AreaShape = ({ area }) => {\n  const features = featuresForArea(area);\n  if (!features || !features.length) {\n    console.warn(\"AreaShape/no features for area\", area);\n    return null;\n  }\n\n  const center = centroid(features);\n  const zoom = 10;\n  const tileOptions = MapOptions.NoLabels;\n\n  return (\n    <ErrorBoundary>\n      <LeafletMap\n        className={classnames(styles.container, { [styles.phone]: isPhone() })}\n        center={center}\n        zoom={zoom}\n        minZoom={zoom}\n        maxZoom={zoom}\n        zoomControl={false}\n        attributionControl={false}\n        dragging={false}\n        keyboard={false}\n      >\n        <TileLayer {...tileOptions} />\n        <GeoJSON data={features} style={geojsonStyle} />\n      </LeafletMap>\n    </ErrorBoundary>\n  );\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport svgStyles from \"./svg.module.scss\";\n\nexport const SvgDot = ({ radius = 3, active = false, sev1 = false, sev2 = false }) => {\n  const color = active ? \"red\" : \"white\";\n  const size = 18,\n    sev1Radius = 5,\n    sev2Radius = 8;\n\n  return (\n    <svg\n      className={classnames({ [svgStyles.live]: active })}\n      width={size}\n      height={size}\n    >\n      <circle cx={size / 2} cy={size / 2} r={radius} fill={color} />\n      {(sev1 || sev2) && (\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={sev1Radius}\n          fill=\"none\"\n          stroke={color}\n        />\n      )}\n      {sev2 && (\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={sev2Radius}\n          fill=\"none\"\n          stroke={color}\n        />\n      )}\n    </svg>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport * as d3 from \"d3\";\nimport sparkStyles from \"./spark.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\nimport { intervalExtent, isPhone } from \"../clientUtils\";\n\nexport const Spark = ({\n  intervals = [],\n  title,\n  showTotal,\n  useCumulative,\n  showPrevious,\n}) => {\n  const [svgData, setSvgData] = useState([]);\n  const [nowDot, setNowDot] = useState(null);\n\n  const radius = 3;\n  const svgWidth = isPhone() ? 90 : 120;\n  const svgHeight = 0.2 * svgWidth,\n    margin = {\n      top: radius + 1,\n      right: radius + 1,\n      bottom: radius + 1,\n      left: radius + 1,\n    },\n    width = svgWidth - margin.left - margin.right,\n    height = svgHeight - margin.bottom - margin.top;\n\n  useEffect(() => {\n    // TODO - no need for useEffect?\n    if (!intervals.length) {\n      return;\n    }\n\n    const data = showPrevious ? intervals : intervals.slice(0, 1);\n\n    const accessor = ({ length, cumulative }) =>\n      useCumulative ? cumulative : length;\n\n    const xExtent = intervalExtent(data[0]);\n\n    const yExtent = [\n      0,\n      d3.max([1.0, ...data.flatMap(({ bins }) => bins).map(accessor)]),\n    ];\n\n    const xScale = d3.scaleTime().domain(xExtent).range([0, width]);\n    const yScale = d3.scaleLinear().domain(yExtent).range([height, 0]);\n\n    const line = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(d.x0))\n      .y((d) => yScale(accessor(d)));\n\n    const paths = data.map((d) => d.bins).map(line);\n\n    let newSvgData = paths.map((path, i) => ({ path, key: i })).reverse(); // render highlight after all others\n\n    setSvgData(newSvgData);\n\n    const bins = data[0].bins;\n    if (bins.length) {\n      const lastBin = bins[bins.length - 1];\n      setNowDot({\n        cx: xScale(lastBin.x0),\n        cy: yScale(accessor(lastBin)),\n        r: radius,\n      });\n    }\n  }, [width, height, intervals, showPrevious, useCumulative]);\n\n  if (!intervals.length) {\n    return null;\n  }\n\n  const total = intervals[0].total;\n  const lastIndex = svgData.length - 1;\n\n  return (\n    <div className={sparkStyles.container}>\n      <svg width={svgWidth} height={svgHeight}>\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <g>\n            {svgData.map(({path,key}, i) => (\n              <path\n              key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: i === lastIndex,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          {nowDot && (\n            <g className={svgStyles.now}>\n              <circle {...nowDot} />\n            </g>\n          )}\n        </g>\n      </svg>\n      {showTotal && <span className={sparkStyles.total}>{total}</span>}\n    </div>\n  );\n};\n","import { useState, useEffect, useContext } from 'react';\nimport { DataContext } from './DataProvider';\nimport { featuresForArea } from \"./geojson\";\n\nexport const useNeighborhoods = () => {\n  const [map, setMap] = useState({});\n\n  const { groupedByArea } = useContext(DataContext);\n\n  useEffect(() => {\n    const newMap = {};\n    groupedByArea\n      .map(({ key }) => key)\n      .forEach((key) => {\n        newMap[key] = featuresForArea(key)\n          .map(({ properties: { CRA_NAM } }) => CRA_NAM)\n          .sort();\n      });\n\n      setMap(newMap);\n  }, [groupedByArea]);\n\n  return map;\n}","import React, { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"@reach/router\";\nimport { DataContext } from \"./DataProvider\";\nimport { AreaShape } from \"./AreaShape\";\n\nimport { isActive, isAtLeastSev2, isAtLeastSev1 } from \"../clientUtils\";\nimport { SvgDot } from \"./SvgDot\";\nimport { Spark } from \"./Spark\";\nimport classnames from \"classnames\";\nimport styles from \"./group.module.scss\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { useNeighborhoods } from \"./neighborhoods\";\n\nexport const GroupByArea = () => {\n  const { groupedByArea, activeOrMajorByArea } = useContext(DataContext);\n  const [totalsMap, setTotalsMap] = useState({});\n  const [data, setData] = useState([]);\n\n  const neighborhoodsMap = useNeighborhoods();\n\n  useEffect(() => {\n    if (!activeOrMajorByArea.length) {\n      return;\n    }\n\n    const map = {};\n    activeOrMajorByArea.forEach(({ key: area, intervals }) => {\n      const values = intervals[0].values;\n      if (values.length) {\n        map[area] = {\n          active: values.filter(isActive).length,\n          sev1: values.filter(isAtLeastSev1).length,\n          sev2: values.filter(isAtLeastSev2).length,\n        };\n      }\n    });\n    setTotalsMap(map);\n  }, [activeOrMajorByArea]);\n\n  useEffect(() => {\n    if (!groupedByArea.length || !totalsMap) {\n      return;\n    }\n\n    const sortByImportance = (\n      { key: areaA, intervals: intervalsA },\n      { key: areaB, intervals: intervalsB }\n    ) => {\n      const { active: activeA, sev1: sev1A, sev2: sev2A } = totalsMap[\n        areaA\n      ] || { active: 0, sev1: 0, sev2: 0 };\n      const { active: activeB, sev1: sev1B, sev2: sev2B } = totalsMap[\n        areaB\n      ] || { active: 0, sev1: 0, sev2: 0 };\n      const totalA = intervalsA[0].total;\n      const totalB = intervalsB[0].total;\n\n      return (\n        activeB - activeA || sev2B - sev2A || sev1B - sev1A || totalB - totalA\n      );\n    };\n    const sortedData = groupedByArea.sort(sortByImportance);\n    setData(sortedData);\n\n    console.log(\n      \"GROUP/sorted\",\n      sortedData.map(({ key }) => key)\n    );\n    console.log(\"GROUP/map\", totalsMap);\n  }, [groupedByArea, totalsMap]);\n\n  if (!data.length) {\n    return null;\n  }\n\n  return (\n    <div className={styles.container}>\n      {data.map(({ key: area, intervals }) => (\n        <div key={area} className={styles.itemContainer}>\n          <Link to={`${encodeURIComponent(area)}`}>\n            <div className={styles.vpadding}>\n              <div className={styles.fullWidth}>\n                <div className={styles.item}>&nbsp;</div>\n                <div className={classnames(styles.item, styles.right)}>\n                  {totalsMap[area] && (\n                    <div className={styles.major}>\n                      {totalsMap[area].active > 0 && (\n                        <span className={styles.active}>\n                          <SvgDot active={true} />\n                          <span>{totalsMap[area].active} active </span>\n                        </span>\n                      )}\n                      {totalsMap[area].sev2 > 0 && (\n                        <>\n                          <SvgDot sev2={true} />\n                          <span> {totalsMap[area].sev2} major </span>\n                        </>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className={classnames(styles.item, styles.text)}>\n                <div>{area}</div>\n                {neighborhoodsMap[area] && (\n                  <div className={styles.list}>\n                    {neighborhoodsMap[area].map((v) => (\n                      <div key={v}>• {v}</div>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              <div className={classnames(styles.item, styles.right)}>\n                <AreaShape area={area} />\n                <ErrorBoundary>\n                  <Spark\n                    className={styles.spark}\n                    intervals={intervals}\n                    useCumulative={true}\n                    showTotal={true}\n                  />\n                </ErrorBoundary>\n              </div>\n            </div>\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport * as d3 from \"d3\";\nimport chartStyles from \"./chart.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\nimport { intervalExtent, isPhone } from \"../clientUtils\";\n\nexport const MultiLine = ({\n  intervals = [],\n  title,\n  showHeader = false,\n  useCumulative,\n}) => {\n  const [svgData, setSvgData] = useState([]);\n  const [nowDot, setNowDot] = useState(null);\n\n  const svgWidth = isPhone() ? 350 : 500;\n  const svgHeight = 0.3 * svgWidth,\n    margin = { top: 20, right: 20, bottom: 20, left: 20 },\n    width = svgWidth - margin.left - margin.right,\n    height = svgHeight - margin.bottom - margin.top;\n\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n\n  useEffect(() => {\n    // TODO - no need for useEffect?\n    if (!intervals.length) {\n      return;\n    }\n\n    const accessor = ({ length, cumulative }) =>\n      useCumulative ? cumulative : length;\n\n    const xExtent = intervalExtent(intervals[0]);\n\n    const yExtent = [\n      0,\n      d3.max([1.0, ...intervals.flatMap(({ bins }) => bins).map(accessor)]),\n    ];\n\n    const dateFormatter = d3.timeFormat(\"%-I%p\");\n    // https://github.com/d3/d3-time-format#locale_format\n\n    const xScale = d3.scaleTime().domain(xExtent).range([0, width]);\n    const xAxis = d3\n      .axisBottom()\n      .tickFormat(dateFormatter)\n      .tickSize(3)\n      .scale(xScale)\n      .ticks(d3.timeHour.every(12));\n    d3.select(xAxisRef.current).call(xAxis);\n\n    const yScale = d3.scaleLinear().domain(yExtent).range([height, 0]);\n    const yAxis = d3.axisLeft().scale(yScale).ticks(2);\n    d3.select(yAxisRef.current).call(yAxis);\n\n    const line = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(d.x0))\n      .y((d) => yScale(accessor(d)));\n\n    const paths = intervals.map((d) => d.bins).map(line);\n\n    let newSvgData = paths.map((path, i) => ({ path, key: i })).reverse(); // render highlight after all others\n\n    setSvgData(newSvgData);\n\n    const bins = intervals[0].bins;\n    if (bins.length) {\n      const lastBin = bins[bins.length - 1];\n      setNowDot({\n        cx: xScale(lastBin.x0),\n        cy: yScale(accessor(lastBin)),\n        r: 3,\n      });\n    }\n  }, [height, intervals, useCumulative, width]);\n\n  if (!intervals.length) {\n    return null;\n  }\n\n  const total = intervals[0].total;\n  const lastIndex = svgData.length - 1;\n\n  return (\n    <div className={chartStyles.container}>\n      {showHeader && (\n        <div className={chartStyles.header}>\n          {title && <div className={chartStyles.title}>{title}</div>}\n          {typeof total === \"number\" && (\n            <div className={chartStyles.total}>{total}</div>\n          )}\n        </div>\n      )}\n      <svg className={chartStyles.chart} width={svgWidth} height={svgHeight}>\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <g\n            className={svgStyles.axis}\n            ref={xAxisRef}\n            transform={`translate(0,${height})`}\n          />\n          <g className={svgStyles.axis} ref={yAxisRef} />\n          <g>\n            {svgData.map(({path, key}, i) => (\n              <path\n                key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: i === lastIndex,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          {nowDot && (\n            <g className={svgStyles.now}>\n              <circle {...nowDot} />\n            </g>\n          )}\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\nimport { MultiLine } from \"./MultiLine\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\n\nexport const Header = ({ area }) => {\n  const { filteredByAreaMin } = useContext(DataContext);\n\n  if (!filteredByAreaMin.length) {\n    return null;\n  }\n\n  return (\n    <ErrorBoundary>\n      <MultiLine\n        intervals={filteredByAreaMin[0].intervals}\n        useCumulative={!!area}\n      />\n    </ErrorBoundary>\n  );\n};\n","import React from \"react\";\nimport styles from \"./topline.module.scss\";\nexport const Topline = ({ total, text }) => {\n  return (\n    <div className={styles.topline}>\n      {text && <div className={styles.text}>{text}</div>}\n      {typeof total === \"number\" && <div className={styles.total}>{total}</div>}\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { axisRadialInner } from \"d3-radial-axis\";\nimport { DataContext, currentInterval } from \"./DataProvider\";\nimport { intervalExtent } from \"../clientUtils\";\nimport { Topline } from \"./Topline\";\nimport classnames from \"classnames\";\nimport styles from \"./rehoboam.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nexport const Rehoboam = ({ area }) => {\n  const { filteredByAreaMin, activeOrMajorForArea } = useContext(DataContext);\n  const [svgPath, setSvgPath] = useState(null);\n  const [circles, setCircles] = useState([]);\n  const [total, setTotal] = useState(undefined);\n  const axisRef = useRef(null);\n\n  const mainRadius = 100;\n  const margin = 30,\n    width = 2 * mainRadius,\n    height = 2 * mainRadius,\n    svgWidth = width + 2 * margin,\n    svgHeight = height + 2 * margin;\n\n  const dotRadius = 7;\n\n  useEffect(() => {\n    if (!filteredByAreaMin.length) {\n      return;\n    }\n\n    setTotal(currentInterval(filteredByAreaMin).total); // TODO - use status\n\n    const current = currentInterval(filteredByAreaMin);\n    console.log(\"REHOBOAM/current\",current);\n    const bins = current.binsHiRes;\n    // const bins = current.bins;\n    const extent = intervalExtent(current);\n    const maxDisturbance = 20;\n    const maxLength = d3.max(bins, ({ length }) => length);\n    const [start, end] = extent;\n\n    const toRadial = (timestamp, length) => {\n      const fraction = (timestamp - start) / (end - start);\n      const radians = 2 * Math.PI * fraction;\n      const disturbance = maxLength ? maxDisturbance * (length / maxLength) : 0;\n      return [radians, mainRadius + disturbance];\n    };\n\n    const radialData = bins.map(({ x0, length }) => toRadial(x0, length));\n    const radialGen = d3.lineRadial().curve(d3.curveCardinal.tension(0.4));\n    const path = radialGen(radialData);\n    setSvgPath(path);\n\n    const angleScale = d3\n      .scaleLinear()\n      .domain(extent)\n      .range([0, 2 * Math.PI]);\n    const HOUR = 3600 * 1000;\n    const dateFormatter = d3.timeFormat(\"%-I%p\"); // https://github.com/d3/d3-time-format#locale_format\n    const tickValues = [0, 6, 12, 18].map((h) => current.start + h * HOUR);\n    const axis = axisRadialInner(angleScale, mainRadius)\n      .tickFormat(dateFormatter)\n      .tickSize(0)\n      .tickValues(tickValues); // for some reason d3.timeHour.every() doesn't work here\n    d3.select(axisRef.current).call(axis);\n\n    if (activeOrMajorForArea.length) {\n      const toRadialDot = ({ derived: { timestamp } }) => {\n        const fraction = (timestamp - start) / (end - start);\n        const radians = 2 * Math.PI * fraction;\n        return [radians, mainRadius];\n      };\n\n      const activeOrMajorValues = currentInterval(activeOrMajorForArea).values;\n\n      const radialDots = activeOrMajorValues.map(toRadialDot);\n\n      const newCircles = radialDots.map(([theta, r], i) => {\n        const {\n          derived: { severity, active },\n        } = activeOrMajorValues[i];\n        return {\n          key: i,\n          cx: r * Math.sin(theta),\n          cy: r * -Math.cos(theta),\n          r: dotRadius,\n          sev1: severity >= 1,\n          sev2: severity >= 2,\n          active,\n        };\n      });\n\n      setCircles(newCircles);\n    }\n  }, [activeOrMajorForArea, filteredByAreaMin]);\n\n  const text = area || \"Seattle\";\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.counter}>\n        <Topline total={total} text={text} />\n      </div>\n      <svg className={styles.svg} width={svgWidth} height={svgHeight}>\n        <g\n          transform={`translate(${margin + mainRadius},${margin + mainRadius})`}\n        >\n          <g className={svgStyles.axis} ref={axisRef} />\n          <circle className={styles.maincircle} cx={0} cy={0} r={mainRadius} />\n          {svgPath && <path className={classnames(styles.path)} d={svgPath} />}\n          <g className={styles.events}>\n            {circles.map(({ key, cx, cy, r, sev1, sev2, active }) => (\n              <g key={key} className={classnames({ [styles.active]: active })}>\n                <circle\n                  className={classnames(styles.eventcircle)}\n                  cx={cx}\n                  cy={cy}\n                  r={r}\n                />\n                {sev1 && (\n                  <circle className={styles.major} cx={cx} cy={cy} r={r + 2} />\n                )}\n                {sev2 && (\n                  <circle className={styles.major} cx={cx} cy={cy} r={r + 4} />\n                )}\n              </g>\n            ))}\n          </g>\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React from \"react\";\nimport styles from \"./section.module.scss\";\nimport classnames from \"classnames\";\nimport { isPhone } from \"../clientUtils\";\n\nexport const Section = ({ children, styleOption = 0, edgeToEdge = false }) => {\n  const style =\n    styleOption === 1\n      ? styles.style1\n      : styleOption === 2\n      ? styles.style2\n      : styleOption === 3\n      ? styles.styleMap\n      : styles.styleDefault;\n  return (\n    <section className={classnames(styles.section, style)}>\n      <div\n        className={classnames(styles.content, {\n          [styles.phone]: isPhone(),\n        })}\n      >\n        <div\n          className={classnames(styles.subcontent, {\n            [styles.edgeToEdge]: edgeToEdge,\n          })}\n        >\n          {children}\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React from \"react\";\nimport styles from \"./paragraph.module.scss\";\nimport classnames from \"classnames\";\n\nexport const Paragraph = ({ h1,title, content, margin = false }) => {\n  return (\n    <div className={classnames(styles.paragraph, { [styles.margin]: margin })}>\n      {h1 && <h1>{h1}</h1>}\n      {title && <h3>{title}</h3>}\n      {content && <div className={styles.text}>{content}</div>}\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport textures from \"textures\";\nimport {\n  annotation as d3annotation,\n  annotationCalloutCircle as d3annotationCalloutCircle,\n} from \"d3-svg-annotation\";\nimport { DataContext } from \"./DataProvider\";\n\nimport styles from \"./annotations.module.scss\";\n\nconst textureCurrent = textures\n  .lines()\n  .lighter()\n  .size(8)\n  .orientation(\"6/8\")\n  .stroke(\"#51aae8\");\nconst texturePrevious = textures.lines().lighter().size(8).stroke(\"#51aae8\");\n\nexport const Annotations = ({ rectWidth, scales, currentStart, clipPaths }) => {\n  const calloutsRef = useRef(null);\n  const regionsRef = useRef(null);\n  const { annotations } = useContext(DataContext);\n  const [regions, setRegions] = useState([]);\n\n  d3.select(regionsRef.current).call(textureCurrent);\n  d3.select(regionsRef.current).call(texturePrevious);\n\n  useEffect(() => {\n    if (!scales.length) {\n      return;\n    }\n\n    const regionFn = ({ start, end, offset }, i) => {\n      if (!start || !end) {\n        return undefined;\n      }\n\n      const [xScale, yScale] = scales;\n\n      const isCurrent = offset === 0;\n      const texture = isCurrent ? textureCurrent : texturePrevious;\n\n      return {\n        key: `${start}-${end}-${i}`,\n        x: xScale(0) - (isCurrent ? 0 : rectWidth),\n        y: yScale(start.timestamp + offset),\n        width: rectWidth,\n        height:\n          yScale(end.timestamp + offset) - yScale(start.timestamp + offset),\n        fill: texture.url(),\n      };\n    };\n\n    const calloutFn = ({\n      item: { title, label, value, timestamp },\n      offset,\n      scales: [xScale, yScale],\n      isEnd = false,\n    }) => {\n      const isPrevious = timestamp < currentStart;\n      const sideX = isPrevious ? -1 : 1;\n\n      const x = value ? xScale(value) : rectWidth;\n      const sideY = isEnd ? 1 : -1;\n      const y = yScale(timestamp + offset);\n      const callout = {\n        note: {\n          title,\n          label,\n        },\n        x: sideX * x,\n        y,\n        color: \"red\",\n        subject: {\n          radius: 6,\n        },\n      };\n\n      if (value) {\n        callout.nx = sideX * (rectWidth + 10);\n        callout.ny = y;\n      } else {\n        callout.dx = sideX * 10;\n        callout.dy = sideY * 10;\n      }\n      return callout;\n    };\n\n    const calloutsFn = ({ start, end, offset }) => [\n      start ? calloutFn({ item: start, offset, scales }) : undefined,\n      end ? calloutFn({ item: end, offset, scales, isEnd: true }) : undefined,\n    ];\n\n    const calloutsSvgData = annotations.flatMap(calloutsFn).filter(Boolean);\n\n    const callout = d3annotation()\n      .annotations(calloutsSvgData)\n      .type(d3annotationCalloutCircle);\n\n    d3.select(calloutsRef.current).call(callout);\n\n    const newRegions = annotations.map(regionFn).filter(Boolean);\n    setRegions(newRegions);\n\n  }, [annotations, currentStart, rectWidth, scales]);\n\n  return (\n    <>\n      <defs>\n        <clipPath id=\"clippath\">\n          <path d={clipPaths.current} />\n          <path d={clipPaths.previous} />\n        </clipPath>\n      </defs>\n      <g ref={regionsRef}>\n        {regions.map((annotation) => (\n          <rect {...annotation} clipPath=\"url(#clippath)\" />\n        ))}\n      </g>\n      <g className={styles.annotations} ref={calloutsRef} />\n    </>\n  );\n};\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport classnames from \"classnames\";\n\nimport { DataContext, currentInterval, previousInterval } from \"./DataProvider\";\nimport { intervalExtent, isPhone } from \"../clientUtils\";\nimport historyStyles from \"./history.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\nimport { Annotations } from \"./Annotations\";\n\nconst closedPath = (bins, line, offset) => {\n  if (!bins.length) {\n    return \"\";\n  }\n\n  let data = bins.map(({ x0, length }) => ({\n    timestamp: x0,\n    value: length + offset,\n  }));\n\n  const first = data[0],\n    last = data[data.length - 1];\n  const extraBottom = { timestamp: last.timestamp, value: 10000 };\n  const extraTop = { timestamp: first.timestamp, value: 10000 };\n\n  data = [...data, extraBottom, extraTop, first];\n  return line(data);\n};\n\nexport const History = () => {\n  const { history } = useContext(DataContext);\n  // const [svgData, setSvgData] = useState([]);\n  const [scales, setScales] = useState([]);\n  const [currentStart, setCurrentStart] = useState([]);\n  const [paths, setPaths] = useState([]);\n  const [clipPaths, setClipPaths] = useState({});\n\n  const binHeight = 2;\n  const svgWidth = isPhone() ? 350 : 500,\n    margin = { top: 10, right: 30, bottom: 30, left: 30 },\n    svgHeight = 366 * (binHeight + 1) + margin.top + margin.bottom,\n    width = svgWidth - margin.left - margin.right,\n    height = svgHeight - margin.top - margin.bottom;\n  const yearWidth = width / 2;\n  const maxBarWidth = yearWidth * 0.45;\n  const annotationRectWidth = yearWidth * 0.55;\n\n  const svgRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n\n  useEffect(() => {\n    if (!history.length) {\n      return;\n    }\n\n    const intervalCurrent = currentInterval(history);\n    setCurrentStart(intervalCurrent.start);\n    const intervalPrevious = previousInterval(history);\n    const binsCurrent = intervalCurrent.binsLowRes;\n    const binsPrevious = intervalPrevious.binsLowRes;\n    const timeExtent = intervalExtent(intervalCurrent, 60);\n\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(binsCurrent, (b) => b.length)])\n      .range([0, maxBarWidth]);\n\n    const yScale = d3.scaleTime().domain(timeExtent).range([0, height]);\n\n    setScales([xScale, yScale]);\n\n    const dateFormatter = d3.timeFormat(\"%b\"); // https://github.com/d3/d3-time-format#locale_format\n\n    const yAxis = d3\n      .axisLeft()\n      .tickFormat(dateFormatter)\n      .scale(yScale)\n      .ticks(d3.timeMonth.every(1))\n      .tickSize(0);\n    d3.select(yAxisRef.current).call(yAxis);\n\n    const xAxis = d3.axisBottom().scale(xScale).ticks(2);\n    d3.select(xAxisRef.current).call(xAxis);\n\n    // const currentYear = binsCurrent.map(({ x0, length }) => ({\n    //   x: xScale(0),\n    //   width: xScale(length),\n    //   y: yScale(x0),\n    //   height: binHeight,\n    //   rx: 1,\n    // }));\n    // const previousYear = binsPrevious.map(({ x0, length }) => ({\n    //   x: xScale(0) - xScale(length),\n    //   width: xScale(length),\n    //   y: yScale(x0),\n    //   height: binHeight,\n    //   rx: 1,\n    // }));\n    // setSvgData([currentYear, previousYear]);\n\n    const lineCurrent = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(d.length))\n      .y((d) => yScale(d.x0));\n    const linePrevious = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(-d.length))\n      .y((d) => yScale(d.x0));\n\n    const pathCurrent = lineCurrent(binsCurrent);\n    const pathPrevious = linePrevious(binsPrevious);\n    setPaths([\n      { path: pathCurrent, key: \"current\" },\n      { path: pathPrevious, key: \"previous\" },\n    ]);\n\n    const clipLineCurrent = d3\n      .line()\n      .x((d) => xScale(d.value))\n      .y((d) => yScale(d.timestamp));\n\n    const clipLinePrevious = d3\n      .line()\n      .x((d) => xScale(-d.value))\n      .y((d) => yScale(d.timestamp));\n\n    const pixelOffset = xScale.invert(2) - xScale.invert(0);\n    const clipPathCurrent = closedPath(\n      binsCurrent,\n      clipLineCurrent,\n      pixelOffset\n    );\n    const clipPathPrevious = closedPath(\n      binsPrevious,\n      clipLinePrevious,\n      pixelOffset\n    );\n\n    setClipPaths({ current: clipPathCurrent, previous: clipPathPrevious });\n  }, [history, height, maxBarWidth]);\n\n  // console.log(\"HISTORY/render\");\n\n  return (\n    <div className={historyStyles.container}>\n      <div className={historyStyles.years}>\n        <div className={historyStyles.left}>2019</div>\n        <div className={historyStyles.right}>2020</div>\n      </div>\n      <svg\n        className={historyStyles.svg}\n        ref={svgRef}\n        width={svgWidth}\n        height={svgHeight}\n      >\n        <g transform={`translate(${margin.left + yearWidth},${margin.top})`}>\n          {/* <g\n            className={classnames(svgStyles.axis, historyStyles.axis)}\n            ref={xAxisRef}\n            transform={`translate(0,${height})`}\n          /> */}\n          <g\n            className={classnames(svgStyles.axis, historyStyles.axis)}\n            ref={yAxisRef}\n          />\n          {/* <g>\n            {svgData.map((dataset, iDataset) =>\n              dataset.map((d) => (\n                <rect\n                  className={classnames({\n                    [historyStyles.previous]: iDataset,\n                    [historyStyles.current]: !iDataset,\n                  })}\n                  x={d.x}\n                  y={d.y}\n                  width={d.width}\n                  height={d.height}\n                  rx={d.rx}\n                ></rect>\n              ))\n            )}\n          </g> */}\n          <g>\n            {paths.map(({ path, key }, i) => (\n              <path\n                key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: !i,\n                  [svgStyles.previous]: i,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          <g>\n            <Annotations\n              rectWidth={annotationRectWidth}\n              currentStart={currentStart}\n              scales={scales}\n              clipPaths={clipPaths}\n            />\n          </g>\n        </g>\n      </svg>\n    </div>\n  );\n};\n","// see groupby.js\nexport const GroupByOptions = {\n  // TODO - import from server\n  Nothing: undefined,\n  IncidentType: \"type\",\n  ZipCode: \"zip\",\n  Area: \"area\",\n  TimeInterval: \"time\",\n};\n\nexport const AreaAccessors = {\n  ZipCode: ({ derived: { zip } }) => zip,\n  Area: ({ derived: { neighborhoodGroup } }) => neighborhoodGroup,\n  AreaSecondary: ({ derived: { neighborhood } }) => neighborhood,\n};\nAreaAccessors.Default = AreaAccessors.Area;\n","import React from \"react\";\nimport styles from \"./tweetdetails.module.scss\";\n\nexport const TweetDetails = ({\n  tweet: {\n    derived: { timestamp, address, units, type, color, lat, long },\n  },\n}) => {\n  const unitsList = units.split(\" \");\n  const unitsStr = `${unitsList.length} ${\n    unitsList.length === 1 ? \"unit\" : \"units\"\n  } dispatched:`;\n\n  const format = (n) => Number.parseFloat(n).toFixed(3);\n  const coordinates = `${format(lat)}°N ${format(-long)}°W`;\n  return (\n    <div className={styles.container}>\n      <div>{address}</div>\n      <div className={styles.latlong}>{coordinates}</div>\n      <div>\n        <span>{unitsStr}</span>\n        {unitsList.map((unit) => (\n          <span key={unit} className={styles.unit}>{unit}</span>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport styles from \"./tweet.module.scss\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\nimport { AreaAccessors, GroupByOptions } from \"../groupingOptions\";\nimport { TweetDetails } from \"./TweetDetails\";\nimport {\n  toPacificStr,\n  isActive,\n  isAtLeastSev1,\n  isAtLeastSev2,\n} from \"../clientUtils\";\nimport { SvgDot } from \"./SvgDot\";\nimport classnames from \"classnames\";\n\nexport const TweetModes = {\n  Default: 0,\n  Detailed: 1,\n  GreyedOut: 2,\n};\n\nexport const Tweet = ({ tweet, mode = TweetModes.Default }) => {\n  const { user, setSelection } = useContext(UserContext);\n  const selectedTweet = user[UserContextKeys.SelectedTweet];\n\n  const handleClick = () => {\n    const newSelectedTweet =\n      selectedTweet && selectedTweet.id_str === tweet.id_str ? null : tweet;\n    setSelection(UserContextKeys.SelectedTweet, newSelectedTweet);\n  };\n  const active = isActive(tweet);\n  const sev1 = isAtLeastSev1(tweet);\n  const sev2 = isAtLeastSev2(tweet);\n\n  const accessor = AreaAccessors.AreaSecondary;\n  const area = accessor(tweet);\n\n  const isGreyedOut = mode === TweetModes.GreyedOut;\n  const isDetailed = mode === TweetModes.Detailed;\n  const time = toPacificStr(tweet.derived.timestamp);\n\n  return (\n    <div\n      className={classnames(styles.container, {\n        [styles.detailed]: isDetailed,\n        [styles.greyedOut]: isGreyedOut,\n      })}\n      onClick={handleClick}\n    >\n      <div className={styles.tweet}>\n        <div className={styles.details}>\n          <span className={styles.location}>\n            {area} @ {time}\n          </span>\n          <SvgDot active={active} sev1={sev1} sev2={sev2} />\n        </div>\n        <div>{tweet.derived.description}</div>\n      </div>\n      {isDetailed && <TweetDetails tweet={tweet} />}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport styles from \"./tweets.module.scss\";\nimport { Tweet, TweetModes } from \"./Tweet\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\n\nexport const TweetList = ({ tweets = [] }) => {\n  const { user } = useContext(UserContext);\n  const selected = user[UserContextKeys.SelectedTweet];\n\n  const mode = ({ id_str }) =>\n    selected\n      ? id_str === selected.id_str\n        ? TweetModes.Detailed\n        : TweetModes.GreyedOut\n      : TweetModes.Default; // TODO - remove modes\n\n  return (\n    <div className={styles.tweets}>\n      {tweets.map((t) => (\n        <Tweet key={t.id_str} tweet={t} mode={mode(t)} />\n      ))}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\n\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsActive = () => {\n  const { active24 } = useContext(DataContext);\n\n  return <TweetList tweets={active24} />;\n}\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\n\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsMajor = () => {\n  const { major24 } = useContext(DataContext);\n\n  return <TweetList tweets={major24} />;\n}\n","import React, { useContext } from \"react\";\nimport { Map } from \"./Map\";\nimport { DataProvider } from \"./DataProvider\";\nimport { GroupByArea } from \"./GroupByArea\";\nimport { Header } from \"./Header\";\nimport { Rehoboam } from \"./Rehoboam\";\nimport { Section } from \"./Section\";\nimport { Paragraph } from \"./Paragraph\";\nimport { History } from \"./History\";\nimport { TweetsActive } from \"./TweetsActive\";\nimport { TweetsMajor } from \"./TweetsMajor\";\nimport { SvgDot } from \"./SvgDot\";\nimport * as d3 from \"d3\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { StatusContext } from \"./StatusContext\";\n\nconst formatter = d3.timeFormat(\"%-I:%M %p\");\n\nexport const DispatchAll = () => {\n  const { status = {} } = useContext(StatusContext);\n  const time = status.lastUpdated\n    ? formatter(new Date(status.lastUpdated))\n    : undefined;\n\n  const intro = (\n    <p>\n      A near-real-time visualization of Seattle Fire Department 911 dispatches. Active incidents are\n      marked <SvgDot active={true} radius={5} />. Incidents with five or more units dispatched are\n      marked <SvgDot sev1={true} />, with ten or more <SvgDot sev2={true} />. All timestamps are in Seattle time (Pacific timezone). See notes at the bottom for more details.\n    </p>\n  );\n\n  const pastWeek = `Cumulative number of dispatches for Seattle today, compared to the past 7 days`;\n\n  const map = \"\";\n\n  const major = (\n    <p>\n      Incidents in the past 24 hours with <strong>ten or more</strong> units\n      deployed\n    </p>\n  );\n\n  const areas =\n    \"Select an area of the city to see all of today's incidents there. (TODO - update this text.)\";\n\n  const history =\n    \"This views shows total dispatches for all of Seattle per day this year compared to last year, with a few callouts for context.\";\n\n  const sources = (\n    <p>\n      The primary data source is{\" \"}\n      <a href=\"http://www2.seattle.gov/fire/realTime911/\">\n        Real-Time 911 Dispatch\n      </a>\n      . GPS locations for each incident are retrieved from{\" \"}\n      <a href=\"https://dev.socrata.com/foundry/data.seattle.gov/kzjm-xkqj\">\n        this Socrata dataset\n      </a>\n      . Seattle neighborhood GeoJSON data is from the{\" \"}\n      <a href=\"https://github.com/seattleflu/seattle-geojson/tree/master/seattle_geojsons\">\n        seattleflu/seattle-geojson\n      </a>{\" \"}\n      repository. Map powered by <a href=\"http://leafletjs.com\">Leaflet</a> via{\" \"}\n      <a href=\"https://react-leaflet.js.org\">react-leaflet</a>. Map tiles\n      provided by{\" \"}\n      <a href=\"https://www.jawg.io/docs/apidocs/static-maps/\">Jawg Maps</a>.\n    </p>\n  );\n\n  const notes = (\n    <>\n      <p>\n        {time && (\n          <span>\n            {\" \"}\n            Data is current as of <strong> {time}</strong>.{\" \"}\n          </span>\n        )}\n        Incidents for which no geolocation data is available are not shown and\n        not counted.\n      </p>\n      <p>\n        Visualization by{\" \"}\n        <a href=\"https://linkedin.com/in/anarseyf/\">Anar Seyf</a>.\n      </p>\n    </>\n  );\n\n  return (\n    <DataProvider>\n      <Section styleOption={1}>\n        <Paragraph h1=\"Seattle Fire Real-Time Dispatch\" content={intro} />\n        <Rehoboam />\n        <Paragraph title=\"Past Week\" content={pastWeek} />\n        <Header />\n      </Section>\n\n      <Section edgeToEdge={true} styleOption={2}>\n        <Paragraph title=\"Today\" content={map} margin={true} />\n        <ErrorBoundary>\n          <Map />\n        </ErrorBoundary>\n      </Section>\n\n      <Section styleOption={1}>\n        <Paragraph title=\"Active Incidents\" content={\"\"} />\n        <TweetsActive />\n        <Paragraph title=\"Major Incidents (24 Hours)\" content={major} />\n        <TweetsMajor />\n      </Section>\n\n      <Section styleOption={2} edgeToEdge={true}>\n        <Paragraph title=\"City Areas\" content={areas} margin={true} />\n        <GroupByArea />\n      </Section>\n\n      <Section styleOption={1}>\n        <Paragraph title=\"Last Year vs This Year\" content={history} />\n        <History />\n      </Section>\n\n      <Section styleOption={2}>\n        <Paragraph title=\"Data Sources\" content={sources} />\n        <Paragraph title=\"Notes\" content={notes} />\n      </Section>\n    </DataProvider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext, currentInterval } from \"./DataProvider\";\n\nimport { Tweet, TweetModes } from \"./Tweet\";\nimport { UserContextKeys, UserContext } from \"./UserProvider\";\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsForArea = () => {\n  const { filteredByArea } = useContext(DataContext);\n  const { user } = useContext(UserContext);\n  const filter = user[UserContextKeys.TypeFilter];\n\n  if (!filteredByArea.length) {\n    return null;\n  }\n  const all = currentInterval(filteredByArea).values;\n  const filtered = all.filter(\n    ({ derived: { type } }) => !filter || filter === type\n  );\n\n  return <TweetList tweets={filtered} />;\n}\n","import React from \"react\";\nimport { Paragraph } from \"./Paragraph\";\nimport { Header } from \"./Header\";\nimport { useNeighborhoods } from \"./neighborhoods\";\n\nexport const AreaPageHeader = ({ area }) => {\n  const neighborhoodsMap = useNeighborhoods();\n  const subareas = (\n    <div>\n      {(neighborhoodsMap[area] || []).map((subarea) => (\n        <div key={subarea}>{subarea}</div>\n      ))}\n    </div>\n  );\n\n  // const [list, setList] = useState([]);\n  // useEffect(() => {\n  //   if (neighborhoodsMap[area]) {\n  //     setList(neighborhoodsMap[area]);\n  //   }\n  // }, [area, neighborhoodsMap]);\n\n  return (\n    <>\n      <Paragraph title={area} content={subareas} />\n      <Header area={area} />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport { Map } from \"./Map\";\nimport { DataProvider } from \"./DataProvider\";\nimport { TweetsForArea } from \"./TweetsForArea\";\nimport { Paragraph } from \"./Paragraph\";\nimport { Section } from \"./Section\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\n\nimport paragraphStyles from \"./paragraph.module.scss\";\nimport { AreaPageHeader } from \"./AreaPageHeader\";\n\nexport const DispatchArea = ({ area }) => {\n  const sources = \"Data sources\";\n\n  return (\n    <DataProvider filters={{ area }}>\n      <Section styleOption={2}>\n        <Paragraph\n          content={\n            <Link className={paragraphStyles.link} to=\"/\">\n              « to main page\n            </Link>\n          }\n        />\n      </Section>\n\n      <Section styleOption={1}>\n        <AreaPageHeader area={area} />\n      </Section>\n\n      <Section styleOption={2} edgeToEdge={true}>\n        <ErrorBoundary>\n          <Map area={area} />\n        </ErrorBoundary>\n      </Section>\n\n      <Section styleOption={1}>\n        <TweetsForArea />\n      </Section>\n\n      <Section styleOption={2}>\n        <Paragraph text={sources} />\n      </Section>\n    </DataProvider>\n  );\n};\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\nimport { DispatchAll } from \"./dispatch/DispatchAll\";\nimport { DispatchArea } from \"./dispatch/DispatchArea\";\n\nimport styles from \"./app.module.scss\";\nimport { StatusProvider } from \"./dispatch/StatusContext\";\nimport { UserProvider } from \"./dispatch/UserProvider\";\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <Router>\n        <StatusProvider path=\"/\">\n          <UserProvider default>\n            <DispatchAll default />\n          </UserProvider>\n          <UserProvider path=\":area\">\n            <DispatchArea path=\"/\" />\n          </UserProvider>\n        </StatusProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport const register = (config) => {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport const unregister = () => {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./custom.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__1TT8J\",\"content\":\"section_content__32e_z\",\"phone\":\"section_phone__C_IbC\",\"styleDefault\":\"section_styleDefault__1fobi\",\"style1\":\"section_style1__-PHu2\",\"style2\":\"section_style2__3JfYX\",\"styleMap\":\"section_styleMap__2ZHhK\",\"subcontent\":\"section_subcontent__1yzVR\",\"edgeToEdge\":\"section_edgeToEdge__28iHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svg\":\"history_svg__wHz8f\",\"previous\":\"history_previous__1tjyT\",\"current\":\"history_current__2e2uB\",\"years\":\"history_years__2UEbj\",\"left\":\"history_left__YNLcK\",\"right\":\"history_right___nK7k\",\"axis\":\"history_axis__1LX0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"tweet_container__2cPfJ\",\"detailed\":\"tweet_detailed__1zw6b\",\"greyedOut\":\"tweet_greyedOut__187c4\",\"tweet\":\"tweet_tweet__2okc-\",\"type\":\"tweet_type__2VJ4m\",\"details\":\"tweet_details__165yi\",\"units\":\"tweet_units__2ZVmK\",\"location\":\"tweet_location__26Q8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph\":\"paragraph_paragraph__2KRp8\",\"text\":\"paragraph_text__1NbBg\",\"link\":\"paragraph_link__2D61j\",\"margin\":\"paragraph_margin__uTVtm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chart_container__3RTag\",\"header\":\"chart_header__3gCPW\",\"svg\":\"chart_svg__pP08z\",\"total\":\"chart_total__qkQSI\",\"title\":\"chart_title__2BYUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"map_container__1WM_n\",\"phone\":\"map_phone__1XpbO\",\"area\":\"map_area__1ZdwJ\",\"pane\":\"map_pane__g9Le7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topline\":\"topline_topline__3XNKt\",\"total\":\"topline_total__b2Zkr\",\"text\":\"topline_text__2_5SM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"tweetdetails_container__1rcoE\",\"explanation\":\"tweetdetails_explanation__3lEx4\",\"latlong\":\"tweetdetails_latlong__29PX1\",\"unit\":\"tweetdetails_unit__33Rog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"areashape_container__3TA09\",\"phone\":\"areashape_phone__ZKBlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"spark_container__20mVH\",\"total\":\"spark_total__2Kxtk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"annotations\":\"annotations_annotations__1BK52\",\"line\":\"annotations_line__I-f5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tweets\":\"tweets_tweets__PhO0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"axis\":\"svg_axis__bET8j\",\"path\":\"svg_path__EmZTS\",\"highlight\":\"svg_highlight__1dzK0\",\"previous\":\"svg_previous__19uFf\",\"current\":\"svg_current__mnSmX\",\"now\":\"svg_now__2CbCS\",\"pulse\":\"svg_pulse__2GGpF\",\"live\":\"svg_live__2Jj88\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__3mk8F\"};"],"sourceRoot":""}