{"version":3,"sources":["dispatch/Dot.jsx","api.jsx","dispatch/StatusContext.jsx","dispatch/DataProvider.jsx","dispatch/UserProvider.jsx","dispatch/mapOptions.js","dispatch/geojson.js","clientUtils.js","dispatch/Map.jsx","dispatch/ErrorBoundary.jsx","dispatch/SvgDot.jsx","dispatch/neighborhoods.js","dispatch/MultiLine.jsx","dispatch/Header.jsx","dispatch/Section.jsx","dispatch/Paragraph.jsx","dispatch/Annotations.jsx","dispatch/HistoryEvents.jsx","dispatch/History.jsx","groupingOptions.js","dispatch/TweetDetails.jsx","dispatch/Tweet.jsx","dispatch/TweetList.jsx","dispatch/Sources.jsx","dispatch/DispatchAll.jsx","dispatch/TweetsForArea.jsx","dispatch/AreaPageHeader.jsx","dispatch/DispatchArea.jsx","App.jsx","serviceWorker.js","index.tsx","dispatch/rehoboam.module.scss","dispatch/section.module.scss","dispatch/tweet.module.scss","dispatch/history.module.scss","dispatch/tweetdetails.module.scss","dispatch/paragraph.module.scss","dispatch/chart.module.scss","dispatch/map.module.scss","dispatch/topline.module.scss","dispatch/areashape.module.scss","dispatch/spark.module.scss","dispatch/annotations.module.scss","dispatch/tweets.module.scss","dispatch/svg.module.scss","app.module.scss","dispatch/group.module.scss"],"names":["Appearance","Dot","coordinates","severity","active","appearance","color","opacity","baseRadius","Circle","center","radius","fill","fillOpacity","stroke","weight","console","warn","getStatus","a","getByAPI","getAnnotations","getHistory","getTweetsForArea","area","queryParams","activeOrMajor","minimize","getTweetsForAreaMin","hiRes","getTweetsForAreaMinWeek","compare","getTweetsByArea","getTweetsByType","getTweetsMajor24","getTweetsActive24","queryString","query","list","Object","keys","map","key","encodeURIComponent","join","api","allQueryParams","fetch","headers","Accept","response","json","deepEqual","require","StatusContext","createContext","StatusProvider","children","value","useState","status","setStatus","previousStatus","setPreviousStatus","useEffect","log","delay","checkForUpdates","newStatus","env","document","title","intervalId","setInterval","clearInterval","useStatus","Provider","DataContext","currentInterval","dataset","intervals","previousInterval","DataProvider","filters","initialValue","filteredByArea","filteredByAreaMin","filteredByAreaMinWeek","activeOrMajorForArea","activeOrMajorByArea","byTypeForArea","groupedByArea","history","active24","major24","annotations","setValue","useContext","mostRecentId","undefined","setFilteredByArea","setFilteredByAreaMin","setFilteredByAreaMinWeek","setActiveOrMajorForArea","setActiveOrMajorByArea","setByTypeForArea","setGroupedByArea","setHistory","setActive24","setMajor24","setAnnotations","shouldFetch","setShouldFetch","values","length","useTweets","UserContext","UserContextKeys","useUser","user","setUser","setSelection","UserProvider","MapOptions","ProxyLight","url","r","attribution","ProxyDark","CartoDB_DarkMatter","ext","subdomains","CartoDB_DarkMatterNoLabels","CartoDB_Positron","CartoDB_PositronNoLabels","Jawg_Dark","token","Jawg_Light","Mapbox","Stadia_Alidade","Stamen_Toner","Default","NoLabels","byArea","features","prop","forEach","feature","properties","push","nhoodFeaturesByArea","zipCodes","nhoods","featuresForArea","nhood","areas","geojson","areaProp","cityGeojson","city","defaultCentroid","mapBounds","lat","long","centroid","coords","geometry","flat","latExtent","d3","longExtent","intervalExtent","start","end","expandMinutes","expand","extent","offset","queryText","isPhone","window","matchMedia","matches","isActive","derived","isAtLeastSev1","isAtLeastSev2","Map","tileOptions","geojsonStyleActive","fillColor","strokeOpacity","typeFilter","selectedTweet","rendered","filter","zoom","defaultZoom","isSelectedDot","id_str","data","flatMap","type","selectedIndex","findIndex","slice","appearanceFn","d","className","classnames","styles","container","phone","minZoom","maxZoom","maxBounds","maxBoundsViscosity","zoomControl","TileLayer","GeoJSON","style","CRA_NAM","ErrorBoundary","props","state","hasError","error","errorInfo","this","React","Component","SvgDot","sev1","sev2","svgStyles","live","width","height","cx","size","cy","useNeighborhoods","setMap","newMap","sort","MultiLine","showHeader","useCumulative","svgData","setSvgData","nowDot","setNowDot","svgWidth","svgHeight","margin","xAxisRef","useRef","yAxisRef","accessor","cumulative","xExtent","yExtent","bins","dateFormatter","xScale","domain","range","xAxis","tickFormat","tickSize","scale","ticks","every","current","call","yScale","yAxis","line","curve","tension","x","x0","y","newSvgData","path","i","reverse","lastBin","total","lastIndex","chartStyles","header","chart","transform","axis","ref","now","Header","Section","styleOption","edgeToEdge","style1","style2","styleMap","styleDefault","section","content","subcontent","Paragraph","h1","paragraph","text","textureCurrent","textures","lines","lighter","orientation","texturePrevious","Annotations","currentStart","rectWidth","scales","clipPaths","calloutsRef","regionsRef","regions","setRegions","calloutFn","item","label","timestamp","isEnd","sideX","sideY","callout","note","subject","nx","ny","dx","dy","calloutsSvgData","Boolean","d3annotation","d3annotationCalloutCircle","newRegions","isCurrent","texture","id","previous","annotation","clipPath","HistoryEvents","dayHeight","circles","setCircles","intervalCurrent","intervalPrevious","binsCurrent","binsLowRes","binsPrevious","mapper","count","stack","Array","_","index","sev2Current","sev2Previous","toCirclesGen","side","toCirclesCurrent","toCirclesPrevious","circlesCurrent","circlesPrevious","newCircles","closedPath","first","extraBottom","extraTop","History","setScales","setCurrentStart","paths","setPaths","setClipPaths","yearWidth","maxBarWidth","annotationRectWidth","svgRef","timeExtent","b","lineCurrent","linePrevious","pathCurrent","pathPrevious","clipLineCurrent","clipLinePrevious","pixelOffset","invert","clipPathCurrent","clipPathPrevious","historyStyles","years","left","right","svg","AreaAccessors","ZipCode","zip","Area","neighborhoodGroup","AreaSecondary","neighborhood","TweetDetails","tweet","address","units","unitsList","split","unitsStr","format","n","Number","parseFloat","toFixed","secondary","unit","link","href","TweetModes","Tweet","mode","isGreyedOut","isDetailed","time","timezone","detailed","greyedOut","onClick","newSelectedTweet","details","location","description","TweetList","tweets","selected","t","Sources","sources","formatter","DispatchAll","notes","lastUpdated","Date","TweetsForArea","filtered","AreaPageHeader","neighborhoodsMap","subareas","subarea","DispatchArea","paragraphStyles","to","App","app","default","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"iUAGaA,EACH,EADGA,GAEF,EAFEA,EAGE,EAGFC,EAAM,SAAC,GAAmF,IAAjFC,EAAgF,EAAhFA,YAAgF,IAAnEC,gBAAmE,MAAxD,EAAwD,MAArDC,cAAqD,aAArCC,kBAAqC,MAAxBL,EAAwB,EAC9FM,EAAQF,EAAS,MAAQ,QAG3BG,EAAU,GACVJ,GAAY,IACdI,EAAU,IAERH,IACFG,EAAU,IAERF,IAAeL,IACjBO,EAAU,KAERF,IAAeL,IACjBO,EAAU,IAEZ,IAAMC,EAAaJ,EAAS,IAAM,IAElC,OAAKF,EAAY,GAMf,oCACE,kBAACO,EAAA,EAAD,CACEC,OAAQR,EACRS,OAAQH,EACRF,MAAOA,EACPM,MAAM,EACNC,YAAaN,EACbO,QAAQ,IAETX,GAAY,GACX,kBAACM,EAAA,EAAD,CACEC,OAAQR,EACRS,OAAQH,EAAa,IACrBO,OAAQ,EACRT,MAAOA,EACPC,QAASA,EACTK,MAAM,IAGTT,GAAY,GACX,kBAACM,EAAA,EAAD,CACEC,OAAQR,EACRS,OAAQH,EAAa,IACrBO,OAAQ,EACRT,MAAOA,EACPC,QAASA,EACTK,MAAM,MA/BZI,QAAQC,KAAR,6BAAmCf,IAC5B,O,sCC1BJ,SAAegB,IAAtB,+B,4CAAO,sBAAAC,EAAA,+EACEC,EAAS,oBADX,4C,sBAIA,SAAeC,IAAtB,+B,4CAAO,sBAAAF,EAAA,+EACEC,EAAS,iCADX,4C,sBAIA,SAAeE,IAAtB,+B,4CAAO,sBAAAH,EAAA,+EACEC,EAAS,qBADX,4C,sBAIA,SAAeG,EAAtB,kC,4CAAO,WACLC,GADK,2BAAAL,EAAA,6DAELM,EAFK,+BAES,CAAEC,eAAe,EAAOC,UAAU,GAF3C,kBAIEP,EAAS,mBAAD,OAAoBI,GAAQC,IAJtC,4C,sBAOA,SAAeG,EAAtB,kC,4CAAO,WACLJ,GADK,2BAAAL,EAAA,6DAELM,EAFK,+BAES,CAAEC,eAAe,EAAOC,UAAU,EAAME,OAAO,GAFxD,kBAIET,EAAS,mBAAD,OAAoBI,GAAQC,IAJtC,4C,sBAOA,SAAeK,EAAtB,kC,4CAAO,WACLN,GADK,2BAAAL,EAAA,6DAELM,EAFK,+BAES,CAAEC,eAAe,EAAOC,UAAU,EAAMI,QAAS,GAF1D,kBAIEX,EAAS,mBAAD,OAAoBI,GAAQC,IAJtC,4C,sBAOA,SAAeO,IAAtB,+B,4CAAO,wCAAAb,EAAA,6DAA+BM,EAA/B,+BAA6C,CAAEC,eAAe,GAA9D,kBACEN,EAAS,yBAA0BK,IADrC,4C,sBAIA,SAAeQ,IAAtB,+B,4CAAO,wCAAAd,EAAA,6DAA+BK,EAA/B,+BAAsC,UAAtC,kBACEJ,EAAS,0BAAD,OAA2BI,GAAQ,CAAEG,UAAU,KADzD,4C,sBAIA,SAAeO,IAAtB,+B,4CAAO,sBAAAf,EAAA,+EACEC,EAAS,0BAA2B,CAAEO,UAAU,KADlD,4C,sBAIA,SAAeQ,IAAtB,+B,4CAAO,sBAAAhB,EAAA,+EACEC,EAAS,2BAA4B,CAAEO,UAAU,KADnD,4C,sBAYP,IAAMS,EAAc,WAAiB,IAAhBC,EAAe,uDAAP,GACrBC,EAAOC,OAAOC,KAAKH,GAAOI,KAC9B,SAACC,GAAD,gBAAYC,mBAAmBD,GAA/B,YAAuCC,mBAAmBN,EAAMK,QAElE,OAAOJ,EAAKM,KAAK,M,SAGJxB,I,2EAAf,gDAAAD,EAAA,6DAAwB0B,EAAxB,+BAA8B,GAAIpB,EAAlC,+BAAgD,GACxCqB,EADR,aAEInB,UAAU,GACPF,GAECY,EAAQD,EAAYU,GAL5B,SAMyBC,MAAM,QAAD,OAASF,EAAT,YAAgBR,GAAS,CAEnDW,QAAS,CAAEC,OAAQ,sBARvB,cAMQC,EANR,yBAWSA,EAASC,QAXlB,4C,sBClEA,IAAMC,EAAYC,EAAQ,IAEbC,EAAgBC,0BAwChBC,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzBC,EAvCU,WAAO,IAAD,EACMC,mBAAS,IADf,mBACfC,EADe,KACPC,EADO,OAEsBF,mBAAS,IAF/B,mBAEfG,EAFe,KAECC,EAFD,KAmCtB,OA/BAC,qBAAU,WAGRhD,QAAQiD,IAAR,0DAC2CC,GAD3C,aAGA,IAAMC,EAAe,uCAAG,4BAAAhD,EAAA,sEACED,IADF,OAChBkD,EADgB,OASjBhB,EAAUQ,EAAQQ,KACrBpD,QAAQiD,IAAI,gCAAiCG,GAC7CL,EAAkBH,GAClBC,EAAUO,IAGO,gBAAfR,EAAOS,MACTC,SAASC,MAAQ,mBAhBG,2CAAH,qDAoBrBJ,IACA,IAAMK,EAAaC,YAAYN,EA1BjB,KA2Bd,OAAO,kBAAMO,cAAcF,MAC1B,CAACZ,IAEG,CAAEA,SAAQE,kBAIHa,GACd,OACE,kBAACrB,EAAcsB,SAAf,CAAwBlB,MAAOA,GAAQD,ICjCrCL,EAAYC,EAAQ,IAEbwB,EAActB,0BAEduB,EAAkB,SAACC,GAAD,OAAaA,EAAQ,GAAGC,UAAU,IACpDC,EAAmB,SAACF,GAAD,OAAaA,EAAQ,GAAGC,UAAU,IA+IrDE,GAAe,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAAS1B,EAAe,EAAfA,SAChCC,EA9IU,WAAmB,IAAlByB,EAAiB,uDAAP,GACrBC,EAAe,CACnBC,eAAgB,GAChBC,kBAAmB,GACnBC,sBAAuB,GACvBC,qBAAsB,GACtBC,oBAAqB,GACrBC,cAAe,GACfC,cAAe,GACfC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,YAAa,GACbnC,OAAQ,IAbwB,EAeRD,mBAASyB,GAfD,mBAe3B1B,EAf2B,KAepBsC,EAfoB,OAgBCC,qBAAW3C,GAAtCM,EAhB0B,EAgB1BA,OAAQE,EAhBkB,EAgBlBA,eACVoC,EAAepC,EAAeoC,aAChCtC,EAAOsC,kBACPC,EAEAD,GACFlF,QAAQiD,IAAR,kCAAuCiC,IAtBP,MAyBUvC,mBAAS,IAzBnB,mBAyB3B0B,EAzB2B,KAyBXe,EAzBW,OA0BgBzC,mBAAS,IA1BzB,mBA0B3B2B,EA1B2B,KA0BRe,EA1BQ,OA2BwB1C,mBAAS,IA3BjC,mBA2B3B4B,EA3B2B,KA2BJe,EA3BI,OA4BsB3C,mBAAS,IA5B/B,mBA4B3B6B,EA5B2B,KA4BLe,EA5BK,OA6BoB5C,mBAAS,IA7B7B,mBA6B3B8B,EA7B2B,KA6BNe,EA7BM,OA8BQ7C,mBAAS,IA9BjB,mBA8B3B+B,EA9B2B,KA8BZe,EA9BY,OA+BQ9C,mBAAS,IA/BjB,mBA+B3BgC,EA/B2B,KA+BZe,EA/BY,OAgCJ/C,mBAAS,IAhCL,oBAgC3BiC,GAhC2B,MAgClBe,GAhCkB,SAiCFhD,mBAAS,IAjCP,qBAiC3BkC,GAjC2B,MAiCjBe,GAjCiB,SAkCJjD,mBAAS,IAlCL,qBAkC3BmC,GAlC2B,MAkClBe,GAlCkB,SAmCIlD,mBAAS,IAnCb,qBAmC3BoC,GAnC2B,MAmCde,GAnCc,SAqCInD,oBAAS,GArCb,qBAqC3BoD,GArC2B,MAqCdC,GArCc,MA0IlC,OAnGAhD,qBAAU,WACHZ,EAAUQ,EAAQE,IACrBkD,IAAe,KAEhB,CAACpD,EAAQE,IAEZE,qBAAU,WACR,GAAK+C,GAAL,CAIA/F,QAAQiD,IAAI,2CACZ+C,IAAe,GAEf,IAAMxF,EAAO2D,EAAQ3D,MAAQ,UAE7BR,QAAQiD,IAAI,yBAA0BzC,GACzB,YAATA,EACF,sBAAC,sBAAAL,EAAA,kEACCkF,EADD,SAC4BzE,EAAoBJ,GADhD,8CAEC8E,EAFD,SAEgCxE,EAAwBN,GAFxD,6EAAD,GAKA,sBAAC,sBAAAL,EAAA,kEACCiF,EADD,SACyB7E,EAAiBC,GAD1C,4EAAD,GAKF,sBAAC,sBAAAL,EAAA,kEACCoF,EADD,SAEShF,EAAiBC,EAAM,CAAEE,eAAe,EAAMC,UAAU,IAFjE,4EAAD,GAMA,sBAAC,4BAAAR,EAAA,sEACwBgB,IADxB,OACOe,EADP,OAEC0D,GAAY1D,EAAS,GAAG8B,UAAU,GAAGiC,QAFtC,0CAAD,GAKA,sBAAC,4BAAA9F,EAAA,sEACwBe,IADxB,OACOgB,EADP,OAEC2D,GAAW3D,EAAS,GAAG8B,UAAU,GAAGiC,QAFrC,0CAAD,GAKA,sBAAC,sBAAA9F,EAAA,kEACCsF,EADD,SACwBxE,EAAgBT,GADxC,4EAAD,GAIA,sBAAC,sBAAAL,EAAA,kEACCuF,EADD,SACwB1E,IADxB,4EAAD,GAIA,sBAAC,sBAAAb,EAAA,kEACCqF,EADD,SAESxE,EAAgB,CAAEN,eAAe,EAAMC,UAAU,IAF1D,4EAAD,GAMA,sBAAC,sBAAAR,EAAA,kEACC2F,GADD,SACsBzF,IADtB,4EAAD,GAIKuE,GAAQsB,QACX,sBAAC,sBAAA/F,EAAA,kEACCwF,GADD,SACkBrF,EAAWE,GAD7B,4EAAD,QAvDAR,QAAQiD,IAAI,2BA2Db,CAACkB,EAAQ3D,KAAMoE,GAAQsB,OAAQhB,EAAca,KAEhD/C,qBAAU,WACRgC,EAAS,CACPX,iBACAC,oBACAC,wBACAG,gBACAC,gBACAC,WACAG,eACAF,YACAC,WACAN,uBACAC,sBACA7B,aAED,CACDiC,GACAJ,EACAD,EACAO,GACAL,EACAL,EACAC,EACAC,EACAI,EACAC,GACAE,GACAlC,IAGKF,EAIOyD,CAAUhC,GACxB,OAAO,kBAACN,EAAYD,SAAb,CAAsBlB,MAAOA,GAAQD,IClKjC2D,GAAc7D,0BAEd8D,GACI,gBADJA,GAEC,aAGRC,GAAU,WAAO,IAAD,EACI3D,mBAAS,IADb,mBACb4D,EADa,KACPC,EADO,KAUpB,OAFAxD,qBAAU,WAAKhD,QAAQiD,IAAI,oBAAmB,IAEvC,CAAEsD,OAAME,aAPM,SAAC/E,EAAKgB,GACzB1C,QAAQiD,IAAR,gBAAqBvB,EAArB,WAAgCgB,GAChC8D,EAAQ,2BAAKD,GAAN,kBAAa7E,EAAMgB,QAQjBgE,GAAe,SAAC,GAAkB,IAAhBjE,EAAe,EAAfA,SAC7B,OACE,kBAAC2D,GAAYxC,SAAb,CAAsBlB,MAAO4D,MAAY7D,ICxBhCkE,GAAa,CACxBC,WAAY,CACVC,IAAK,+CACLC,EAAG,MACHC,YACE,mLAEJC,UAAW,CACTH,IAAK,8CACLC,EAAG,MACHC,YACE,mLAEJE,mBAAoB,CAClBJ,IAAK,gEACLK,IAAK,MACLJ,EAAG,MACHK,WAAY,OACZJ,YACE,qJAEJK,2BAA4B,CAC1BP,IAAK,qEACLK,IAAK,MACLJ,EAAG,MACHK,WAAY,OACZJ,YACE,qJAEJM,iBAAkB,CAChBF,WAAY,OACZN,IAAK,iEACLK,IAAK,MACLJ,EAAG,MAEHC,YACE,qJAEJO,yBAA0B,CACxBH,WAAY,OACZN,IAAK,sEACLK,IAAK,MACLJ,EAAG,MAEHC,YACE,qJAEJQ,UAAW,CACTV,IACE,+EACFK,IAAK,MACLJ,EAAG,MACHK,WAAY,OACZJ,YACE,kLACFS,MAAO,oEAETC,WAAY,CACVZ,IACE,gFACFK,IAAK,MACLJ,EAAG,MACHK,WAAY,OACZJ,YACE,kLACFS,MAAO,oEAETE,OAAQ,GAGRC,eAAgB,CACdd,IACE,8EACFK,IAAK,MACLJ,EAAG,MACHC,YACE,kMAEJa,aAAc,CACZf,IAAK,uEACLK,IAAK,MACLJ,EAAG,MACHK,WAAY,OACZJ,YACE,qMAMNJ,GAAWkB,QAAUlB,GAAWK,UAChCL,GAAWmB,SAAWnB,GAAWkB,Q,+BClF3BE,GAAS,SAACC,EAAUC,GACxB,IAAMxG,EAAM,GAOZ,OANAuG,EAASE,SAAQ,SAACC,GAChB,IAAMzG,EAAMyG,EAAQC,WAAWH,GACzB3G,EAAOG,EAAIC,IAAQ,GACzBJ,EAAK+G,KAAKF,GACV1G,EAAIC,GAAOJ,KAENG,GAIH6G,IADwBP,GAAOQ,GAASP,SAb1B,WAcQD,GAAOS,GAAOR,SAfxB,YAoBLS,GAFY,SAACC,GAAD,OAAWJ,GAAoBI,IAI3CC,GAAQ,CACnBC,QAASJ,GACTK,SAxBgB,WA2BLC,GAAcC,GAGrBC,GAAkB,CADZ,UAAiB,WAGhBC,GAAY,CACvB,CAACC,UAJ0B,UAIR,IACnB,CALU,SAKH,IAAKC,YAGDC,GAAW,SAACpB,GACvB,IAAKA,EAAS9B,OACZ,OAAO8C,GAGT,IAAIK,EAASrB,EACVvG,KAAI,qBAAG6H,SAAYpK,eACnBqK,KAAK,GACFC,EAAYC,IAAUJ,GAAQ,uDAC9BK,EAAaD,IAAUJ,GAAQ,mCAAEF,EAAF,iBAAeA,KACpD,MAAO,CAACM,IAAQD,GAAYC,IAAQC,K,yDClDzBC,GAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,IAAOC,EAAjB,uDAAiC,EAAjC,OAC5BC,GAAO,CAACH,EAAOC,GAAMC,IAGVC,GAAS,SAACC,GAAD,IAASF,EAAT,uDAAyB,EAAzB,MAA+B,CACnDL,IAAcQ,OAAOD,EAAO,IAAKF,GACjCL,IAAcQ,OAAOD,EAAO,GAAIF,KAM5BI,GAAS,6CADO,IACP,OAEFC,GAAU,kBACrBC,UAAWA,OAAOC,WAAWH,IAAWI,SAM7BC,GAAW,SAAC,GAAD,SAAGC,QAAWpL,QACzBqL,GAAgB,SAAC,GAAD,SAAGD,QAAWrL,UAA6B,GAC3DuL,GAAgB,SAAC,GAAD,SAAGF,QAAWrL,UAA6B,GCR3DwL,GAAM,SAAC,GAAgD,IAAD,EAA7CnK,EAA6C,EAA7CA,KAA6C,IAAvCoK,mBAAuC,MAAzBjE,GAAWkB,QAAc,EAEzDtB,EAAStB,qBAAWmB,IAApBG,KACA7B,EAAkBO,qBAAWpB,GAA7Ba,cACR,IAAKA,EAAcwB,OACjB,OAAO,KAGT,IAMM2E,EAAqB,CACzBvL,MAjBgB,aAkBhBwL,UAlBgB,aAmBhBjL,YAAa,GACbkL,cAAe,GACfhL,OAAQ,GAGF6I,EAAsBD,GAAtBC,QAASC,EAAaF,GAAbE,SAEXmC,EAAazE,EAAKF,IAClB4E,EAAgB1E,EAAKF,IAKnB2B,EAAaY,EAAbZ,SACFkD,EAAWlD,EAASmD,QAJL,SAAC,GAAD,IAAG/C,EAAH,EAAGA,WAAH,OACnB5H,GAAQ4H,EAAWS,KAAcrI,KAK/B4K,EArCU,GAsCV5K,IACF4K,EAAOC,IAELJ,GAAiBA,EAAcT,QAAQtB,MACzCkC,EA3CQ,IA8CV,IAAM1L,EAASuL,GAAiBA,EAAcT,QAAQtB,IAClD,CAAC+B,EAAcT,QAAQtB,IAAK+B,EAAcT,QAAQrB,MAElDC,GADA5I,EACS0K,EACApC,GAAYd,UAenBsD,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAAgBN,EAAcM,SAAWA,GAS3DC,EAAO9G,EACR+G,SAvBY,SAAC,GAAD,SAAGzH,UACN,GAAGiC,OAAOxE,KAClB,gBAAG8J,EAAH,EAAGA,OAAH,IAAWf,QAAX,MAAwE,CACtEe,SACArC,IAFF,EAAsBA,IAGpBC,KAHF,EAA2BA,KAIzBuC,KAJF,EAAiCA,KAK/BpM,MALF,EAAuCA,MAMrCF,OANF,EAA8CA,OAO5CD,SAPF,EAAsDA,gBAsBvDgM,QAAO,gBAAGO,EAAH,EAAGA,KAAH,OAAeV,GAAcA,IAAeU,KAGtD,GAAIT,EAAe,CAEjB,IAAMU,EAAgBH,EAAKI,UAAUN,GAErCE,GACqB,IAAnBG,EACI,GADJ,sBAGSH,EAAKK,MAAM,EAAGF,IAHvB,YAISH,EAAKK,MAAMF,EAAgB,IAJpC,CAKMH,EAAKG,KAIf,IAAMG,EAAe,SAACC,GACpB,OAAOd,EACHK,EAAcS,GACZ/M,EACAA,EACFA,GAGNgB,QAAQiD,IAAR,0BACqBzC,EADrB,kBACmC4K,EADnC,uBAEKH,GAAiB,IAAIM,OAF1B,sBAGgBL,EAAShF,OAHzB,YAGmC8B,EAAS9B,OAH5C,kBAIIsF,EAAKtF,OAJT,iBAKWgF,EAAShF,OALpB,oBAKsCxG,IAEtC,IAAMqJ,EAAOD,GAAYd,SAAS,GAElC,OACE,kBAAC,IAAD,CACEgE,UAAWC,KAAWC,KAAOC,WAAR,mBAClBD,KAAO1L,KAAOA,GADI,cAElB0L,KAAOE,MAAQjC,MAFG,IAIrBzK,OAAQA,EACR0L,KAAMA,EACNiB,QAvHU,GAwHVC,QAvHM,GAwHNC,UAAWtD,GACXuD,mBAAoB,GACpBC,aAAa,GAEb,kBAACC,EAAA,EAAc9B,IACbpK,GAAQ,kBAACmM,EAAA,EAAD,CAASnB,KAAMzC,EAAM6D,MAhHR,CACzBtN,MAAO,YACPO,YAAa,EACbkL,cAAe,GACfhL,OAAQ,KA6GLmL,EAASzJ,KAAI,SAAC0G,GAAD,OACZ,kBAACwE,EAAA,EAAD,CACEjL,IAAKyG,EAAQC,WAAWyE,QACxBrB,KAAMrD,EACNyE,MAAO/B,OAGVW,EAAK/J,KAAI,SAACsK,GAAD,OACR,kBAAC,EAAD,CACErK,IAAKqK,EAAER,OACPrM,YAAa,CAAC6M,EAAE7C,IAAK6C,EAAE5C,MACvBhK,SAAU4M,EAAE5M,SACZE,WAAYyM,EAAaC,GACzB3M,OAAQ2M,EAAE3M,c,oCCtJP0N,GAAb,oDACE,WAAYC,GAAQ,IAAD,+BACjB,cAAMA,IACDC,MAAQ,CAAEC,UAAU,GAFR,EADrB,+DAUoBC,EAAOC,GACvBnN,QAAQkN,MAAM,gBAAiBA,EAAOC,KAX1C,+BAeI,OAAIC,KAAKJ,MAAMC,SACN,KAGFG,KAAKL,MAAMtK,YAnBtB,gDAMkCyK,GAC9B,MAAO,CAAED,UAAU,OAPvB,GAAmCI,IAAMC,W,2BCE5BC,GAAS,SAAC,GAAgE,IAAD,IAA7D5N,cAA6D,MAApD,EAAoD,MAAjDP,cAAiD,aAAjCoO,YAAiC,aAAnBC,YAAmB,SAC9EnO,EAAQF,EAAS,MAAQ,QAIzBI,EAAaG,IAAWP,EAAS,EAAI,GAE3C,OACE,yBACE4M,UAAWC,KAAW,eAAGyB,KAAUC,KAAOvO,IAC1CwO,MARS,GASTC,OATS,IAWT,4BAAQC,GAAIC,EAAUC,GAAID,EAAUjH,EAAGtH,EAAYI,KAAMN,KACvDkO,GAAQC,IACR,4BACEK,GAAIC,EACJC,GAAID,EACJjH,EAfO,EAgBPlH,KAAK,OACLE,OAAQR,IAGXmO,GACC,4BACEK,GAAIC,EACJC,GAAID,EACJjH,EAvBO,EAwBPlH,KAAK,OACLE,OAAQR,MC7BL2O,I,WAAmB,WAAO,IAAD,EACdtL,mBAAS,IADK,mBAC7BlB,EAD6B,KACxByM,EADwB,KAG5BvJ,EAAkBM,qBAAWpB,GAA7Bc,cAeR,OAbA3B,qBAAU,WACR,IAAMmL,EAAS,GACfxJ,EACGlD,KAAI,qBAAGC,OACPwG,SAAQ,SAACxG,GACRyM,EAAOzM,GAAO+G,GAAgB/G,GAC3BD,KAAI,qBAAG2G,WAAcyE,WACrBuB,UAGLF,EAAOC,KACR,CAACxJ,IAEGlD,I,oBCfI4M,GAAY,SAAC,GAKnB,IAAD,IAJJrK,iBAII,MAJQ,GAIR,EAHJT,EAGI,EAHJA,MAGI,IAFJ+K,kBAEI,SADJC,EACI,EADJA,cACI,EAC0B5L,mBAAS,IADnC,mBACG6L,EADH,KACYC,EADZ,OAEwB9L,mBAAS,MAFjC,mBAEG+L,EAFH,KAEWC,EAFX,KAIEC,EAAWzE,KAAY,IAAM,IAC7B0E,EAAY,GAAMD,EACtBE,EAAgB,GAAhBA,EAAiD,GACjDlB,EAAQgB,EAAWE,EADQ,GAE3BjB,EAASgB,EAF8B,GAEFC,EAEjCC,EAAWC,iBAAO,MAClBC,EAAWD,iBAAO,MAyDxB,GAvDAhM,qBAAU,WAER,GAAKgB,EAAUkC,OAAf,CAIA,IAAMgJ,EAAW,SAAC,GAAD,IAAGhJ,EAAH,EAAGA,OAAQiJ,EAAX,EAAWA,WAAX,OACfZ,EAAgBY,EAAajJ,GAEzBkJ,EAAUzF,GAAe3F,EAAU,IAEnCqL,EAAU,CACd,EACA5F,IAAA,CAAQ,GAAR,mBAAgBzF,EAAUyH,SAAQ,qBAAG6D,QAAiB7N,IAAIyN,OAGtDK,EAAgB9F,IAAc,SAG9B+F,EAAS/F,MAAegG,OAAOL,GAASM,MAAM,CAAC,EAAG9B,IAClD+B,EAAQlG,MAEXmG,WAAWL,GACXM,SAAS,GACTC,MAAMN,GACNO,MAAMtG,IAAYuG,MAAM,IAC3BvG,IAAUsF,EAASkB,SAASC,KAAKP,GAEjC,IAAMQ,EAAS1G,MAAiBgG,OAAOJ,GAASK,MAAM,CAAC7B,EAAQ,IACzDuC,EAAQ3G,MAAcqG,MAAMK,GAAQJ,MAAM,GAChDtG,IAAUwF,EAASgB,SAASC,KAAKE,GAEjC,IAAMC,EAAO5G,MAEV6G,MAAM7G,IAAiB8G,QAAQ,KAC/BC,GAAE,SAACzE,GAAD,OAAOyD,EAAOzD,EAAE0E,OAClBC,GAAE,SAAC3E,GAAD,OAAOoE,EAAOjB,EAASnD,OAIxB4E,EAFU3M,EAAUvC,KAAI,SAACsK,GAAD,OAAOA,EAAEuD,QAAM7N,IAAI4O,GAExB5O,KAAI,SAACmP,EAAMC,GAAP,MAAc,CAAED,OAAMlP,IAAKmP,MAAMC,UAE5DrC,EAAWkC,GAEX,IAAMrB,EAAOtL,EAAU,GAAGsL,KAC1B,GAAIA,EAAKpJ,OAAQ,CACf,IAAM6K,EAAUzB,EAAKA,EAAKpJ,OAAS,GACnCyI,EAAU,CACRb,GAAI0B,EAAOuB,EAAQN,IACnBzC,GAAImC,EAAOjB,EAAS6B,IACpBjK,EAAG,QAGN,CAAC+G,EAAQ7J,EAAWuK,EAAeX,KAEjC5J,EAAUkC,OACb,OAAO,KAGT,IAAM8K,EAAQhN,EAAU,GAAGgN,MACrBC,EAAYzC,EAAQtI,OAAS,EAEnC,OACE,yBAAK8F,UAAWkF,KAAY/E,WACzBmC,GACC,yBAAKtC,UAAWkF,KAAYC,QACzB5N,GAAS,yBAAKyI,UAAWkF,KAAY3N,OAAQA,GAC5B,kBAAVyN,GACN,yBAAKhF,UAAWkF,KAAYF,OAAQA,IAI1C,yBAAKhF,UAAWkF,KAAYE,MAAOxD,MAAOgB,EAAUf,OAAQgB,GAC1D,uBAAGwC,UAAS,oBAAevC,EAAf,YAA8BA,EAA9B,MACV,uBACE9C,UAAW0B,KAAU4D,KACrBC,IAAKxC,EACLsC,UAAS,sBAAiBxD,EAAjB,OAEX,uBAAG7B,UAAW0B,KAAU4D,KAAMC,IAAKtC,IACnC,2BACGT,EAAQ/M,KAAI,WAAcoP,GAAd,IAAED,EAAF,EAAEA,KAAMlP,EAAR,EAAQA,IAAR,OACX,0BACEA,IAAKA,EACLsK,UAAWC,KAAWyB,KAAUkD,KAAX,eAClBlD,KAAUuC,QAAUY,IAAMI,IAE7BlF,EAAG6E,QAIRlC,GACC,uBAAG1C,UAAW0B,KAAU8D,KACtB,2BAAY9C,QCjHb+C,GAAS,SAAC,GAAc,IAAZjR,EAAW,EAAXA,KACf+D,EAA0BU,qBAAWpB,GAArCU,sBAER,OAAKA,EAAsB2B,OAKzB,kBAAC,GAAD,KACE,kBAAC,GAAD,CACElC,UAAWO,EAAsB,GAAGP,UACpCuK,gBAAiB/N,KAPd,M,wCCJEkR,GAAU,SAAC,GAAuD,IAArDjP,EAAoD,EAApDA,SAAoD,IAA1CkP,mBAA0C,MAA5B,EAA4B,MAAzBC,kBAAyB,SACtEhF,EACY,IAAhB+E,EACIzF,KAAO2F,OACS,IAAhBF,EACAzF,KAAO4F,OACS,IAAhBH,EACAzF,KAAO6F,SACP7F,KAAO8F,aACb,OACE,6BAAShG,UAAWC,KAAWC,KAAO+F,QAASrF,IAC7C,yBACEZ,UAAWC,KAAWC,KAAOgG,QAAR,eAClBhG,KAAOE,MAAQjC,QAGlB,yBACE6B,UAAWC,KAAWC,KAAOiG,WAAR,eAClBjG,KAAO0F,WAAaA,KAGtBnP,M,oBCtBE2P,GAAY,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,GAAG9O,EAAqC,EAArCA,MAAO2O,EAA8B,EAA9BA,QAA8B,IAArBpD,cAAqB,SAClE,OACE,yBAAK9C,UAAWC,KAAWC,KAAOoG,UAAR,eAAsBpG,KAAO4C,OAASA,KAC7DuD,GAAM,4BAAKA,GACX9O,GAAS,4BAAKA,GACd2O,GAAW,yBAAKlG,UAAWE,KAAOqG,MAAOL,K,sCCE1CM,GAAiBC,KACpBC,QACAC,UACA5E,KAAK,GACL6E,YAAY,OACZ9S,OAAO,WACJ+S,GAAkBJ,KAASC,QAAQC,UAAU5E,KAAK,GAAGjO,OAAO,WAErDgT,GAAc,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACvDC,EAAcnE,iBAAO,MACrBoE,EAAapE,iBAAO,MAClBjK,EAAgBE,qBAAWpB,GAA3BkB,YAHqE,EAI/CpC,mBAAS,IAJsC,mBAItE0Q,EAJsE,KAI7DC,EAJ6D,KAqF7E,OA/EA7J,IAAU2J,EAAWnD,SAASC,KAAKsC,IACnC/I,IAAU2J,EAAWnD,SAASC,KAAK2C,IAEnC7P,qBAAU,WACR,GAAKiQ,EAAO/M,OAAZ,CAIA,IAmBMqN,EAAY,SAAC,GAKZ,IAAD,IAJJC,KAAQjQ,EAIJ,EAJIA,MAAOkQ,EAIX,EAJWA,MAAO/Q,EAIlB,EAJkBA,MAAOgR,EAIzB,EAJyBA,UAC7BzJ,EAGI,EAHJA,OAGI,gBAFJgJ,OAEI,GAFKzD,EAEL,KAFaW,EAEb,SADJwD,aACI,SAEEC,EADaF,EAAYX,GACH,EAAI,EAE1BvC,EAAI9N,EAAQ8M,EAAO9M,GAASsQ,EAC5Ba,EAAQF,EAAQ,GAAK,EACrBjD,EAAIP,EAAOuD,EAAYzJ,GACvB6J,EAAU,CACdC,KAAM,CACJxQ,QACAkQ,SAEFjD,EAAGoD,EAAQpD,EACXE,IACAsD,QAAS,CACPrU,OAAQ,GAEVL,MAAO,oBAUT,OAPIoD,GACFoR,EAAQG,GAAKL,GAASZ,EAAY,GAClCc,EAAQI,GAAKxD,IAEboD,EAAQK,GAAa,GAARP,EACbE,EAAQM,GAAa,GAARP,GAERC,GAQHO,EAAkBtP,EAAY0G,SALjB,SAAC,GAAD,IAAG7B,EAAH,EAAGA,MAAOC,EAAV,EAAUA,IAAKI,EAAf,EAAeA,OAAf,MAA4B,CAC7CL,EAAQ2J,EAAU,CAAEC,KAAM5J,EAAOK,SAAQgJ,gBAAY9N,EACrD0E,EAAM0J,EAAU,CAAEC,KAAM3J,EAAKI,SAAQgJ,SAAQU,OAAO,SAAUxO,MAGRgG,OAAOmJ,SAEzDR,EAAUS,eACbxP,YAAYsP,GACZ3I,KAAK8I,MAER/K,IAAU0J,EAAYlD,SAASC,KAAK4D,GAEpC,IAAMW,EAAa1P,EAAYtD,KAnEd,SAAC,EAAwBoP,GAAO,IAA7BjH,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,IAAKI,EAAgB,EAAhBA,OAC9B,GAAKL,GAAUC,EAAf,CAD8C,kBAIrBoJ,EAJqB,GAIvCzD,EAJuC,KAI/BW,EAJ+B,KAKxCuE,EAAuB,IAAXzK,EACZ0K,EAAUD,EAAYlC,GAAiBK,GAE7C,MAAO,CACLnR,IAAI,GAAD,OAAKkI,EAAL,YAAcC,EAAd,YAAqBgH,GACxBL,EAAGhB,EAAO,IAAMkF,EAAY,EAAI1B,GAChCtC,EAAGP,EAAOvG,EAAM8J,UAAYzJ,GAC5B2D,MAAOoF,EACPnF,OACEsC,EAAOtG,EAAI6J,UAAYzJ,GAAUkG,EAAOvG,EAAM8J,UAAYzJ,GAC5DrK,KAAM+U,EAAQ9N,WAoD2BsE,OAAOmJ,SACpDhB,EAAWmB,MACV,CAAC1P,EAAagO,EAAcC,EAAWC,IAGxC,oCACE,8BACE,8BAAU2B,GAAG,YACX,0BAAM7I,EAAGmH,EAAUjD,UACnB,0BAAMlE,EAAGmH,EAAU2B,aAGvB,uBAAGtD,IAAK6B,GACLC,EAAQ5R,KAAI,SAACqT,GAAD,OACX,0CAAUA,EAAV,CAAsBC,SAAS,wBAGnC,uBAAG/I,UAAWE,KAAOnH,YAAawM,IAAK4B,MC7GhC6B,I,OAAgB,SAAC,GAA+B,IAA7B/B,EAA4B,EAA5BA,OAA4B,IAApBgC,iBAAoB,MAAR,EAAQ,EAClDrQ,EAAYK,qBAAWpB,GAAvBe,QADkD,EAE5BjC,mBAAS,IAFmB,mBAEnDuS,EAFmD,KAE1CC,EAF0C,KAuC1D,OAnCAnS,qBAAU,WACR,GAAK4B,EAAQsB,QAAW+M,EAAO/M,OAA/B,CAGA,IAAMkP,EAAkBtR,EAAgBc,GAClCyQ,EAAmBpR,EAAiBW,GACpC0Q,EAAcF,EAAgBG,WAC9BC,EAAeH,EAAiBE,WAC7BpF,EARK,YAQK8C,EARL,MAURtT,EAASsV,EAAY,EAAI,EACzB9J,EAAS,SAAC,GAAD,SAAGsC,KAAkB,GAC9BgI,EAAS,SAAC,GAAD,MAAmB,CAAE/B,UAArB,EAAGjD,GAAiCiF,MAApC,EAAOjI,OAChBkI,EAAQ,SAAC,GAAD,IAAGjC,EAAH,EAAGA,UAAWgC,EAAd,EAAcA,MAAd,OACZ,YAAI,IAAIE,MAAMF,IAAQjU,KAAI,SAACoU,EAAGC,GAAJ,MAAe,CAAEpC,YAAWoC,aAClDC,EAAcT,EAAYnK,OAAOA,GAAQ1J,IAAIgU,GAAQhK,QAAQkK,GAC7DK,EAAeR,EAAarK,OAAOA,GAAQ1J,IAAIgU,GAAQhK,QAAQkK,GAE/DM,EAAe,SAACC,GAAD,OAAU,gBAAGxC,EAAH,EAAGA,UAAWoC,EAAd,EAAcA,MAAd,MAA2B,CACxDpU,IAAI,GAAD,OAAKgS,EAAL,YAAkBoC,GACrBhI,GAAIoI,GAAQJ,EAAQ,KAAQ,EAAInW,EAChCqO,GAAImC,EAAOuD,GACX5M,EAAGnH,EACH+U,UAAoB,IAATwB,KAEPC,EAAmBF,EAAa,GAChCG,EAAoBH,GAAc,GAElCI,EAAiBN,EAAYtU,IAAI0U,GACjCG,EAAkBN,EAAavU,IAAI2U,GAEnCG,EAAU,sBAAOD,GAAP,YAA2BD,IAC3ClB,EAAWoB,MACV,CAACtB,EAAWrQ,EAASqO,IAGtB,2BACGiC,EAAQzT,KAAI,kBAAGC,EAAH,EAAGA,IAAKoM,EAAR,EAAQA,GAAIE,EAAZ,EAAYA,GAAIlH,EAAhB,EAAgBA,EAAG4N,EAAnB,EAAmBA,UAAnB,OACX,uBACEhT,IAAKA,EACLsK,UAAWC,MAAU,mBAClByB,KAAUuC,QAAUyE,GADF,cAElBhH,KAAUmH,UAAYH,GAFJ,KAKrB,4BAAQ5G,GAAIA,EAAIE,GAAIA,EAAIlH,EAAGA,W,oBC9C/B0P,GAAa,SAAClH,EAAMe,EAAMpG,GAC9B,IAAKqF,EAAKpJ,OACR,MAAO,GAGT,IAAIsF,EAAO8D,EAAK7N,KAAI,kBAAqB,CACvCiS,UADkB,EAAGjD,GAErB/N,MAFkB,EAAOwD,OAET+D,MAGZwM,EAAQjL,EAAK,GAEbkL,EAAc,CAAEhD,UADblI,EAAKA,EAAKtF,OAAS,GACUwN,UAAWhR,MAAO,KAClDiU,EAAW,CAAEjD,UAAW+C,EAAM/C,UAAWhR,MAAO,KAGtD,OAAO2N,EADP7E,EAAI,sBAAOA,GAAP,CAAakL,EAAaC,EAAUF,MAI7BG,GAAU,WAAO,IACpBhS,EAAYK,qBAAWpB,GAAvBe,QADmB,EAGCjC,mBAAS,IAHV,mBAGpBsQ,EAHoB,KAGZ4D,EAHY,OAIalU,mBAAS,IAJtB,mBAIpBoQ,EAJoB,KAIN+D,EAJM,OAKDnU,mBAAS,IALR,mBAKpBoU,EALoB,KAKbC,EALa,OAMOrU,mBAAS,IANhB,mBAMpBuQ,EANoB,KAMT+D,EANS,KASrBrJ,EAAQzD,KAAY,IAAM,IAC9B2E,EAAgB,GAAhBA,EAAgD,EAEhDD,EADS,OACYC,EAFiB,GAGtCF,EAAWhB,EAAQkB,EAHQ,EAIvBoI,EAAYtJ,EAAQ,EACpBuJ,EAA0B,GAAZD,EACdE,EAAkC,GAAZF,EAEtBG,EAASrI,iBAAO,MAChBD,EAAWC,iBAAO,MAClBC,EAAWD,iBAAO,MAiGxB,OA/FAhM,qBAAU,WACR,GAAK4B,EAAQsB,OAAb,CAIA,IAAMkP,EAAkBtR,EAAgBc,GACxCkS,EAAgB1B,EAAgBxL,OAChC,IAAMyL,EAAmBpR,EAAiBW,GACpC0Q,EAAcF,EAAgBG,WAC9BC,EAAeH,EAAiBE,WAChC+B,EAAa3N,GAAeyL,GAE5B5F,EAAS/F,MAEZgG,OAAO,CAAC,EAAGhG,IAAO6L,GAAa,SAACiC,GAAD,OAAOA,EAAErR,YACxCwJ,MAAM,CAAC,EAAGyH,IAEPhH,EAAS1G,MAAegG,OAAO6H,GAAY5H,MAAM,CAAC,EA5B/C,SA8BTmH,EAAU,CAACrH,EAAQW,IAEnB,IAAMZ,EAAgB9F,IAAc,MAE9B2G,EAAQ3G,MAEXmG,WAAWL,GACXO,MAAMK,GACNJ,MAAMtG,IAAauG,MAAM,IACzBH,SAAS,GACZpG,IAAUwF,EAASgB,SAASC,KAAKE,GAEjC,IAAMT,EAAQlG,MAAgBqG,MAAMN,GAAQO,MAAM,GAClDtG,IAAUsF,EAASkB,SAASC,KAAKP,GAkBjC,IAAM6H,EAAc/N,MAEjB6G,MAAM7G,IAAiB8G,QAAQ,KAC/BC,GAAE,SAACzE,GAAD,OAAOyD,EAAOzD,EAAE7F,WAClBwK,GAAE,SAAC3E,GAAD,OAAOoE,EAAOpE,EAAE0E,OACfgH,EAAehO,MAElB6G,MAAM7G,IAAiB8G,QAAQ,KAC/BC,GAAE,SAACzE,GAAD,OAAOyD,GAAQzD,EAAE7F,WACnBwK,GAAE,SAAC3E,GAAD,OAAOoE,EAAOpE,EAAE0E,OAEfiH,EAAcF,EAAYlC,GAC1BqC,EAAeF,EAAajC,GAClCwB,EAAS,CACP,CAAEpG,KAAM8G,EAAahW,IAAK,WAC1B,CAAEkP,KAAM+G,EAAcjW,IAAK,cAG7B,IAAMkW,EAAkBnO,MAErB+G,GAAE,SAACzE,GAAD,OAAOyD,EAAOzD,EAAErJ,UAClBgO,GAAE,SAAC3E,GAAD,OAAOoE,EAAOpE,EAAE2H,cAEfmE,EAAmBpO,MAEtB+G,GAAE,SAACzE,GAAD,OAAOyD,GAAQzD,EAAErJ,UACnBgO,GAAE,SAAC3E,GAAD,OAAOoE,EAAOpE,EAAE2H,cAEfoE,EAActI,EAAOuI,OAAO,GAAKvI,EAAOuI,OAAO,GAC/CC,EAAkBxB,GACtBlB,EACAsC,EACAE,GAEIG,EAAmBzB,GACvBhB,EACAqC,EACAC,GAGFb,EAAa,CAAEhH,QAAS+H,EAAiBnD,SAAUoD,OAClD,CAACrT,EAtGO,OAsGUuS,IAKnB,yBAAKnL,UAAWkM,KAAc/L,WAC5B,yBAAKH,UAAWkM,KAAcC,OAC5B,yBAAKnM,UAAWkM,KAAcE,MAA9B,QACA,yBAAKpM,UAAWkM,KAAcG,OAA9B,SAEF,yBACErM,UAAWkM,KAAcI,IACzB/G,IAAK8F,EACLzJ,MAAOgB,EACPf,OAAQgB,GAER,uBAAGwC,UAAS,oBAAevC,EAAcoI,EAA7B,YAA0CpI,EAA1C,MAmBV,2BACGiI,EAAMtV,KAAI,WAAgBoP,GAAhB,MAAGD,EAAH,EAAGA,KAAMlP,EAAT,EAASA,IAAT,OACT,0BACEA,IAAKA,EACLsK,UAAWC,KAAWyB,KAAUkD,MAAX,mBAClBlD,KAAUuC,SAAWY,GADH,cAElBnD,KAAUmH,SAAWhE,GAFH,IAIrB9E,EAAG6E,QAIT,2BACE,kBAAC,GAAD,CAAeqC,OAAQA,EAAQgC,UAzJvB,OA2JV,2BACE,kBAAC,GAAD,CACElC,aAAcA,EACdC,UAAWoE,EACXnE,OAAQA,EACRC,UAAWA,KAQf,uBACElH,UAAWC,KAAWyB,KAAU4D,KAAM4G,KAAc5G,MACpDC,IAAKtC,Q,wCCtMJsJ,GAAgB,CAC3BC,QAAS,qBAAGhO,QAAWiO,KACvBC,KAAM,qBAAGlO,QAAWmO,mBACpBC,cAAe,qBAAGpO,QAAWqO,eAE/BN,GAAc1Q,QAAU0Q,GAAcG,K,wBCVzBI,GAAe,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,EACDA,EAAMvO,QAApCwO,EAD+B,EAC/BA,QAASC,EADsB,EACtBA,MAAO/P,EADe,EACfA,IAAKC,EADU,EACVA,KACrBoC,EAAWwN,EAAXxN,OACF1E,EAAG,0EAAsE0E,GACzE2N,EAAYD,EAAME,MAAM,KACxBC,EAAQ,UAAMF,EAAUhT,OAAhB,YACS,IAArBgT,EAAUhT,OAAe,OAAS,QADtB,gBAGR1F,EAAO+X,GAAcK,cAAcG,GACnC3M,EAAQjC,KAERkP,EAAS,SAACC,GAAD,OAAOC,OAAOC,WAAWF,GAAGG,QAAQ,IAC7Cva,EAAcgK,EAAG,UAAMmQ,EAAOnQ,GAAb,iBAAuBmQ,GAAQlQ,GAA/B,SAA2C,GAClE,OACE,yBAAK6C,UAAWE,KAAOC,WACrB,6BAAM6M,GACL5M,GAAS,yBAAKJ,UAAWE,KAAOwN,WAAYlZ,GAC7C,yBAAKwL,UAAWE,KAAOwN,WAAYxa,GACnC,6BACE,8BAAOka,GACNF,EAAUzX,KAAI,SAACkY,GAAD,OACb,0BAAMjY,IAAKiY,EAAM3N,UAAWE,KAAOyN,MAAOA,OAG9C,yBAAK3N,UAAWE,KAAOwN,WAAvB,eAA8C,uBAAG1N,UAAWE,KAAO0N,KAAMC,KAAMhT,GAAM0E,MCd9EuO,GACF,EADEA,GAED,EAFCA,GAGA,EAGAC,GAAQ,SAAC,GAA0C,IAAD,EdAlCrG,EcALqF,EAAuC,EAAvCA,MAAuC,IAAhCiB,YAAgC,MAAzBF,GAAyB,IAC9B7U,qBAAWmB,IAAlCG,EADqD,EACrDA,KAAME,EAD+C,EAC/CA,aACRwE,EAAgB1E,EAAKF,IAOrBjH,EAASmL,GAASwO,GAClBvL,EAAO/C,GAAcsO,GACrBtL,EAAO/C,GAAcqO,GAErBvY,EAAO+X,GAAcK,cAAcG,GAEnCkB,EAAcD,IAASF,GACvBI,EAAaF,IAASF,GACtBK,GdjBqBzG,EciBDqF,EAAMvO,QAAQkJ,UdhBxC0G,cAAS1G,EAAW,qBAAqB2F,OAAO,WciB1CjN,EAAQjC,KAEd,OACE,yBACE6B,UAAWC,KAAWC,KAAOC,WAAR,mBAClBD,KAAOmO,SAAWH,GADA,cAElBhO,KAAOoO,UAAYL,GAFD,cAGlB/N,KAAOE,MAAQA,GAHG,IAKrBmO,QAvBgB,WAClB,IAAMC,EACJvP,GAAiBA,EAAcM,SAAWwN,EAAMxN,OAAS,KAAOwN,EAClEtS,EAAaJ,GAA+BmU,KAsB1C,yBAAKxO,UAAWE,KAAO6M,OACrB,yBAAK/M,UAAWE,KAAOuO,SACrB,0BAAMzO,UAAWE,KAAOwO,WAAYtO,GAAS,8BAAO5L,EAAP,OAAwB2Z,IAEvE,yBAAKnO,UAAWC,KAAW,eAAEC,KAAO9M,OAASA,KAC3C,kBAAC,GAAD,CAAQA,OAAQA,EAAQoO,KAAMA,EAAMC,KAAMA,IAC1C,kCAAQsL,EAAMvO,QAAQmQ,eAGzBT,GAAc,kBAAC,GAAD,CAAcnB,MAAOA,MCtD7B6B,GAAY,SAAC,GAAqB,IAAD,IAAlBC,cAAkB,MAAT,GAAS,EAEtCC,EADW7V,qBAAWmB,IAApBG,KACcF,IAEhB2T,EAAO,SAAC,GAAD,IAAGzO,EAAH,EAAGA,OAAH,OACXuP,EACIvP,IAAWuP,EAASvP,OAClBuO,GACAA,GACFA,IAEN,OACE,yBAAK9N,UAAWE,KAAO2O,QACpBA,EAAOpZ,KAAI,SAACsZ,GAAD,OACV,kBAAC,GAAD,CAAOrZ,IAAKqZ,EAAExP,OAAQwN,MAAOgC,EAAGf,KAAMA,EAAKe,UChBtCC,GAAU,WACrB,IAAMC,EACJ,wDAC6B,IAC3B,uBAAGpB,KAAK,6CAAR,0BAFF,uDAKuD,IACrD,uBAAGA,KAAK,8DAAR,wBANF,kDASkD,IAChD,uBAAGA,KAAK,8EAAR,8BAEK,IAZP,8BAa6B,uBAAGA,KAAK,wBAAR,WAb7B,OAa4E,IAC1E,uBAAGA,KAAK,gCAAR,iBAdF,0BAec,IACZ,uBAAGA,KAAK,iDAAR,aAhBF,KAoBF,OAAO,kBAAC,GAAD,CAAWtW,MAAM,eAAe2O,QAAS+I,KCR5CC,GAAYzR,IAAc,aAEnB0R,GAAc,WAAO,IAAD,EACPlW,qBAAW3C,GAA3BM,cADuB,MACd,GADc,EAyCzBwY,GAtCOxY,EAAOyY,aAChBH,GAAU,IAAII,KAAK1Y,EAAOyY,cAsC5B,oCACE,8CACmB,IACjB,uBAAGxB,KAAK,qCAAR,aAFF,OAOJ,OACE,kBAAC,GAAD,KAgCE,kBAAC,GAAD,CAASlI,YAAa,EAAGC,YAAY,GACnC,kBAAC,GAAD,CAAWrO,MAAM,yBAAyB2O,QA7C9C,qJA6CgEpD,QAAQ,IACpE,kBAAC,GAAD,OAGF,kBAAC,GAAD,CAAS6C,YAAa,GACpB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAWpO,MAAM,QAAQ2O,QAASkJ,OCtG7BG,GAAgB,WAAO,IAC1BlX,EAAmBY,qBAAWpB,GAA9BQ,eAEF8G,EADWlG,qBAAWmB,IAApBG,KACYF,IAEpB,IAAKhC,EAAe6B,OAClB,OAAO,KAET,IACMsV,EADM1X,EAAgBO,GAAgB4B,OACvBkF,QACnB,gBAAcO,EAAd,EAAGlB,QAAWkB,KAAd,OAA4BP,GAAUA,IAAWO,KAGnD,OAAO,kBAAC,GAAD,CAAWmP,OAAQW,KCffC,GAAiB,SAAC,GAAc,IAAZjb,EAAW,EAAXA,KACzBkb,EAAmBzN,KACnB0N,EACJ,8BACID,EAAiBlb,IAAS,IAAIiB,KAAI,SAACma,GAAD,OAClC,yBAAKla,IAAKka,GAAUA,OAY1B,OACE,oCACE,kBAAC,GAAD,CAAWrY,MAAO/C,EAAM0R,QAASyJ,IACjC,kBAAC,GAAD,CAAQnb,KAAMA,MCbPqb,GAAe,SAAC,GAAc,IAAZrb,EAAW,EAAXA,KAE7B,OACE,kBAAC,GAAD,CAAc2D,QAAS,CAAE3D,SACvB,kBAAC,GAAD,CAASmR,YAAa,GACpB,kBAAC,GAAD,CACEO,QACE,kBAAC,IAAD,CAAMlG,UAAW8P,KAAgBlC,KAAMmC,GAAG,KAA1C,qBAON,kBAAC,GAAD,CAASpK,YAAa,GACpB,kBAAC,GAAD,CAAgBnR,KAAMA,KAGxB,kBAAC,GAAD,CAASmR,YAAa,EAAGC,YAAY,GACnC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAKpR,KAAMA,MAIf,kBAAC,GAAD,CAASmR,YAAa,GACpB,kBAAC,GAAD,CAAWpO,MAAM,sBACjB,kBAAC,GAAD,OAGF,kBAAC,GAAD,CAASoO,YAAa,GACpB,kBAAC,GAAD,S,oBChBOqK,OAjBf,WACE,OACE,yBAAKhQ,UAAWE,KAAO+P,KACrB,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAgBrL,KAAK,KACnB,kBAAC,GAAD,CAAcsL,SAAO,GACnB,kBAAC,GAAD,CAAaA,SAAO,KAEtB,kBAAC,GAAD,CAActL,KAAK,SACjB,kBAAC,GAAD,CAAcA,KAAK,WCNX0D,QACa,cAA7BlK,OAAOsQ,SAASyB,UAEiB,UAA7B/R,OAAOsQ,SAASyB,UAEhB/R,OAAOsQ,SAASyB,SAASC,MACrB,2DCZZC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,GAAD,OAEJjZ,SAASkZ,eAAe,SD0HpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAACC,GACHA,EAAaC,gBAEhBC,OAAM,SAAC7P,GACJlN,QAAQkN,MAAMA,EAAM8P,a,mBEzIpCC,EAAOC,QAAU,CAAC,UAAY,4BAA4B,QAAU,0BAA0B,KAAO,uBAAuB,WAAa,6BAA6B,OAAS,yBAAyB,YAAc,8BAA8B,MAAQ,wBAAwB,OAAS,2B,mBCA7RD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,MAAQ,uBAAuB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,WAAa,4BAA4B,WAAa,8B,mBCAjUD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,SAAW,wBAAwB,MAAQ,qBAAqB,UAAY,yBAAyB,MAAQ,qBAAqB,OAAS,sBAAsB,QAAU,uBAAuB,MAAQ,qBAAqB,SAAW,0B,mBCAjSD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,IAAM,qBAAqB,SAAW,0BAA0B,QAAU,yBAAyB,MAAQ,uBAAuB,KAAO,sBAAsB,MAAQ,uBAAuB,KAAO,wB,mBCA9PD,EAAOC,QAAU,CAAC,UAAY,gCAAgC,YAAc,kCAAkC,UAAY,gCAAgC,KAAO,2BAA2B,KAAO,6B,mBCAnMD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,wBAAwB,KAAO,wBAAwB,OAAS,4B,mBCAlID,EAAOC,QAAU,CAAC,UAAY,yBAAyB,OAAS,sBAAsB,IAAM,mBAAmB,MAAQ,qBAAqB,MAAQ,uB,mBCApJD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,mBAAmB,KAAO,kBAAkB,KAAO,oB,mBCAhHD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,MAAQ,yB,804CCA1FD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,2B,mBCAnED,EAAOC,QAAU,CAAC,UAAY,yBAAyB,MAAQ,uB,626CCA/DD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,KAAO,4B,mBCAxED,EAAOC,QAAU,CAAC,OAAS,yB,kBCA3BD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,KAAO,kBAAkB,UAAY,uBAAuB,SAAW,sBAAsB,QAAU,qBAAqB,IAAM,iBAAiB,MAAQ,mBAAmB,KAAO,oB,mBCAhOD,EAAOC,QAAU,CAAC,IAAM,mB,kBCAxBD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,cAAgB,6BAA6B,SAAW,wBAAwB,UAAY,yBAAyB,MAAQ,qBAAqB,KAAO,oBAAoB,KAAO,oBAAoB,KAAO,oBAAoB,KAAO,oBAAoB,MAAQ,qBAAqB,MAAQ,qBAAqB,OAAS,yB","file":"static/js/main.de365c56.chunk.js","sourcesContent":["import React from \"react\";\nimport { Circle } from \"react-leaflet\";\n\nexport const Appearance = {\n  Normal: 0,\n  Dimmed: -1,\n  Highlighted: 1,\n};\n\nexport const Dot = ({ coordinates, severity = 0, active = false, appearance = Appearance.Normal }) => {\n  const color = active ? \"red\" : \"white\";\n\n  // TODO - set opacity in CSS\n  let opacity = 0.4;\n  if (severity >= 1) {\n    opacity = 0.7;\n  }\n  if (active) {\n    opacity = 0.9;\n  }\n  if (appearance === Appearance.Dimmed) {\n    opacity = 0.35;\n  }\n  if (appearance === Appearance.Highlighted) {\n    opacity = 0.9;\n  }\n  const baseRadius = active ? 250 : 150;\n\n  if (!coordinates[0]) {\n    console.warn(`Dot: coordinates = ${coordinates}`);\n    return null;\n  }\n\n  return (\n    <>\n      <Circle\n        center={coordinates}\n        radius={baseRadius}\n        color={color}\n        fill={true}\n        fillOpacity={opacity}\n        stroke={false}\n      ></Circle>\n      {severity >= 1 && (\n        <Circle\n          center={coordinates}\n          radius={baseRadius + 150}\n          weight={2}\n          color={color}\n          opacity={opacity}\n          fill={false}\n        ></Circle>\n      )}\n      {severity >= 2 && (\n        <Circle\n          center={coordinates}\n          radius={baseRadius + 300}\n          weight={2}\n          color={color}\n          opacity={opacity}\n          fill={false}\n        ></Circle>\n      )}\n    </>\n  );\n};\n","export async function getEnv() {\n  return getByAPI(\"env\");\n}\n\nexport async function getStatus() {\n  return getByAPI(`dispatch/status`);\n}\n\nexport async function getAnnotations() {\n  return getByAPI(`dispatch/history/annotations`);\n}\n\nexport async function getHistory() {\n  return getByAPI(`dispatch/history`);\n}\n\nexport async function getTweetsForArea(\n  area,\n  queryParams = { activeOrMajor: false, minimize: false }\n) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsForAreaMin(\n  area,\n  queryParams = { activeOrMajor: false, minimize: true, hiRes: true }\n) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsForAreaMinWeek(\n  area,\n  queryParams = { activeOrMajor: false, minimize: true, compare: 6 }\n) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsByArea(queryParams = { activeOrMajor: false }) {\n  return getByAPI(`dispatch/tweets/byArea`, queryParams);\n}\n\nexport async function getTweetsByType(area = \"seattle\") {\n  return getByAPI(`dispatch/tweets/byType/${area}`, { minimize: false });\n}\n\nexport async function getTweetsMajor24() {\n  return getByAPI(\"dispatch/tweets/major24\", { minimize: false });\n}\n\nexport async function getTweetsActive24() {\n  return getByAPI(\"dispatch/tweets/active24\", { minimize: false });\n}\n\nexport async function getTweetsStatic() {\n  return getByAPI(\"dispatch/static\");\n}\n\nexport async function getTweetsSeattleGov() {\n  return getByAPI(\"dispatch/seattle-gov\");\n}\n\nconst queryString = (query = {}) => {\n  const list = Object.keys(query).map(\n    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(query[key])}`\n  );\n  return list.join(\"&\");\n};\n\nasync function getByAPI(api = \"\", queryParams = {}) {\n  const allQueryParams = {\n    minimize: true,\n    ...queryParams,\n  };\n  const query = queryString(allQueryParams);\n  const response = await fetch(`/api/${api}?${query}`, {\n    // TODO - use axios?\n    headers: { Accept: \"application-json\" },\n  });\n\n  return response.json();\n}\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { getStatus } from \"../api\";\nconst deepEqual = require(\"fast-deep-equal/es6/react\");\n\nexport const StatusContext = createContext();\n\nconst useStatus = () => {\n  const [status, setStatus] = useState({});\n  const [previousStatus, setPreviousStatus] = useState({});\n\n  useEffect(() => {\n    const delay = 60 * 1000;\n\n    console.log(\n      `🟥 useStatus/starting checker @ every ${delay / 1000} seconds`\n    );\n    const checkForUpdates = async () => {\n      const newStatus = await getStatus();\n      // console.log(\n      //   `useStatus(${intervalId})/current status (next check in ${\n      //     delay / 1000\n      //   } sec)`,\n      //   newStatus\n      // );\n\n      if (!deepEqual(status, newStatus)) {\n        console.log(\"useStatus/setting new status:\", newStatus);\n        setPreviousStatus(status);\n        setStatus(newStatus);\n      }\n\n      if (status.env === \"development\") {\n        document.title = \"KSEA.live (dev)\";\n      }\n    };\n\n    checkForUpdates();\n    const intervalId = setInterval(checkForUpdates, delay);\n    return () => clearInterval(intervalId);\n  }, [status]);\n\n  return { status, previousStatus };\n};\n\nexport const StatusProvider = ({ children }) => {\n  const value = useStatus();\n  return (\n    <StatusContext.Provider value={value}>{children}</StatusContext.Provider>\n  );\n};\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\nimport {\n  getTweetsForArea,\n  getTweetsByArea,\n  getTweetsByType,\n  getHistory,\n  getAnnotations,\n  getTweetsActive24,\n  getTweetsMajor24,\n  getTweetsForAreaMin,\n  getTweetsForAreaMinWeek,\n} from \"../api\";\n\nimport { StatusContext } from \"./StatusContext\";\nconst deepEqual = require(\"fast-deep-equal/es6/react\");\n\nexport const DataContext = createContext();\n\nexport const currentInterval = (dataset) => dataset[0].intervals[0];\nexport const previousInterval = (dataset) => dataset[0].intervals[1];\n\nconst useTweets = (filters = {}) => {\n  const initialValue = {\n    filteredByArea: [],\n    filteredByAreaMin: [],\n    filteredByAreaMinWeek: [],\n    activeOrMajorForArea: [],\n    activeOrMajorByArea: [],\n    byTypeForArea: [],\n    groupedByArea: [],\n    history: [],\n    active24: [],\n    major24: [],\n    annotations: [],\n    status: {},\n  };\n  const [value, setValue] = useState(initialValue);\n  const { status, previousStatus } = useContext(StatusContext);\n  const mostRecentId = previousStatus.mostRecentId\n    ? status.mostRecentId\n    : undefined;\n\n  if (mostRecentId) {\n    console.log(`useTweets/mostRecentId: ${mostRecentId}`);\n  }\n\n  const [filteredByArea, setFilteredByArea] = useState([]);\n  const [filteredByAreaMin, setFilteredByAreaMin] = useState([]);\n  const [filteredByAreaMinWeek, setFilteredByAreaMinWeek] = useState([]);\n  const [activeOrMajorForArea, setActiveOrMajorForArea] = useState([]);\n  const [activeOrMajorByArea, setActiveOrMajorByArea] = useState([]);\n  const [byTypeForArea, setByTypeForArea] = useState([]);\n  const [groupedByArea, setGroupedByArea] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [active24, setActive24] = useState([]);\n  const [major24, setMajor24] = useState([]);\n  const [annotations, setAnnotations] = useState([]);\n\n  const [shouldFetch, setShouldFetch] = useState(true);\n\n  useEffect(() => {\n    if (!deepEqual(status, previousStatus)) {\n      setShouldFetch(true);\n    }\n  }, [status, previousStatus]);\n\n  useEffect(() => {\n    if (!shouldFetch) {\n      console.log(\"PROVIDER/not fetching\");\n      return;\n    }\n    console.log(\"🟢 PROVIDER/fetching all data\");\n    setShouldFetch(false);\n\n    const area = filters.area || \"seattle\";\n\n    console.log(\"PROVIDER/filters.area=\", area);\n    if (area === \"seattle\") {\n      (async () => {\n        setFilteredByAreaMin(await getTweetsForAreaMin(area));\n        setFilteredByAreaMinWeek(await getTweetsForAreaMinWeek(area));\n      })();\n    } else {\n      (async () => {\n        setFilteredByArea(await getTweetsForArea(area));\n      })();\n    }\n\n    (async () => {\n      setActiveOrMajorForArea(\n        await getTweetsForArea(area, { activeOrMajor: true, minimize: false })\n      );\n    })();\n\n    (async () => {\n      const response = await getTweetsActive24();\n      setActive24(response[0].intervals[0].values);\n    })();\n\n    (async () => {\n      const response = await getTweetsMajor24();\n      setMajor24(response[0].intervals[0].values);\n    })();\n\n    (async () => {\n      setByTypeForArea(await getTweetsByType(area));\n    })();\n\n    (async () => {\n      setGroupedByArea(await getTweetsByArea());\n    })();\n\n    (async () => {\n      setActiveOrMajorByArea(\n        await getTweetsByArea({ activeOrMajor: true, minimize: false })\n      );\n    })();\n\n    (async () => {\n      setAnnotations(await getAnnotations());\n    })();\n\n    if (!history.length) {\n      (async () => {\n        setHistory(await getHistory(area));\n      })();\n    }\n  }, [filters.area, history.length, mostRecentId, shouldFetch]);\n\n  useEffect(() => {\n    setValue({\n      filteredByArea,\n      filteredByAreaMin,\n      filteredByAreaMinWeek,\n      byTypeForArea,\n      groupedByArea,\n      history,\n      annotations,\n      active24,\n      major24,\n      activeOrMajorForArea,\n      activeOrMajorByArea,\n      status,\n    });\n  }, [\n    active24,\n    activeOrMajorByArea,\n    activeOrMajorForArea,\n    annotations,\n    byTypeForArea,\n    filteredByArea,\n    filteredByAreaMin,\n    filteredByAreaMinWeek,\n    groupedByArea,\n    history,\n    major24,\n    status,\n  ]);\n\n  return value;\n};\n\nexport const DataProvider = ({ filters, children }) => {\n  const value = useTweets(filters);\n  return <DataContext.Provider value={value}>{children}</DataContext.Provider>;\n};\n","import React, { useState, createContext, useEffect } from \"react\";\n\nexport const UserContext = createContext();\n\nexport const UserContextKeys = {\n  SelectedTweet: \"SelectedTweet\",\n  TypeFilter: \"TypeFilter\",\n};\n\nconst useUser = () => {\n  const [user, setUser] = useState({});\n\n  const setSelection = (key, value) => {\n    console.log(`USER: ${key} -->`, value);\n    setUser({ ...user, [key]: value });\n  };\n\n  useEffect(()=>{console.log('USER/useEffect')},[]);\n\n  return { user, setSelection };\n};\n\nexport const UserProvider = ({ children }) => {\n  return (\n    <UserContext.Provider value={useUser()}>{children}</UserContext.Provider>\n  );\n};\n","export const MapOptions = {\n  ProxyLight: {\n    url: \"/api/dispatch/maps/{s}/{x}/{y}/{z}/{r}/light\",\n    r: \"@2x\",\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n  },\n  ProxyDark: {\n    url: \"/api/dispatch/maps/{s}/{x}/{y}/{z}/{r}/dark\",\n    r: \"@2x\",\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n  },\n  CartoDB_DarkMatter: {\n    url: \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n  },\n  CartoDB_DarkMatterNoLabels: {\n    url: \"https://{s}.basemaps.cartocdn.com/dark_nolabels/{z}/{x}/{y}{r}.png\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n  },\n  CartoDB_Positron: {\n    subdomains: \"abcd\",\n    url: \"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\",\n    ext: \"png\",\n    r: \"@2x\",\n\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n  },\n  CartoDB_PositronNoLabels: {\n    subdomains: \"abcd\",\n    url: \"https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png\",\n    ext: \"png\",\n    r: \"@2x\",\n\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n  },\n  Jawg_Dark: {\n    url:\n      \"https://{s}.tile.jawg.io/jawg-dark/{z}/{x}/{y}{r}.{ext}?access-token={token}\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    token: \"nMsnktvLJ03hHw3Bk4ehaEaNPGKjBE2pLhYTEcMdFEu65cNh4nMfXhGCdEwmhD7H\", // https://www.jawg.io/lab/access-tokens\n  },\n  Jawg_Light: {\n    url:\n      \"https://{s}.tile.jawg.io/jawg-light/{z}/{x}/{y}{r}.{ext}?access-token={token}\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    token: \"nMsnktvLJ03hHw3Bk4ehaEaNPGKjBE2pLhYTEcMdFEu65cNh4nMfXhGCdEwmhD7H\", // https://www.jawg.io/lab/access-tokens\n  },\n  Mapbox: {\n    // accessToken: \"pk.eyJ1IjoiYW5hcnNleWYiLCJhIjoiY2thZXlra3llMGF4MDJ4cXYzY2ZkamVkdyJ9.K8CENC0jz2D0O6ziL_jnNg\"\n  },\n  Stadia_Alidade: {\n    url:\n      \"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.{ext}\",\n    ext: \"png\",\n    r: \"@2x\",\n    attribution:\n      '&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n  },\n  Stamen_Toner: {\n    url: \"https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}{r}.{ext}\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      'Tiles by <a href=\"http://stamen.com\">Stamen</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OSM</a>',\n  },\n};\n\n// MapOptions.Default = MapOptions.Jawg_Dark;\n// MapOptions.NoLabels = MapOptions.Jawg_Dark;\nMapOptions.Default = MapOptions.ProxyDark;\nMapOptions.NoLabels = MapOptions.Default;\n","import * as d3 from \"d3\";\nimport zipCodes from \"./zip-codes.json\";\n// import nhoods from \"./nhoods.json\";\nimport nhoods from \"./2016_seattle_cra.json\";\nimport city from \"./2016_seattle_city.json\";\n\nconst nhoodProp = \"NEIGHBO\"; // TODO - import from server/groupby.js\nconst zipcodeProp = \"GEOID10\";\n\nconst byArea = (features, prop) => {\n  const map = {};\n  features.forEach((feature) => {\n    const key = feature.properties[prop];\n    const list = map[key] || [];\n    list.push(feature);\n    map[key] = list;\n  });\n  return map;\n};\n\nconst zipcodeFeaturesByArea = byArea(zipCodes.features, zipcodeProp);\nconst nhoodFeaturesByArea = byArea(nhoods.features, nhoodProp);\n\nconst featuresForZip = (zip) => zipcodeFeaturesByArea[zip];\nconst featuresForNhood = (nhood) => nhoodFeaturesByArea[nhood];\n\nexport const featuresForArea = featuresForNhood;\n\nexport const areas = {\n  geojson: nhoods,\n  areaProp: nhoodProp,\n};\n\nexport const cityGeojson = city;\n\nconst lat = 47.61485, long = -122.32838;\nconst defaultCentroid = [lat, long]; // approx. centroid of cityGeojson\n\nexport const mapBounds = [\n  [lat + 0.2, long - 0.3],\n  [lat - 0.2, long + 0.3],\n];\n\nexport const centroid = (features) => {\n  if (!features.length) {\n    return defaultCentroid;\n  }\n  \n  let coords = features\n    .map(({ geometry: { coordinates } }) => coordinates)\n    .flat(2);\n  const latExtent = d3.extent(coords, ([_, lat]) => lat);\n  const longExtent = d3.extent(coords, ([long, _]) => long);\n  return [d3.mean(latExtent), d3.mean(longExtent)];\n};\n","import * as d3 from \"d3\";\nimport { tz as timezone } from \"moment-timezone\";\n\nexport const intervalExtent = ({ start, end }, expandMinutes = 0) =>\n  expand([start, end], expandMinutes);\n\n// move to server/histogram.js\nexport const expand = (extent, expandMinutes = 0) => [\n  d3.timeMinute.offset(extent[0], -expandMinutes),\n  d3.timeMinute.offset(extent[1], expandMinutes),\n];\n\n// TODO - coordinate with section.module.scss, or find a way to use vars\n\nconst maxWidthPhone = 500;\nconst queryText = `only screen and (max-device-width: ${maxWidthPhone}px)`;\n\nexport const isPhone = () =>\n  window ? !!window.matchMedia(queryText).matches : true;\n\n// see also fileUtils.js\nexport const toPacificStr = (timestamp) =>\n  timezone(timestamp, \"America/Vancouver\").format(\"h:mm a\");\n\nexport const isActive = ({ derived: { active } }) => active;\nexport const isAtLeastSev1 = ({ derived: { severity } }) => severity >= 1;\nexport const isAtLeastSev2 = ({ derived: { severity } }) => severity >= 2;\n\nexport const isExactlySev1 = ({ derived: { severity } }) => severity === 1;\nexport const isExactlySev2 = ({ derived: { severity } }) => severity === 2;\n","import React, { useContext } from \"react\";\nimport { Map as LeafletMap, TileLayer, GeoJSON } from \"react-leaflet\";\nimport { Dot, Appearance } from \"./Dot\";\nimport { DataContext } from \"./DataProvider\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\nimport { MapOptions } from \"./mapOptions\";\nimport { centroid, areas, cityGeojson, mapBounds } from \"./geojson\";\nimport classnames from \"classnames\";\nimport \"./leaflet.scss\";\nimport styles from \"./map.module.scss\";\nimport { isPhone } from \"../clientUtils\";\n\nconst minZoom = 10,\n  maxZoom = 13,\n  defaultZoom = 11;\n\nconst activeColor = \"dodgerblue\";\n\nexport const Map = ({ area, tileOptions = MapOptions.Default }) => {\n  // TODO - no need for types, so don't use byTypeForArea\n  const { user } = useContext(UserContext);\n  const { byTypeForArea } = useContext(DataContext);\n  if (!byTypeForArea.length) {\n    return null;\n  }\n\n  const geojsonStyleBounds = {\n    color: \"#1e90ff66\", // dodgerblue with alpha\n    fillOpacity: 0,\n    strokeOpacity: 0.5,\n    weight: 4,\n  };\n  const geojsonStyleActive = {\n    color: activeColor,\n    fillColor: activeColor,\n    fillOpacity: 0.1,\n    strokeOpacity: 0.5,\n    weight: 2,\n  };\n\n  const { geojson, areaProp } = areas;\n\n  const typeFilter = user[UserContextKeys.TypeFilter];\n  const selectedTweet = user[UserContextKeys.SelectedTweet];\n\n  const renderFilter = ({ properties }) =>\n    area && properties[areaProp] === area;\n\n  const { features } = geojson;\n  const rendered = features.filter(renderFilter);\n\n  let zoom = defaultZoom;\n  if (area) {\n    zoom = defaultZoom + 1;\n  }\n  if (selectedTweet && selectedTweet.derived.lat) {\n    zoom = maxZoom;\n  }\n\n  const center = selectedTweet && selectedTweet.derived.lat\n    ? [selectedTweet.derived.lat, selectedTweet.derived.long]\n    : area\n    ? centroid(rendered)\n    : centroid(cityGeojson.features);\n\n  const mapper = ({ intervals }) =>\n    intervals[0].values.map(\n      ({ id_str, derived: { lat, long, type, color, active, severity } }) => ({\n        id_str,\n        lat,\n        long,\n        type,\n        color, // TODO - do not use\n        active,\n        severity,\n      })\n    );\n\n  const isSelectedDot = ({ id_str }) => selectedTweet.id_str === id_str;\n\n  const importantOnTop =\n    (a,\n    b) => {\n      // TODO\n      return 0;\n    };\n\n  let data = byTypeForArea\n    .flatMap(mapper)\n    .filter(({ type }) => !typeFilter || typeFilter === type);\n  // .sort(importantOnTop);\n\n  if (selectedTweet) {\n    // Render selected dot last, so it appears on top\n    const selectedIndex = data.findIndex(isSelectedDot);\n\n    data =\n      selectedIndex === -1\n        ? []\n        : [\n            ...data.slice(0, selectedIndex),\n            ...data.slice(selectedIndex + 1),\n            data[selectedIndex],\n          ];\n  }\n\n  const appearanceFn = (d) => {\n    return selectedTweet\n      ? isSelectedDot(d)\n        ? Appearance.Highlighted\n        : Appearance.Dimmed\n      : Appearance.Normal;\n  };\n\n  console.log(\n    `MAP/render area=${area}, zoom=${zoom}, selected:${\n      (selectedTweet || {}).id_str\n    }, features:${rendered.length}/${features.length}, dots:${\n      data.length\n    }, geo:${rendered.length}, center:${center}`\n  );\n  const city = cityGeojson.features[0];\n\n  return (\n    <LeafletMap\n      className={classnames(styles.container, {\n        [styles.area]: area,\n        [styles.phone]: isPhone(),\n      })}\n      center={center}\n      zoom={zoom}\n      minZoom={minZoom}\n      maxZoom={maxZoom}\n      maxBounds={mapBounds}\n      maxBoundsViscosity={0.6}\n      zoomControl={false}\n    >\n      <TileLayer {...tileOptions} />\n      {!area && <GeoJSON data={city} style={geojsonStyleBounds} />}\n      {rendered.map((feature) => (\n        <GeoJSON\n          key={feature.properties.CRA_NAM}\n          data={feature}\n          style={geojsonStyleActive}\n        />\n      ))}\n      {data.map((d) => (\n        <Dot // TODO - group under a single container?\n          key={d.id_str}\n          coordinates={[d.lat, d.long]}\n          severity={d.severity}\n          appearance={appearanceFn(d)}\n          active={d.active}\n          // color={d.color}\n        ></Dot>\n      ))}\n    </LeafletMap>\n  );\n};\n","import React from \"react\";\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"ErrorBoundary\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport svgStyles from \"./svg.module.scss\";\n\nexport const SvgDot = ({ radius = 0, active = false, sev1 = false, sev2 = false }) => {\n  const color = active ? \"red\" : \"white\";\n  const size = 18,\n    sev1Radius = 5,\n    sev2Radius = 8;\n  const baseRadius = radius || (active ? 5 : 3);\n\n  return (\n    <svg\n      className={classnames({ [svgStyles.live]: active })}\n      width={size}\n      height={size}\n    >\n      <circle cx={size / 2} cy={size / 2} r={baseRadius} fill={color} />\n      {(sev1 || sev2) && (\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={sev1Radius}\n          fill=\"none\"\n          stroke={color}\n        />\n      )}\n      {sev2 && (\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={sev2Radius}\n          fill=\"none\"\n          stroke={color}\n        />\n      )}\n    </svg>\n  );\n};\n","import { useState, useEffect, useContext } from 'react';\nimport { DataContext } from './DataProvider';\nimport { featuresForArea } from \"./geojson\";\n\nexport const useNeighborhoods = () => {\n  const [map, setMap] = useState({});\n\n  const { groupedByArea } = useContext(DataContext);\n\n  useEffect(() => {\n    const newMap = {};\n    groupedByArea\n      .map(({ key }) => key)\n      .forEach((key) => {\n        newMap[key] = featuresForArea(key)\n          .map(({ properties: { CRA_NAM } }) => CRA_NAM)\n          .sort();\n      });\n\n      setMap(newMap);\n  }, [groupedByArea]);\n\n  return map;\n}","import React, { useEffect, useState, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport * as d3 from \"d3\";\nimport chartStyles from \"./chart.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\nimport { intervalExtent, isPhone } from \"../clientUtils\";\n\nexport const MultiLine = ({\n  intervals = [],\n  title,\n  showHeader = false,\n  useCumulative,\n}) => {\n  const [svgData, setSvgData] = useState([]);\n  const [nowDot, setNowDot] = useState(null);\n\n  const svgWidth = isPhone() ? 350 : 500;\n  const svgHeight = 0.3 * svgWidth,\n    margin = { top: 20, right: 20, bottom: 20, left: 20 },\n    width = svgWidth - margin.left - margin.right,\n    height = svgHeight - margin.bottom - margin.top;\n\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n\n  useEffect(() => {\n    // TODO - no need for useEffect?\n    if (!intervals.length) {\n      return;\n    }\n\n    const accessor = ({ length, cumulative }) =>\n      useCumulative ? cumulative : length;\n\n    const xExtent = intervalExtent(intervals[0]);\n\n    const yExtent = [\n      0,\n      d3.max([1.0, ...intervals.flatMap(({ bins }) => bins).map(accessor)]),\n    ];\n\n    const dateFormatter = d3.timeFormat(\"%-I%p\");\n    // https://github.com/d3/d3-time-format#locale_format\n\n    const xScale = d3.scaleTime().domain(xExtent).range([0, width]);\n    const xAxis = d3\n      .axisBottom()\n      .tickFormat(dateFormatter)\n      .tickSize(3)\n      .scale(xScale)\n      .ticks(d3.timeHour.every(6));\n    d3.select(xAxisRef.current).call(xAxis);\n\n    const yScale = d3.scaleLinear().domain(yExtent).range([height, 0]);\n    const yAxis = d3.axisLeft().scale(yScale).ticks(2);\n    d3.select(yAxisRef.current).call(yAxis);\n\n    const line = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(d.x0))\n      .y((d) => yScale(accessor(d)));\n\n    const paths = intervals.map((d) => d.bins).map(line);\n\n    let newSvgData = paths.map((path, i) => ({ path, key: i })).reverse(); // render highlight after all others\n\n    setSvgData(newSvgData);\n\n    const bins = intervals[0].bins;\n    if (bins.length) {\n      const lastBin = bins[bins.length - 1];\n      setNowDot({\n        cx: xScale(lastBin.x0),\n        cy: yScale(accessor(lastBin)),\n        r: 3,\n      });\n    }\n  }, [height, intervals, useCumulative, width]);\n\n  if (!intervals.length) {\n    return null;\n  }\n\n  const total = intervals[0].total;\n  const lastIndex = svgData.length - 1;\n\n  return (\n    <div className={chartStyles.container}>\n      {showHeader && (\n        <div className={chartStyles.header}>\n          {title && <div className={chartStyles.title}>{title}</div>}\n          {typeof total === \"number\" && (\n            <div className={chartStyles.total}>{total}</div>\n          )}\n        </div>\n      )}\n      <svg className={chartStyles.chart} width={svgWidth} height={svgHeight}>\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <g\n            className={svgStyles.axis}\n            ref={xAxisRef}\n            transform={`translate(0,${height})`}\n          />\n          <g className={svgStyles.axis} ref={yAxisRef} />\n          <g>\n            {svgData.map(({path, key}, i) => (\n              <path\n                key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: i === lastIndex,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          {nowDot && (\n            <g className={svgStyles.now}>\n              <circle {...nowDot} />\n            </g>\n          )}\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\nimport { MultiLine } from \"./MultiLine\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\n\nexport const Header = ({ area }) => {\n  const { filteredByAreaMinWeek } = useContext(DataContext);\n\n  if (!filteredByAreaMinWeek.length) {\n    return null;\n  }\n\n  return (\n    <ErrorBoundary>\n      <MultiLine\n        intervals={filteredByAreaMinWeek[0].intervals}\n        useCumulative={!!area}\n      />\n    </ErrorBoundary>\n  );\n};\n","import React from \"react\";\nimport styles from \"./section.module.scss\";\nimport classnames from \"classnames\";\nimport { isPhone } from \"../clientUtils\";\n\nexport const Section = ({ children, styleOption = 0, edgeToEdge = false }) => {\n  const style =\n    styleOption === 1\n      ? styles.style1\n      : styleOption === 2\n      ? styles.style2\n      : styleOption === 3\n      ? styles.styleMap\n      : styles.styleDefault;\n  return (\n    <section className={classnames(styles.section, style)}>\n      <div\n        className={classnames(styles.content, {\n          [styles.phone]: isPhone(),\n        })}\n      >\n        <div\n          className={classnames(styles.subcontent, {\n            [styles.edgeToEdge]: edgeToEdge,\n          })}\n        >\n          {children}\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React from \"react\";\nimport styles from \"./paragraph.module.scss\";\nimport classnames from \"classnames\";\n\nexport const Paragraph = ({ h1,title, content, margin = false }) => {\n  return (\n    <div className={classnames(styles.paragraph, { [styles.margin]: margin })}>\n      {h1 && <h1>{h1}</h1>}\n      {title && <h3>{title}</h3>}\n      {content && <div className={styles.text}>{content}</div>}\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport textures from \"textures\";\nimport {\n  annotation as d3annotation,\n  annotationCalloutCircle as d3annotationCalloutCircle,\n} from \"d3-svg-annotation\";\nimport { DataContext } from \"./DataProvider\";\n\nimport styles from \"./annotations.module.scss\";\n\nconst textureCurrent = textures\n  .lines()\n  .lighter()\n  .size(8)\n  .orientation(\"6/8\")\n  .stroke(\"#51aae8\");\nconst texturePrevious = textures.lines().lighter().size(8).stroke(\"#51aae8\");\n\nexport const Annotations = ({ currentStart, rectWidth, scales, clipPaths }) => {\n  const calloutsRef = useRef(null);\n  const regionsRef = useRef(null);\n  const { annotations } = useContext(DataContext);\n  const [regions, setRegions] = useState([]);\n\n  d3.select(regionsRef.current).call(textureCurrent);\n  d3.select(regionsRef.current).call(texturePrevious);\n\n  useEffect(() => {\n    if (!scales.length) {\n      return;\n    }\n\n    const regionFn = ({ start, end, offset }, i) => {\n      if (!start || !end) {\n        return undefined;\n      }\n      const [xScale, yScale] = scales;\n      const isCurrent = offset === 0;\n      const texture = isCurrent ? textureCurrent : texturePrevious;\n\n      return {\n        key: `${start}-${end}-${i}`,\n        x: xScale(0) - (isCurrent ? 0 : rectWidth),\n        y: yScale(start.timestamp + offset),\n        width: rectWidth,\n        height:\n          yScale(end.timestamp + offset) - yScale(start.timestamp + offset),\n        fill: texture.url(),\n      };\n    };\n\n    const calloutFn = ({\n      item: { title, label, value, timestamp },\n      offset,\n      scales: [xScale, yScale],\n      isEnd = false,\n    }) => {\n      const isPrevious = timestamp < currentStart;\n      const sideX = isPrevious ? -1 : 1;\n\n      const x = value ? xScale(value) : rectWidth;\n      const sideY = isEnd ? 1 : -1;\n      const y = yScale(timestamp + offset);\n      const callout = {\n        note: {\n          title,\n          label,\n        },\n        x: sideX * x,\n        y,\n        subject: {\n          radius: 6,\n        },\n        color: \"rgb(223, 69, 69)\", // sync with colors.scss $annotation\n      };\n\n      if (value) {\n        callout.nx = sideX * (rectWidth + 5);\n        callout.ny = y;\n      } else {\n        callout.dx = sideX * 10;\n        callout.dy = sideY * 10;\n      }\n      return callout;\n    };\n\n    const calloutsFn = ({ start, end, offset }) => [\n      start ? calloutFn({ item: start, offset, scales }) : undefined,\n      end ? calloutFn({ item: end, offset, scales, isEnd: true }) : undefined,\n    ];\n\n    const calloutsSvgData = annotations.flatMap(calloutsFn).filter(Boolean);\n\n    const callout = d3annotation()\n      .annotations(calloutsSvgData)\n      .type(d3annotationCalloutCircle);\n\n    d3.select(calloutsRef.current).call(callout);\n\n    const newRegions = annotations.map(regionFn).filter(Boolean);\n    setRegions(newRegions);\n  }, [annotations, currentStart, rectWidth, scales]);\n\n  return (\n    <>\n      <defs>\n        <clipPath id=\"clippath\">\n          <path d={clipPaths.current} />\n          <path d={clipPaths.previous} />\n        </clipPath>\n      </defs>\n      <g ref={regionsRef}>\n        {regions.map((annotation) => (\n          <rect {...annotation} clipPath=\"url(#clippath)\" />\n        ))}\n      </g>\n      <g className={styles.annotations} ref={calloutsRef} />\n    </>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport classnames from \"classnames\";\nimport styles from \"./historyevents.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nimport { DataContext, currentInterval, previousInterval } from \"./DataProvider\";\n\nexport const HistoryEvents = ({ scales, dayHeight = 4 }) => {\n  const { history } = useContext(DataContext);\n  const [circles, setCircles] = useState([]);\n\n  useEffect(() => {\n    if (!history.length || !scales.length) {\n      return;\n    }\n    const intervalCurrent = currentInterval(history);\n    const intervalPrevious = previousInterval(history);\n    const binsCurrent = intervalCurrent.binsLowRes;\n    const binsPrevious = intervalPrevious.binsLowRes;\n    const [, yScale] = scales;\n\n    const radius = dayHeight / 2 + 2;\n    const filter = ({ sev2 }) => sev2 > 0;\n    const mapper = ({ x0, sev2 }) => ({ timestamp: x0, count: sev2 });\n    const stack = ({ timestamp, count }) =>\n      [...new Array(count)].map((_, index) => ({ timestamp, index }));\n    const sev2Current = binsCurrent.filter(filter).map(mapper).flatMap(stack);\n    const sev2Previous = binsPrevious.filter(filter).map(mapper).flatMap(stack);\n\n    const toCirclesGen = (side) => ({ timestamp, index }) => ({\n      key: `${timestamp}-${index}`,\n      cx: side * (index + 0.75) * 2 * radius,\n      cy: yScale(timestamp),\n      r: radius,\n      isCurrent: side === 1,\n    });\n    const toCirclesCurrent = toCirclesGen(1);\n    const toCirclesPrevious = toCirclesGen(-1);\n\n    const circlesCurrent = sev2Current.map(toCirclesCurrent);\n    const circlesPrevious = sev2Previous.map(toCirclesPrevious);\n\n    const newCircles = [...circlesPrevious, ...circlesCurrent];\n    setCircles(newCircles);\n  }, [dayHeight, history, scales]);\n\n  return (\n    <g>\n      {circles.map(({ key, cx, cy, r, isCurrent }) => (\n        <g\n          key={key}\n          className={classnames({\n            [svgStyles.current]: isCurrent,\n            [svgStyles.previous]: !isCurrent,\n          })}\n        >\n          <circle cx={cx} cy={cy} r={r} />\n        </g>\n      ))}\n    </g>\n  );\n};\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport classnames from \"classnames\";\n\nimport { DataContext, currentInterval, previousInterval } from \"./DataProvider\";\nimport { intervalExtent, isPhone } from \"../clientUtils\";\nimport { Annotations } from \"./Annotations\";\nimport { HistoryEvents } from \"./HistoryEvents\";\nimport historyStyles from \"./history.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nconst closedPath = (bins, line, offset) => {\n  if (!bins.length) {\n    return \"\";\n  }\n\n  let data = bins.map(({ x0, length }) => ({\n    timestamp: x0,\n    value: length + offset,\n  }));\n\n  const first = data[0],\n    last = data[data.length - 1];\n  const extraBottom = { timestamp: last.timestamp, value: 10000 };\n  const extraTop = { timestamp: first.timestamp, value: 10000 };\n\n  data = [...data, extraBottom, extraTop, first];\n  return line(data);\n};\n\nexport const History = () => {\n  const { history } = useContext(DataContext);\n  // const [svgData, setSvgData] = useState([]);\n  const [scales, setScales] = useState([]);\n  const [currentStart, setCurrentStart] = useState([]);\n  const [paths, setPaths] = useState([]);\n  const [clipPaths, setClipPaths] = useState({});\n\n  const dayHeight = 3.5;\n  const width = isPhone() ? 360 : 500, // TODO - use screen width\n    margin = { top: 20, right: 0, bottom: 20, left: 0 },\n    height = 365 * dayHeight,\n    svgHeight = height + margin.top + margin.bottom,\n    svgWidth = width + margin.left + margin.right;\n  const yearWidth = width / 2;\n  const maxBarWidth = yearWidth * 0.4;\n  const annotationRectWidth = yearWidth * 0.5;\n\n  const svgRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n\n  useEffect(() => {\n    if (!history.length) {\n      return;\n    }\n\n    const intervalCurrent = currentInterval(history);\n    setCurrentStart(intervalCurrent.start);\n    const intervalPrevious = previousInterval(history);\n    const binsCurrent = intervalCurrent.binsLowRes;\n    const binsPrevious = intervalPrevious.binsLowRes;\n    const timeExtent = intervalExtent(intervalCurrent);\n\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(binsCurrent, (b) => b.length)])\n      .range([0, maxBarWidth]);\n\n    const yScale = d3.scaleTime().domain(timeExtent).range([0, height]);\n\n    setScales([xScale, yScale]);\n\n    const dateFormatter = d3.timeFormat(\"%b\"); // https://github.com/d3/d3-time-format#locale_format\n\n    const yAxis = d3\n      .axisLeft()\n      .tickFormat(dateFormatter)\n      .scale(yScale)\n      .ticks(d3.timeMonth.every(1))\n      .tickSize(0);\n    d3.select(yAxisRef.current).call(yAxis);\n\n    const xAxis = d3.axisBottom().scale(xScale).ticks(2);\n    d3.select(xAxisRef.current).call(xAxis);\n\n    // const currentYear = binsCurrent.map(({ x0, length }) => ({\n    //   x: xScale(0),\n    //   width: xScale(length),\n    //   y: yScale(x0),\n    //   height: binHeight,\n    //   rx: 1,\n    // }));\n    // const previousYear = binsPrevious.map(({ x0, length }) => ({\n    //   x: xScale(0) - xScale(length),\n    //   width: xScale(length),\n    //   y: yScale(x0),\n    //   height: binHeight,\n    //   rx: 1,\n    // }));\n    // setSvgData([currentYear, previousYear]);\n\n    const lineCurrent = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(d.length))\n      .y((d) => yScale(d.x0));\n    const linePrevious = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(-d.length))\n      .y((d) => yScale(d.x0));\n\n    const pathCurrent = lineCurrent(binsCurrent);\n    const pathPrevious = linePrevious(binsPrevious);\n    setPaths([\n      { path: pathCurrent, key: \"current\" },\n      { path: pathPrevious, key: \"previous\" },\n    ]);\n\n    const clipLineCurrent = d3\n      .line()\n      .x((d) => xScale(d.value))\n      .y((d) => yScale(d.timestamp));\n\n    const clipLinePrevious = d3\n      .line()\n      .x((d) => xScale(-d.value))\n      .y((d) => yScale(d.timestamp));\n\n    const pixelOffset = xScale.invert(2) - xScale.invert(0);\n    const clipPathCurrent = closedPath(\n      binsCurrent,\n      clipLineCurrent,\n      pixelOffset\n    );\n    const clipPathPrevious = closedPath(\n      binsPrevious,\n      clipLinePrevious,\n      pixelOffset\n    );\n\n    setClipPaths({ current: clipPathCurrent, previous: clipPathPrevious });\n  }, [history, height, maxBarWidth]);\n\n  // console.log(\"HISTORY/render\");\n\n  return (\n    <div className={historyStyles.container}>\n      <div className={historyStyles.years}>\n        <div className={historyStyles.left}>2019</div>\n        <div className={historyStyles.right}>2020</div>\n      </div>\n      <svg\n        className={historyStyles.svg}\n        ref={svgRef}\n        width={svgWidth}\n        height={svgHeight}\n      >\n        <g transform={`translate(${margin.left + yearWidth},${margin.top})`}>\n          \n          {/* <g>\n            {svgData.map((dataset, iDataset) =>\n              dataset.map((d) => (\n                <rect\n                  className={classnames({\n                    [historyStyles.previous]: iDataset,\n                    [historyStyles.current]: !iDataset,\n                  })}\n                  x={d.x}\n                  y={d.y}\n                  width={d.width}\n                  height={d.height}\n                  rx={d.rx}\n                ></rect>\n              ))\n            )}\n          </g> */}\n          <g>\n            {paths.map(({ path, key }, i) => (\n              <path\n                key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: !i,\n                  [svgStyles.previous]: i,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          <g>\n            <HistoryEvents scales={scales} dayHeight={dayHeight} />\n          </g>\n          <g>\n            <Annotations\n              currentStart={currentStart}\n              rectWidth={annotationRectWidth}\n              scales={scales}\n              clipPaths={clipPaths}\n            />\n          </g>\n          {/* <g\n            className={classnames(svgStyles.axis, historyStyles.axis)}\n            ref={xAxisRef}\n            transform={`translate(0,${height})`}\n          /> */}\n          <g\n            className={classnames(svgStyles.axis, historyStyles.axis)}\n            ref={yAxisRef}\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n","// see groupby.js\nexport const GroupByOptions = {\n  // TODO - import from server\n  Nothing: undefined,\n  IncidentType: \"type\",\n  ZipCode: \"zip\",\n  Area: \"area\",\n  TimeInterval: \"time\",\n};\n\nexport const AreaAccessors = {\n  ZipCode: ({ derived: { zip } }) => zip,\n  Area: ({ derived: { neighborhoodGroup } }) => neighborhoodGroup,\n  AreaSecondary: ({ derived: { neighborhood } }) => neighborhood,\n};\nAreaAccessors.Default = AreaAccessors.Area;\n","import React from \"react\";\nimport styles from \"./tweetdetails.module.scss\";\nimport { isPhone } from \"../clientUtils\";\nimport { AreaAccessors } from \"../groupingOptions\";\n\nexport const TweetDetails = ({tweet}) => {\n  const { address, units, lat, long } = tweet.derived;\n  const { id_str } = tweet;\n  const url = `https://data.seattle.gov/resource/fire-911.json?incident_number=${id_str}`;\n  const unitsList = units.split(\" \");\n  const unitsStr = `${unitsList.length} ${\n    unitsList.length === 1 ? \"unit\" : \"units\"\n  } dispatched:`;\n  const area = AreaAccessors.AreaSecondary(tweet);\n  const phone = isPhone();\n\n  const format = (n) => Number.parseFloat(n).toFixed(3);\n  const coordinates = lat ? `${format(lat)}°N ${format(-long)}°W` : \"\";\n  return (\n    <div className={styles.container}>\n      <div>{address}</div>\n      {phone && <div className={styles.secondary}>{area}</div>}\n      <div className={styles.secondary}>{coordinates}</div>\n      <div>\n        <span>{unitsStr}</span>\n        {unitsList.map((unit) => (\n          <span key={unit} className={styles.unit}>{unit}</span>\n          ))}\n      </div>\n      <div className={styles.secondary}>Incident ID <a className={styles.link} href={url}>{id_str}</a></div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport styles from \"./tweet.module.scss\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\nimport { AreaAccessors } from \"../groupingOptions\";\nimport { TweetDetails } from \"./TweetDetails\";\nimport {\n  toPacificStr,\n  isActive,\n  isAtLeastSev1,\n  isAtLeastSev2,\n  isPhone,\n} from \"../clientUtils\";\nimport { SvgDot } from \"./SvgDot\";\nimport classnames from \"classnames\";\n\nexport const TweetModes = {\n  Default: 0,\n  Detailed: 1,\n  GreyedOut: 2,\n};\n\nexport const Tweet = ({ tweet, mode = TweetModes.Default }) => {\n  const { user, setSelection } = useContext(UserContext);\n  const selectedTweet = user[UserContextKeys.SelectedTweet];\n\n  const handleClick = () => {\n    const newSelectedTweet =\n      selectedTweet && selectedTweet.id_str === tweet.id_str ? null : tweet;\n    setSelection(UserContextKeys.SelectedTweet, newSelectedTweet);\n  };\n  const active = isActive(tweet);\n  const sev1 = isAtLeastSev1(tweet);\n  const sev2 = isAtLeastSev2(tweet);\n\n  const area = AreaAccessors.AreaSecondary(tweet);\n\n  const isGreyedOut = mode === TweetModes.GreyedOut;\n  const isDetailed = mode === TweetModes.Detailed;\n  const time = toPacificStr(tweet.derived.timestamp);\n  const phone = isPhone();\n\n  return (\n    <div\n      className={classnames(styles.container, {\n        [styles.detailed]: isDetailed,\n        [styles.greyedOut]: isGreyedOut,\n        [styles.phone]: phone\n      })}\n      onClick={handleClick}\n    >\n      <div className={styles.tweet}>\n        <div className={styles.details}>\n          <span className={styles.location}>{!phone && <span>{area} @ </span>}{time}</span>\n        </div>\n        <div className={classnames({[styles.active]: active})}>\n          <SvgDot active={active} sev1={sev1} sev2={sev2} />\n          <span> {tweet.derived.description}</span>\n        </div>\n      </div>\n      {isDetailed && <TweetDetails tweet={tweet} />}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport styles from \"./tweets.module.scss\";\nimport { Tweet, TweetModes } from \"./Tweet\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\n\nexport const TweetList = ({ tweets = [] }) => {\n  const { user } = useContext(UserContext);\n  const selected = user[UserContextKeys.SelectedTweet];\n\n  const mode = ({ id_str }) =>\n    selected\n      ? id_str === selected.id_str\n        ? TweetModes.Detailed\n        : TweetModes.GreyedOut\n      : TweetModes.Default; // TODO - remove modes\n\n  return (\n    <div className={styles.tweets}>\n      {tweets.map((t) => (\n        <Tweet key={t.id_str} tweet={t} mode={mode(t)} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Paragraph } from \"./Paragraph\";\n\nexport const Sources = () => {\n  const sources = (\n    <p>\n      The primary data source is{\" \"}\n      <a href=\"http://www2.seattle.gov/fire/realTime911/\">\n        Real-Time 911 Dispatch\n      </a>\n      . GPS locations for each incident are retrieved from{\" \"}\n      <a href=\"https://dev.socrata.com/foundry/data.seattle.gov/kzjm-xkqj\">\n        this Socrata dataset\n      </a>\n      . Seattle neighborhood GeoJSON data is from the{\" \"}\n      <a href=\"https://github.com/seattleflu/seattle-geojson/tree/master/seattle_geojsons\">\n        seattleflu/seattle-geojson\n      </a>{\" \"}\n      repository. Map powered by <a href=\"http://leafletjs.com\">Leaflet</a> via{\" \"}\n      <a href=\"https://react-leaflet.js.org\">react-leaflet</a>. Map tiles\n      provided by{\" \"}\n      <a href=\"https://www.jawg.io/docs/apidocs/static-maps/\">Jawg Maps</a>.\n    </p>\n  );\n\n  return <Paragraph title=\"Data Sources\" content={sources} />;\n};\n","import React, { useContext } from \"react\";\nimport * as d3 from \"d3\";\nimport { Map } from \"./Map\";\nimport { DataProvider } from \"./DataProvider\";\nimport { GroupByArea } from \"./GroupByArea\";\nimport { Header } from \"./Header\";\nimport { Rehoboam } from \"./Rehoboam\";\nimport { Section } from \"./Section\";\nimport { Paragraph } from \"./Paragraph\";\nimport { History } from \"./History\";\nimport { TweetsActive } from \"./TweetsActive\";\nimport { TweetsMajor } from \"./TweetsMajor\";\nimport { SvgDot } from \"./SvgDot\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { StatusContext } from \"./StatusContext\";\nimport { Sources } from \"./Sources\";\n\nconst formatter = d3.timeFormat(\"%-I:%M %p\");\n\nexport const DispatchAll = () => {\n  const { status = {} } = useContext(StatusContext);\n\n  const time = status.lastUpdated\n    ? formatter(new Date(status.lastUpdated))\n    : undefined;\n\n  const dataText = time ? (\n    <span>\n      Data is current as of <strong> {time}</strong>.\n    </span>\n  ) : (\n    <span>&nbsp;</span>\n  );\n\n  const intro = (\n    <p>\n      A near-real-time visualization of Seattle Fire Department 911 dispatches.\n      Active incidents are marked <SvgDot active={true} radius={5} />. Incidents\n      with five or more units dispatched are marked <SvgDot sev1={true} />, with\n      ten or more <SvgDot sev2={true} />. All timestamps are in Seattle time\n      (Pacific timezone). See notes at the bottom for more details.\n    </p>\n  );\n\n  const todayText = \"\";\n\n  const pastWeek = `The past 7 days of dispatches.`;\n\n  const major = (\n    <p>\n      Incidents in the past 24 hours with <strong>five or more</strong> units\n      dispatched.\n    </p>\n  );\n\n  const areas = \"Select an area to zoom in on today's incidents there.\";\n\n  const history =\n    \"Total daily dispatches for all of Seattle this year compared to last year. Each circles represents a major incident (10 or more units dispatched).\";\n\n  const notes = (\n    <>\n      <p>\n        Visualization by{\" \"}\n        <a href=\"https://linkedin.com/in/anarseyf/\">Anar Seyf</a>.\n      </p>\n    </>\n  );\n\n  return (\n    <DataProvider>\n      {/* <Section styleOption={2}>\n        <Paragraph h1=\"Seattle Fire Real-Time Dispatch\" content={intro} />\n        <Rehoboam />\n        <Paragraph content={dataText} />\n      </Section>\n\n      <Section edgeToEdge={true} styleOption={1}>\n        <Paragraph title=\"\" content={todayText} margin={true} />\n\n        <ErrorBoundary>\n          <Map />\n        </ErrorBoundary>\n      </Section>\n\n      <Section styleOption={2}>\n        <Paragraph title=\"Active Incidents\" content={\"\"} />\n        <TweetsActive />\n        <Paragraph title=\"Major Incidents\" content={major} />\n        <TweetsMajor />\n      </Section>\n\n      <Section styleOption={1}>\n        <Paragraph title=\"Past Week\" content={pastWeek} />\n        <Header />\n      </Section>\n\n      <Section styleOption={2} edgeToEdge={true}>\n        <Paragraph title=\"City Areas\" content={areas} margin={true} />\n        <GroupByArea />\n      </Section> */}\n\n      <Section styleOption={1} edgeToEdge={true}>\n        <Paragraph title=\"Last Year vs This Year\" content={history} margin={true} />\n        <History />\n      </Section>\n\n      <Section styleOption={2}>\n        <Sources />\n        <Paragraph title=\"Notes\" content={notes} />\n      </Section>\n    </DataProvider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext, currentInterval } from \"./DataProvider\";\n\nimport { Tweet, TweetModes } from \"./Tweet\";\nimport { UserContextKeys, UserContext } from \"./UserProvider\";\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsForArea = () => {\n  const { filteredByArea } = useContext(DataContext);\n  const { user } = useContext(UserContext);\n  const filter = user[UserContextKeys.TypeFilter];\n\n  if (!filteredByArea.length) {\n    return null;\n  }\n  const all = currentInterval(filteredByArea).values;\n  const filtered = all.filter(\n    ({ derived: { type } }) => !filter || filter === type\n  );\n\n  return <TweetList tweets={filtered} />;\n}\n","import React from \"react\";\nimport { Paragraph } from \"./Paragraph\";\nimport { Header } from \"./Header\";\nimport { useNeighborhoods } from \"./neighborhoods\";\n\nexport const AreaPageHeader = ({ area }) => {\n  const neighborhoodsMap = useNeighborhoods();\n  const subareas = (\n    <div>\n      {(neighborhoodsMap[area] || []).map((subarea) => (\n        <div key={subarea}>{subarea}</div>\n      ))}\n    </div>\n  );\n\n  // const [list, setList] = useState([]);\n  // useEffect(() => {\n  //   if (neighborhoodsMap[area]) {\n  //     setList(neighborhoodsMap[area]);\n  //   }\n  // }, [area, neighborhoodsMap]);\n\n  return (\n    <>\n      <Paragraph title={area} content={subareas} />\n      <Header area={area} />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport { Map } from \"./Map\";\nimport { DataProvider } from \"./DataProvider\";\nimport { TweetsForArea } from \"./TweetsForArea\";\nimport { Paragraph } from \"./Paragraph\";\nimport { Section } from \"./Section\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { Sources } from \"./Sources\";\nimport { AreaPageHeader } from \"./AreaPageHeader\";\nimport paragraphStyles from \"./paragraph.module.scss\";\n\nexport const DispatchArea = ({ area }) => {\n\n  return (\n    <DataProvider filters={{ area }}>\n      <Section styleOption={2}>\n        <Paragraph\n          content={\n            <Link className={paragraphStyles.link} to=\"/\">\n              « main page\n            </Link>\n          }\n        />\n      </Section>\n\n      <Section styleOption={1}>\n        <AreaPageHeader area={area} />\n      </Section>\n\n      <Section styleOption={2} edgeToEdge={true}>\n        <ErrorBoundary>\n          <Map area={area} />\n        </ErrorBoundary>\n      </Section>\n\n      <Section styleOption={1}>\n        <Paragraph title=\"Today's Incidents\" />\n        <TweetsForArea />\n      </Section>\n\n      <Section styleOption={2}>\n        <Sources />\n      </Section>\n    </DataProvider>\n  );\n};\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\nimport { DispatchAll } from \"./dispatch/DispatchAll\";\nimport { DispatchArea } from \"./dispatch/DispatchArea\";\n\nimport styles from \"./app.module.scss\";\nimport { StatusProvider } from \"./dispatch/StatusContext\";\nimport { UserProvider } from \"./dispatch/UserProvider\";\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <Router>\n        <StatusProvider path=\"/\">\n          <UserProvider default>\n            <DispatchAll default />\n          </UserProvider>\n          <UserProvider path=\":area\">\n            <DispatchArea path=\"/\" />\n          </UserProvider>\n        </StatusProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport const register = (config) => {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport const unregister = () => {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./custom.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"rehoboam_container__28M8-\",\"counter\":\"rehoboam_counter__33zQ-\",\"path\":\"rehoboam_path__2oGje\",\"maincircle\":\"rehoboam_maincircle__UPFVE\",\"events\":\"rehoboam_events__24i6B\",\"eventcircle\":\"rehoboam_eventcircle__2SvTX\",\"major\":\"rehoboam_major__1xPRx\",\"active\":\"rehoboam_active__Tv3Oe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__1TT8J\",\"content\":\"section_content__32e_z\",\"phone\":\"section_phone__C_IbC\",\"styleDefault\":\"section_styleDefault__1fobi\",\"style1\":\"section_style1__-PHu2\",\"style2\":\"section_style2__3JfYX\",\"styleMap\":\"section_styleMap__2ZHhK\",\"subcontent\":\"section_subcontent__1yzVR\",\"edgeToEdge\":\"section_edgeToEdge__28iHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"tweet_container__2cPfJ\",\"detailed\":\"tweet_detailed__1zw6b\",\"phone\":\"tweet_phone__2hHRD\",\"greyedOut\":\"tweet_greyedOut__187c4\",\"tweet\":\"tweet_tweet__2okc-\",\"active\":\"tweet_active__1wASL\",\"details\":\"tweet_details__165yi\",\"units\":\"tweet_units__2ZVmK\",\"location\":\"tweet_location__26Q8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"history_container__jp729\",\"svg\":\"history_svg__wHz8f\",\"previous\":\"history_previous__1tjyT\",\"current\":\"history_current__2e2uB\",\"years\":\"history_years__2UEbj\",\"left\":\"history_left__YNLcK\",\"right\":\"history_right___nK7k\",\"axis\":\"history_axis__1LX0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"tweetdetails_container__1rcoE\",\"explanation\":\"tweetdetails_explanation__3lEx4\",\"secondary\":\"tweetdetails_secondary__sgHzU\",\"unit\":\"tweetdetails_unit__33Rog\",\"link\":\"tweetdetails_link__23U3X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph\":\"paragraph_paragraph__2KRp8\",\"text\":\"paragraph_text__1NbBg\",\"link\":\"paragraph_link__2D61j\",\"margin\":\"paragraph_margin__uTVtm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chart_container__3RTag\",\"header\":\"chart_header__3gCPW\",\"svg\":\"chart_svg__pP08z\",\"total\":\"chart_total__qkQSI\",\"title\":\"chart_title__2BYUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"map_container__1WM_n\",\"phone\":\"map_phone__1XpbO\",\"area\":\"map_area__1ZdwJ\",\"pane\":\"map_pane__g9Le7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topline\":\"topline_topline__3XNKt\",\"text\":\"topline_text__2_5SM\",\"total\":\"topline_total__b2Zkr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"areashape_container__3TA09\",\"phone\":\"areashape_phone__ZKBlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"spark_container__20mVH\",\"total\":\"spark_total__2Kxtk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"annotations\":\"annotations_annotations__1BK52\",\"line\":\"annotations_line__I-f5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tweets\":\"tweets_tweets__PhO0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"axis\":\"svg_axis__bET8j\",\"path\":\"svg_path__EmZTS\",\"highlight\":\"svg_highlight__1dzK0\",\"previous\":\"svg_previous__19uFf\",\"current\":\"svg_current__mnSmX\",\"now\":\"svg_now__2CbCS\",\"pulse\":\"svg_pulse__2GGpF\",\"live\":\"svg_live__2Jj88\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__3mk8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"group_container___U6Y6\",\"itemContainer\":\"group_itemContainer__91pkk\",\"vpadding\":\"group_vpadding__3db4T\",\"fullWidth\":\"group_fullWidth__33LFP\",\"right\":\"group_right__2euLw\",\"item\":\"group_item__1Q6Q7\",\"area\":\"group_area__3alEV\",\"text\":\"group_text__1JC9o\",\"list\":\"group_list__c2KEa\",\"phone\":\"group_phone__rXIIG\",\"major\":\"group_major__2byd-\",\"active\":\"group_active__2THyL\"};"],"sourceRoot":""}