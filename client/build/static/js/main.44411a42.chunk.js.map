{"version":3,"sources":["dispatch/group.module.scss","dispatch/UserProvider.jsx","dispatch/Dispatch.jsx","dispatch/Dot.jsx","api.jsx","dispatch/TweetsProvider.jsx","dispatch/mapOptions.js","dispatch/geojson.js","dispatch/Map.jsx","dispatch/AreaShape.jsx","clientUtils.js","dispatch/SvgDot.jsx","dispatch/Spark.jsx","dispatch/MultiLine.jsx","dispatch/ErrorBoundary.jsx","dispatch/GroupByArea.jsx","dispatch/Header.jsx","dispatch/Topline.jsx","dispatch/Rehoboam.jsx","groupingOptions.js","dispatch/useLegend.jsx","dispatch/Section.jsx","dispatch/Paragraph.jsx","dispatch/Annotations.jsx","dispatch/History.jsx","dispatch/TweetDetails.jsx","dispatch/Tweet.jsx","dispatch/TweetList.jsx","dispatch/TweetsActive.jsx","dispatch/TweetsMajor.jsx","dispatch/DispatchAll.jsx","dispatch/TweetsForArea.jsx","dispatch/DispatchArea.jsx","App.jsx","serviceWorker.js","index.tsx","dispatch/legend.module.scss","dispatch/chart.module.scss","dispatch/section.module.scss","dispatch/rehoboam.module.scss","dispatch/history.module.scss","dispatch/tweet.module.scss","dispatch/paragraph.module.scss","dispatch/spark.module.scss","dispatch/topline.module.scss","dispatch/tweetdetails.module.scss","dispatch/svg.module.scss","dispatch/dispatch.module.scss","dispatch/map.module.scss","dispatch/area.module.scss","dispatch/total.module.scss","dispatch/annotations.module.scss","dispatch/tweets.module.scss","app.module.scss"],"names":["module","exports","UserContext","createContext","UserContextKeys","useUser","useState","user","setUser","setSelection","key","value","console","log","UserProvider","children","Provider","Dispatch","area","type","interval","className","styles","container","Appearance","Dot","coordinates","severity","active","color","opacity","baseRadius","Circle","center","radius","fill","fillOpacity","stroke","weight","warn","getStatus","a","getByAPI","getAnnotations","getHistory","getTweetsForArea","queryParams","activeOrMajor","minimize","getTweetsByArea","getTweetsByType","getTweetsMajor24","getTweetsActive24","queryString","query","list","Object","keys","map","encodeURIComponent","join","api","allQueryParams","fetch","headers","Accept","response","json","deepEqual","require","TweetsContext","currentInterval","dataset","intervals","useStatus","status","setStatus","previousStatus","setPreviousStatus","useEffect","delay","intervalId","setInterval","newStatus","clearInterval","TweetsProvider","filters","initialValue","filteredByArea","activeOrMajorForArea","activeOrMajorByArea","byTypeForArea","groupedByArea","history","active24","major24","annotations","setValue","mostRecentId","undefined","setFilteredByArea","setActiveOrMajorForArea","setActiveOrMajorByArea","setByTypeForArea","setGroupedByArea","setHistory","setActive24","setMajor24","setAnnotations","values","useTweets","MapOptions","ProxyLight","url","r","attribution","ProxyDark","CartoDB_DarkMatter","ext","subdomains","CartoDB_DarkMatterNoLabels","CartoDB_Positron","CartoDB_PositronNoLabels","Jawg_Dark","token","Jawg_Light","Mapbox","Stadia_Alidade","Stamen_Toner","Default","NoLabels","byArea","features","prop","forEach","feature","properties","push","nhoodFeaturesByArea","zipCodes","nhoods","featuresForArea","nhood","areas","geojson","areaProp","cityGeojson","city","defaultCentroid","mapBounds","lat","long","centroid","length","coords","geometry","flat","latExtent","d3","longExtent","zoom","geojsonStyleBounds","strokeOpacity","geojsonStyleActive","fillColor","Map","tileOptions","useContext","typeFilter","selectedTweet","activeArea","rendered","filter","defaultZoom","derived","isSelectedDot","id_str","data","flatMap","selectedIndex","findIndex","slice","appearanceFn","d","minZoom","maxZoom","maxBounds","maxBoundsViscosity","zoomControl","TileLayer","GeoJSON","style","appearance","geojsonStyle","AreaShape","attributionControl","keyboard","intervalExtent","start","end","expandMinutes","expand","extent","offset","isPhone","window","matchMedia","matches","isActive","isAtLeastSev1","isAtLeastSev2","SvgDot","sev1","sev2","classnames","svgStyles","live","width","height","cx","size","cy","Spark","showTotal","title","useCumulative","showPrevious","svgData","setSvgData","nowDot","setNowDot","svgWidth","svgHeight","margin","accessor","cumulative","xExtent","yExtent","bins","xScale","domain","range","yScale","line","curve","tension","x","x0","y","newSvgData","path","reverse","lastBin","total","lastIndex","sparkStyles","svg","transform","i","current","now","MultiLine","showHeader","xAxisRef","useRef","yAxisRef","dateFormatter","xAxis","tickFormat","tickSize","scale","ticks","every","call","yAxis","chartStyles","header","chart","axis","ref","ErrorBoundary","props","state","hasError","error","errorInfo","this","React","Component","GroupByArea","totalsMap","setTotalsMap","neighborhoodsMap","CRA_NAM","sort","getNeighborhoods","itemContainer","to","vpadding","fullWidth","item","right","text","v","major","Header","Topline","number","topline","Rehoboam","svgPath","setSvgPath","sev2Circles","setSev2Circles","axisRef","maxLength","radialData","timestamp","fraction","Math","PI","toRadial","radialGen","angleScale","tickValues","h","axisRadialInner","sev2Data","Array","_","index","circles","toRadialDot","theta","sin","cos","rehoboamStyles","counter","circle","highlight","dots","c","AreaAccessors","ZipCode","zip","Area","neighborhoodGroup","AreaSecondary","neighborhood","Section","styleOption","edgeToEdge","style1","style2","styleMap","styleDefault","section","content","subcontent","Paragraph","paragraph","textureCurrent","textures","lines","lighter","orientation","texturePrevious","Annotations","rectWidth","scales","currentStart","clipPaths","calloutsRef","regionsRef","regions","setRegions","calloutFn","label","isEnd","sideX","sideY","callout","note","subject","nx","ny","dx","dy","calloutsFn","calloutsSvgData","Boolean","d3annotation","d3annotationCalloutCircle","newRegions","isCurrent","texture","id","previous","annotation","clipPath","closedPath","first","extraBottom","extraTop","History","setScales","setCurrentStart","paths","setPaths","setClipPaths","yearWidth","maxBarWidth","annotationRectWidth","svgRef","intervalCurrent","intervalPrevious","binsCurrent","binsLowRes","binsPrevious","timeExtent","b","lineCurrent","linePrevious","pathCurrent","pathPrevious","clipLineCurrent","clipLinePrevious","pixelOffset","invert","clipPathCurrent","clipPathPrevious","historyStyles","years","left","TweetDetails","tweet","address","units","unitsList","split","unitsStr","format","n","Number","parseFloat","toFixed","latlong","unit","TweetModes","Tweet","mode","isGreyedOut","isDetailed","time","timezone","detailed","greyedOut","onClick","newSelectedTweet","details","location","description","TweetList","tweets","selected","t","TweetsActive","TweetsMajor","DispatchAll","intro","sources","href","notes","TweetsForArea","filtered","DispatchArea","paragraphStyles","link","App","app","default","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.44411a42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"group_container___U6Y6\",\"itemContainer\":\"group_itemContainer__91pkk\",\"vpadding\":\"group_vpadding__3db4T\",\"fullWidth\":\"group_fullWidth__33LFP\",\"right\":\"group_right__2euLw\",\"item\":\"group_item__1Q6Q7\",\"text\":\"group_text__1JC9o\",\"list\":\"group_list__c2KEa\",\"major\":\"group_major__2byd-\"};","import React, { useState, createContext } from \"react\";\n\nexport const UserContext = createContext();\n\nexport const UserContextKeys = {\n  SelectedTweet: \"SelectedTweet\",\n  HoverArea: \"HoverArea\",\n  TypeFilter: \"TypeFilter\",\n};\n\nconst useUser = () => {\n  const [user, setUser] = useState({});\n\n  const setSelection = (key, value) => {\n    console.log(`USER: ${key} -->`, value);\n    setUser({ ...user, [key]: value });\n  };\n\n  return { user, setSelection };\n};\n\nexport const UserProvider = ({ children }) => {\n  return (\n    <UserContext.Provider value={useUser()}>{children}</UserContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { UserProvider } from \"./UserProvider\";\nimport styles from \"./dispatch.module.scss\";\n\nexport const Dispatch = ({ area, type, interval, children }) => {\n  console.log(`URL params/area: ${area}, type: ${type}, interval: ${interval}`);\n  return (\n    <div className={styles.container}>\n      <UserProvider>{children}</UserProvider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Circle } from \"react-leaflet\";\n\nexport const Appearance = {\n  Normal: 0,\n  Dimmed: -1,\n  Highlighted: 1,\n};\n\nexport const Dot = ({ coordinates, severity = 0, active = false }) => {\n  const color = active ? \"red\" : \"white\";\n  let opacity = 0.4;\n  if (severity >= 1) {\n    opacity = 0.7;\n  }\n  if (active) {\n    opacity = 0.9;\n  }\n  const baseRadius = active ? 250 : 150;\n\n  if (!coordinates[0]) {\n    console.warn(`Dot: coordinates = ${coordinates}`);\n    return null;\n  }\n\n  return (\n    <>\n      <Circle\n        center={coordinates}\n        radius={baseRadius}\n        color={color}\n        fill={true}\n        fillOpacity={opacity}\n        stroke={false}\n      ></Circle>\n      {severity >= 1 && (\n        <Circle\n          center={coordinates}\n          radius={baseRadius + 150}\n          weight={2}\n          color={color}\n          opacity={opacity}\n          fill={false}\n        ></Circle>\n      )}\n      {severity >= 2 && (\n        <Circle\n          center={coordinates}\n          radius={baseRadius + 300}\n          weight={2}\n          color={color}\n          opacity={opacity}\n          fill={false}\n        ></Circle>\n      )}\n    </>\n  );\n};\n","export async function getEnv() {\n  return getByAPI(\"env\");\n}\n\nexport async function getStatus() {\n  return getByAPI(`dispatch/status`);\n}\n\nexport async function getAnnotations() {\n  return getByAPI(`dispatch/history/annotations`);\n}\n\nexport async function getHistory() {\n  return getByAPI(`dispatch/history`);\n}\n\nexport async function getTweetsForArea(\n  area,\n  queryParams = { activeOrMajor: false, minimize: false }\n) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsByArea(queryParams = { activeOrMajor: false }) {\n  return getByAPI(`dispatch/tweets/byArea`, queryParams);\n}\n\nexport async function getTweetsByType(area = \"seattle\") {\n  return getByAPI(`dispatch/tweets/byType/${area}`, { minimize: false });\n}\n\nexport async function getTweetsMajor24() {\n  return getByAPI(\"dispatch/tweets/major24\", { minimize: false });\n}\n\nexport async function getTweetsActive24() {\n  return getByAPI(\"dispatch/tweets/active24\", { minimize: false });\n}\n\nexport async function getTweetsStatic() {\n  return getByAPI(\"dispatch/static\");\n}\n\nexport async function getTweetsSeattleGov() {\n  return getByAPI(\"dispatch/seattle-gov\");\n}\n\nconst queryString = (query = {}) => {\n  const list = Object.keys(query).map(\n    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(query[key])}`\n  );\n  return list.join(\"&\");\n};\n\nasync function getByAPI(api = \"\", queryParams = {}) {\n  const allQueryParams = {\n    minimize: true,\n    ...queryParams,\n  };\n  const query = queryString(allQueryParams);\n  const response = await fetch(`/api/${api}?${query}`, {\n    // TODO - use axios?\n    headers: { Accept: \"application-json\" },\n  });\n\n  return response.json();\n}\n","import React, { createContext } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport {\n  getTweetsForArea,\n  getTweetsByArea,\n  getTweetsByType,\n  getHistory,\n  getAnnotations,\n  getTweetsActive24,\n  getTweetsMajor24,\n  getStatus,\n} from \"../api\";\nconst deepEqual = require(\"fast-deep-equal/es6/react\");\nexport const TweetsContext = createContext();\n\nexport const currentInterval = (dataset) => dataset[0].intervals[0];\nexport const previousInterval = (dataset) => dataset[0].intervals[1];\n\nconst useStatus = () => {\n  const [status, setStatus] = useState({});\n  const [previousStatus, setPreviousStatus] = useState({});\n\n  useEffect(() => {\n    const delay = 30 * 1000;\n\n    console.log(\n      `🟥 useStatus/starting checker @ every ${delay / 1000} seconds`\n    );\n\n    const checkForUpdates = async () => {\n      const newStatus = await getStatus();\n      console.log(\n        `useStatus(${intervalId})/current status (next check in ${\n          delay / 1000\n        } sec)`,\n        newStatus\n      );\n\n      if (!deepEqual(newStatus, status)) {\n        console.log(\"useStatus/setting new status:\", newStatus);\n        setPreviousStatus({ ...status });\n        setStatus(newStatus);\n      }\n    };\n\n    const intervalId = setInterval(checkForUpdates, delay);\n    return () => clearInterval(intervalId);\n  }, [status]);\n\n  return { status, previousStatus };\n};\n\nconst useTweets = (filters = {}) => {\n  const initialValue = {\n    filteredByArea: [],\n    activeOrMajorForArea: [],\n    activeOrMajorByArea: [],\n    byTypeForArea: [],\n    groupedByArea: [],\n    history: [],\n    active24: [],\n    major24: [],\n    annotations: [],\n    status: {},\n  };\n  const [value, setValue] = useState(initialValue);\n  const { status, previousStatus } = useStatus();\n  console.log(\n    `useTweets/most recent:${status.mostRecentId}, previous:${previousStatus.mostRecentId}`\n  );\n  const mostRecentId = previousStatus.mostRecentId\n    ? status.mostRecentId\n    : undefined;\n\n  const [filteredByArea, setFilteredByArea] = useState([]);\n  const [activeOrMajorForArea, setActiveOrMajorForArea] = useState([]);\n  const [activeOrMajorByArea, setActiveOrMajorByArea] = useState([]);\n  const [byTypeForArea, setByTypeForArea] = useState([]);\n  const [groupedByArea, setGroupedByArea] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [active24, setActive24] = useState([]);\n  const [major24, setMajor24] = useState([]);\n  const [annotations, setAnnotations] = useState([]);\n\n  useEffect(() => {\n    console.log(\"🟢 PROVIDER/fetching all data\");\n\n    (async () => {\n      const area = filters.area || \"seattle\";\n      setFilteredByArea(await getTweetsForArea(area));\n    })();\n\n    (async () => {\n      const area = filters.area || \"seattle\";\n      setActiveOrMajorForArea(\n        await getTweetsForArea(area, { activeOrMajor: true, minimize: false })\n      );\n    })();\n\n    (async () => {\n      setByTypeForArea(await getTweetsByType(filters.area || \"seattle\"));\n    })();\n\n    (async () => {\n      setGroupedByArea(await getTweetsByArea());\n    })();\n\n    (async () => {\n      setActiveOrMajorByArea(\n        await getTweetsByArea({ activeOrMajor: true, minimize: false })\n      );\n    })();\n\n    (async () => {\n      const area = filters.area || \"seattle\";\n      setHistory(await getHistory(area));\n    })();\n\n    (async () => {\n      setAnnotations(await getAnnotations());\n    })();\n\n    (async () => {\n      const response = await getTweetsActive24();\n      setActive24(response[0].intervals[0].values);\n    })();\n\n    (async () => {\n      const response = await getTweetsMajor24();\n      setMajor24(response[0].intervals[0].values);\n    })();\n  }, [filters.area, mostRecentId]);\n\n  useEffect(() => {\n    setValue({\n      filteredByArea,\n      byTypeForArea,\n      groupedByArea,\n      history,\n      annotations,\n      active24,\n      major24,\n      activeOrMajorForArea,\n      activeOrMajorByArea,\n      status,\n    });\n  }, [\n    active24,\n    activeOrMajorByArea,\n    activeOrMajorForArea,\n    annotations,\n    byTypeForArea,\n    filteredByArea,\n    groupedByArea,\n    history,\n    major24,\n    status,\n  ]);\n\n  return value;\n};\n\nexport const TweetsProvider = ({ filters, children }) => {\n  const value = useTweets(filters);\n  return (\n    <TweetsContext.Provider value={value}>{children}</TweetsContext.Provider>\n  );\n};\n","export const MapOptions = {\n  ProxyLight: {\n    url: \"/api/dispatch/maps/{s}/{x}/{y}/{z}/{r}/light\",\n    r: \"@2x\",\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n  },\n  ProxyDark: {\n    url: \"/api/dispatch/maps/{s}/{x}/{y}/{z}/{r}/dark\",\n    r: \"@2x\",\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n  },\n  CartoDB_DarkMatter: {\n    url: \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n  },\n  CartoDB_DarkMatterNoLabels: {\n    url: \"https://{s}.basemaps.cartocdn.com/dark_nolabels/{z}/{x}/{y}{r}.png\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n  },\n  CartoDB_Positron: {\n    subdomains: \"abcd\",\n    url: \"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\",\n    ext: \"png\",\n    r: \"@2x\",\n\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n  },\n  CartoDB_PositronNoLabels: {\n    subdomains: \"abcd\",\n    url: \"https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png\",\n    ext: \"png\",\n    r: \"@2x\",\n\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n  },\n  Jawg_Dark: {\n    url:\n      \"https://{s}.tile.jawg.io/jawg-dark/{z}/{x}/{y}{r}.{ext}?access-token={token}\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    token: \"nMsnktvLJ03hHw3Bk4ehaEaNPGKjBE2pLhYTEcMdFEu65cNh4nMfXhGCdEwmhD7H\", // https://www.jawg.io/lab/access-tokens\n  },\n  Jawg_Light: {\n    url:\n      \"https://{s}.tile.jawg.io/jawg-light/{z}/{x}/{y}{r}.{ext}?access-token={token}\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    token: \"nMsnktvLJ03hHw3Bk4ehaEaNPGKjBE2pLhYTEcMdFEu65cNh4nMfXhGCdEwmhD7H\", // https://www.jawg.io/lab/access-tokens\n  },\n  Mapbox: {\n    // accessToken: \"pk.eyJ1IjoiYW5hcnNleWYiLCJhIjoiY2thZXlra3llMGF4MDJ4cXYzY2ZkamVkdyJ9.K8CENC0jz2D0O6ziL_jnNg\"\n  },\n  Stadia_Alidade: {\n    url:\n      \"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.{ext}\",\n    ext: \"png\",\n    r: \"@2x\",\n    attribution:\n      '&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n  },\n  Stamen_Toner: {\n    url: \"https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}{r}.{ext}\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      'Tiles by <a href=\"http://stamen.com\">Stamen</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OSM</a>',\n  },\n};\n\n// MapOptions.Default = MapOptions.Jawg_Dark;\n// MapOptions.NoLabels = MapOptions.Jawg_Dark;\nMapOptions.Default = MapOptions.ProxyDark;\nMapOptions.NoLabels = MapOptions.Default;\n","import * as d3 from \"d3\";\nimport zipCodes from \"./zip-codes.json\";\n// import nhoods from \"./nhoods.json\";\nimport nhoods from \"./2016_seattle_cra.json\";\nimport city from \"./2016_seattle_city.json\";\n\nconst nhoodProp = \"NEIGHBO\"; // TODO - import from server/groupby.js\nconst zipcodeProp = \"GEOID10\";\n\nconst byArea = (features, prop) => {\n  const map = {};\n  features.forEach((feature) => {\n    const key = feature.properties[prop];\n    const list = map[key] || [];\n    list.push(feature);\n    map[key] = list;\n  });\n  return map;\n};\n\nconst zipcodeFeaturesByArea = byArea(zipCodes.features, zipcodeProp);\nconst nhoodFeaturesByArea = byArea(nhoods.features, nhoodProp);\n\nconst featuresForZip = (zip) => zipcodeFeaturesByArea[zip];\nconst featuresForNhood = (nhood) => nhoodFeaturesByArea[nhood];\n\nexport const featuresForArea = featuresForNhood;\n\nexport const areas = {\n  geojson: nhoods,\n  areaProp: nhoodProp,\n};\n\nexport const cityGeojson = city;\n\nconst lat = 47.60912,\n  long = -122.34494;\nconst defaultCentroid = [lat, long];\n\nexport const mapBounds = [\n  [lat + 0.2, long - 0.3],\n  [lat - 0.2, long + 0.3],\n];\n\nexport const centroid = (features) => {\n  if (!features.length) {\n    console.warn(\n      `Cannot compute centroid, returning default: ${defaultCentroid}`\n    );\n    return defaultCentroid;\n  }\n  let coords = features\n    .map(({ geometry: { coordinates } }) => coordinates)\n    .flat(2);\n  const latExtent = d3.extent(coords, ([_, lat]) => lat);\n  const longExtent = d3.extent(coords, ([long, _]) => long);\n  return [d3.mean(latExtent), d3.mean(longExtent)];\n};\n","import React, { useContext } from \"react\";\nimport { Map as LeafletMap, TileLayer, GeoJSON } from \"react-leaflet\";\nimport { Dot, Appearance } from \"./Dot\";\nimport { TweetsContext } from \"./TweetsProvider\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\nimport { MapOptions } from \"./mapOptions\";\nimport { centroid, areas, cityGeojson, mapBounds } from \"./geojson\";\nimport \"./leaflet.scss\";\nimport styles from \"./map.module.scss\";\n\nconst minZoom = 10,\n  maxZoom = 13,\n  defaultZoom = 11;\nlet zoom = defaultZoom;\n\nconst activeColor = \"dodgerblue\";\nconst geojsonStyleBounds = {\n  color: \"#1e90ff66\", // dodgerblue with alpha\n  fillOpacity: 0,\n  strokeOpacity: 0.5,\n  weight: 4,\n};\nconst geojsonStyleActive = {\n  color: activeColor,\n  fillColor: activeColor,\n  fillOpacity: 0.15,\n  weight: 2,\n};\n\nexport const Map = ({ area, tileOptions = MapOptions.Default }) => {\n  const { byTypeForArea } = useContext(TweetsContext);\n  const { user } = useContext(UserContext);\n  const typeFilter = user[UserContextKeys.TypeFilter];\n\n  const { geojson, areaProp } = areas;\n\n  const selectedTweet = user[UserContextKeys.SelectedTweet];\n  const hoverArea = user[UserContextKeys.HoverArea];\n\n  const activeArea = hoverArea || area;\n  // console.log(\"MAP/active area\", activeArea);\n\n  const renderFilter = ({ properties }) =>\n    activeArea && properties[areaProp] === activeArea;\n\n  const { features } = geojson;\n  const rendered = features.filter(renderFilter);\n\n  if (area) {\n    zoom = defaultZoom + 1;\n  }\n  if (selectedTweet) {\n    zoom = maxZoom;\n  }\n\n  const center = selectedTweet\n    ? [selectedTweet.derived.lat, selectedTweet.derived.long]\n    : centroid(features);\n\n  const mapper = ({ intervals }) =>\n    intervals[0].values.map(\n      ({ id_str, derived: { lat, long, type, color, active, severity } }) => ({\n        id_str,\n        lat,\n        long,\n        type,\n        color,\n        active,\n        severity,\n      })\n    );\n\n  const isSelectedDot = ({ id_str }) => selectedTweet.id_str === id_str;\n\n  let data = [];\n\n  if (byTypeForArea.length) {\n    data = byTypeForArea\n      .flatMap(mapper)\n      .filter(({ type }) => !typeFilter || typeFilter === type);\n\n    console.log(\"Entries with no lat/long:\", data.filter(({lat}) => !lat).map(({id_str})=>id_str));\n\n    if (selectedTweet) {\n      // Render selected dot last, so it appears on top\n      const selectedIndex = data.findIndex(isSelectedDot);\n\n      data =\n        selectedIndex === -1\n          ? []\n          : [\n              ...data.slice(0, selectedIndex),\n              ...data.slice(selectedIndex + 1),\n              data[selectedIndex],\n            ];\n    }\n  }\n\n  const appearanceFn = (d) => {\n    return selectedTweet\n      ? isSelectedDot(d)\n        ? Appearance.Highlighted\n        : Appearance.Dimmed\n      : Appearance.Normal;\n  };\n\n  console.log(`MAP/rendering with ${data.length} dots, ${rendered.length} geo, center: ${center}`);\n  const city = cityGeojson.features[0];\n\n  return (\n    <LeafletMap\n      className={styles.container}\n      center={center}\n      zoom={zoom}\n      minZoom={minZoom}\n      maxZoom={maxZoom}\n      maxBounds={mapBounds}\n      maxBoundsViscosity={0.6}\n      zoomControl={false}\n    >\n      <TileLayer {...tileOptions} />\n      <GeoJSON data={city} style={geojsonStyleBounds} />\n      {rendered.map((feature) => (\n        <GeoJSON data={feature} style={geojsonStyleActive} />\n      ))}\n      {data.map((d) => (\n        <Dot // TODO - group under a single container?\n          coordinates={[d.lat, d.long]}\n          severity={d.severity}\n          appearance={appearanceFn(d)}\n          active={d.active}\n          // color={d.color}\n        ></Dot>\n      ))}\n    </LeafletMap>\n  );\n};\n","import React from \"react\";\nimport { Map as LeafletMap, TileLayer, GeoJSON } from \"react-leaflet\";\nimport { featuresForArea, centroid } from \"./geojson\";\nimport { MapOptions } from \"./mapOptions\";\nimport styles from \"./area.module.scss\";\n\nconst geojsonStyle = {\n  color: \"dodgerblue\",\n  fillColor: \"dodgerblue\",\n  fillOpacity: 0.15,\n  weight: 1,\n};\n\nexport const AreaShape = ({ area }) => {\n  const features = featuresForArea(area);\n  if (!features || !features.length) {\n    console.warn(\"AreaShape/no features for area\", area);\n    return null;\n  }\n\n  const center = centroid(features);\n  const zoom = 10;\n  const tileOptions = MapOptions.NoLabels;\n\n  return (\n    <LeafletMap\n      className={styles.container}\n      center={center}\n      zoom={zoom}\n      minZoom={zoom}\n      maxZoom={zoom}\n      zoomControl={false}\n      attributionControl={false}\n      keyboard={false}\n    >\n      <TileLayer {...tileOptions} />\n      <GeoJSON data={features} style={geojsonStyle} />\n    </LeafletMap>\n  );\n};\n","import * as d3 from \"d3\";\nimport { tz as timezone } from \"moment-timezone\";\n\nexport const intervalExtent = ({ start, end }, expandMinutes = 0) =>\n  expand([start, end], expandMinutes);\n\n// move to server/histogram.js\nexport const expand = (extent, expandMinutes = 0) => [\n  d3.timeMinute.offset(extent[0], -expandMinutes),\n  d3.timeMinute.offset(extent[1], expandMinutes),\n];\n\n// TODO - coordinate with section.module.scss, or find a way to use vars\n\nconst maxWidthPhone = 600;\nexport const getMaxWidth = () => 400; // TODO - useWindowSize()\n\nexport const isPhone = () => {\n  const query = window.matchMedia(\n    `only screen and (max-device-width: ${maxWidthPhone}px)`\n  );\n  return query.matches;\n};\n\nexport const toPacificStr = (timestamp) =>\n  timezone(timestamp, \"America/Vancouver\").format(\"h:mma\");\n\nexport const isActive = ({ derived: { active } }) => active;\nexport const isAtLeastSev1 = ({ derived: { severity } }) => severity >= 1;\nexport const isAtLeastSev2 = ({ derived: { severity } }) => severity >= 2;\n\nexport const isExactlySev1 = ({ derived: { severity } }) => severity === 1;\nexport const isExactlySev2 = ({ derived: { severity } }) => severity === 2;\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport svgStyles from \"./svg.module.scss\";\n\nexport const SvgDot = ({ active = false, sev1 = false, sev2 = false }) => {\n  const color = active ? \"red\" : \"white\";\n  const size = 18,\n    innerRadius = 3,\n    sev1Radius = 5,\n    sev2Radius = 8;\n\n  return (\n    <svg\n      className={classnames({ [svgStyles.live]: active })}\n      width={size}\n      height={size}\n    >\n      <circle cx={size / 2} cy={size / 2} r={innerRadius} fill={color} />\n      {(sev1 || sev2) && (\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={sev1Radius}\n          fill=\"none\"\n          stroke={color}\n        />\n      )}\n      {sev2 && (\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={sev2Radius}\n          fill=\"none\"\n          stroke={color}\n        />\n      )}\n    </svg>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport * as d3 from \"d3\";\nimport sparkStyles from \"./spark.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\nimport { intervalExtent, isPhone } from \"../clientUtils\";\n\nexport const Spark = ({  intervals = [],\n  title,\n  showTotal,\n  useCumulative,\n  showPrevious\n}) => {\n  const [svgData, setSvgData] = useState([]);\n  const [nowDot, setNowDot] = useState(null);\n\n  const svgWidth = isPhone ? 100 : 150;\n  const svgHeight = 0.2 * svgWidth,\n    margin = { top: 5, right: 5, bottom: 5, left: 5 },\n    width = svgWidth - margin.left - margin.right,\n    height = svgHeight - margin.bottom - margin.top;\n\n  useEffect(() => {\n    // TODO - no need for useEffect?\n    if (!intervals.length) {\n      return;\n    }\n\n    const data = (showPrevious ? intervals : intervals.slice(0,1));\n\n    const accessor = ({ length, cumulative }) =>\n      useCumulative ? cumulative : length;\n\n    const xExtent = intervalExtent(data[0]);\n\n    const yExtent = [\n      0,\n      d3.max([1.0, ...data.flatMap(({ bins }) => bins).map(accessor)]),\n    ];\n\n    const xScale = d3.scaleTime().domain(xExtent).range([0, width]);\n    const yScale = d3.scaleLinear().domain(yExtent).range([height, 0]);\n    \n    const line = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(d.x0))\n      .y((d) => yScale(accessor(d)));\n\n    const paths = data.map((d) => d.bins).map(line);\n\n    let newSvgData = paths.map((path) => ({ path })).reverse(); // render highlight after all others\n\n    setSvgData(newSvgData);\n\n    const bins = data[0].bins;\n    const lastBin = bins[bins.length - 1];\n    setNowDot({\n      cx: xScale(lastBin.x0),\n      cy: yScale(accessor(lastBin)),\n      r: 3,\n    });\n  }, [width, height, intervals, showPrevious, useCumulative]);\n\n  if (!intervals.length) {\n    return null;\n  }\n\n  const total = intervals[0].total;\n  const lastIndex = svgData.length - 1;\n\n  return (\n    <div className={sparkStyles.container}>\n      \n      <svg className={sparkStyles.svg} width={svgWidth} height={svgHeight}>\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <g>\n            {svgData.map((d, i) => (\n              <path\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: i === lastIndex,\n                })}\n                d={d.path}\n              />\n            ))}\n          </g>\n          {nowDot && (\n            <g className={svgStyles.now}>\n              <circle {...nowDot} />\n            </g>\n          )}\n        </g>\n      </svg>\n      {showTotal && <span className={sparkStyles.total}>{total}</span>}\n    </div>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport * as d3 from \"d3\";\nimport chartStyles from \"./chart.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\nimport { intervalExtent, isPhone } from \"../clientUtils\";\n\nexport const MultiLine = ({\n  intervals = [],\n  title,\n  showHeader = false,\n  useCumulative,\n}) => {\n  const [svgData, setSvgData] = useState([]);\n  const [nowDot, setNowDot] = useState(null);\n\n  const svgWidth = isPhone ? 350 : 500;\n  const svgHeight = 0.35 * svgWidth,\n    margin = { top: 20, right: 30, bottom: 20, left: 30 },\n    width = svgWidth - margin.left - margin.right,\n    height = svgHeight - margin.bottom - margin.top;\n\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n\n  useEffect(() => {\n    // TODO - no need for useEffect?\n    if (!intervals.length) {\n      return;\n    }\n    const accessor = ({ length, cumulative }) =>\n      useCumulative ? cumulative : length;\n\n    const xExtent = intervalExtent(intervals[0]);\n\n    const yExtent = [\n      0,\n      d3.max([1.0, ...intervals.flatMap(({ bins }) => bins).map(accessor)]),\n    ];\n\n    const dateFormatter = d3.timeFormat(\"%-I%p\"); // https:/github.com/d3/d3-time-format#locale_format\n\n    const xScale = d3.scaleTime().domain(xExtent).range([0, width]);\n    const xAxis = d3\n      .axisBottom()\n      .tickFormat(dateFormatter)\n      .tickSize(3)\n      .scale(xScale)\n      .ticks(d3.timeHour.every(12));\n    d3.select(xAxisRef.current).call(xAxis);\n\n    const yScale = d3.scaleLinear().domain(yExtent).range([height, 0]);\n    const yAxis = d3.axisLeft().scale(yScale).ticks(2);\n    d3.select(yAxisRef.current).call(yAxis);\n\n    const line = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(d.x0))\n      .y((d) => yScale(accessor(d)));\n\n    const paths = intervals.map((d) => d.bins).map(line);\n\n    let newSvgData = paths.map((path) => ({ path })).reverse(); // render highlight after all others\n\n    setSvgData(newSvgData);\n\n    const bins = intervals[0].bins;\n    if (bins.length) {\n      const lastBin = bins[bins.length - 1];\n      setNowDot({\n        cx: xScale(lastBin.x0),\n        cy: yScale(accessor(lastBin)),\n        r: 3,\n      });\n    }\n  }, [height, intervals, useCumulative, width]);\n\n  if (!intervals.length) {\n    return null;\n  }\n\n  const total = intervals[0].total;\n  const lastIndex = svgData.length - 1;\n\n  return (\n    <div className={chartStyles.container}>\n      {showHeader && (\n        <div className={chartStyles.header}>\n          {title && <div className={chartStyles.title}>{title}</div>}\n          {typeof total === \"number\" && (\n            <div className={chartStyles.total}>{total}</div>\n          )}\n        </div>\n      )}\n      <svg className={chartStyles.chart} width={svgWidth} height={svgHeight}>\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <g\n            className={svgStyles.axis}\n            ref={xAxisRef}\n            transform={`translate(0,${height})`}\n          />\n          <g className={svgStyles.axis} ref={yAxisRef} />\n          <g>\n            {svgData.map((d, i) => (\n              <path\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: i === lastIndex,\n                })}\n                d={d.path}\n              />\n            ))}\n          </g>\n          {nowDot && (\n            <g className={svgStyles.now}>\n              <circle {...nowDot} />\n            </g>\n          )}\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"ErrorBoundary\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"@reach/router\";\nimport { TweetsContext } from \"./TweetsProvider\";\nimport { AreaShape } from \"./AreaShape\";\nimport { featuresForArea } from \"./geojson\";\nimport { isActive, isAtLeastSev2, isAtLeastSev1 } from \"../clientUtils\";\nimport { SvgDot } from \"./SvgDot\";\nimport { Spark } from \"./Spark\";\nimport { MultiLine } from \"./MultiLine\";\nimport { Total } from \"./Total\";\nimport classnames from \"classnames\";\nimport styles from \"./group.module.scss\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\n\nexport const GroupByArea = () => {\n  const { groupedByArea, activeOrMajorByArea } = useContext(TweetsContext);\n  const [totalsMap, setTotalsMap] = useState({});\n\n  useEffect(() => {\n    const map = {};\n    activeOrMajorByArea.forEach(({ key: area, intervals }) => {\n      const values = intervals[0].values;\n      if (values.length) {\n        map[area] = {\n          active: values.filter(isActive).length,\n          sev1: values.filter(isAtLeastSev1).length,\n          sev2: values.filter(isAtLeastSev2).length,\n        };\n      }\n    });\n    setTotalsMap(map);\n  }, [groupedByArea, activeOrMajorByArea]);\n\n  if (!groupedByArea.length) {\n    return null;\n  }\n\n  const getNeighborhoods = () => {\n    const map = {};\n    groupedByArea\n      .map(({ key }) => key)\n      .forEach((key) => {\n        map[key] = featuresForArea(key)\n          .map(({ properties: { CRA_NAM } }) => CRA_NAM)\n          .sort();\n      });\n    return map;\n  };\n  const neighborhoodsMap = getNeighborhoods();\n\n  return (\n    <ErrorBoundary>\n      <div className={styles.container}>\n        {groupedByArea.map(({ key: area, intervals }) => (\n          <div className={styles.itemContainer}>\n            <Link to={`${encodeURIComponent(area)}`}>\n              <div className={styles.vpadding}>\n                <div className={styles.fullWidth}>\n                  <div className={styles.item}>&nbsp;</div>\n                  <div className={classnames(styles.item, styles.right)}>\n                    <Spark\n                      intervals={intervals}\n                      useCumulative={true}\n                      showTotal={true}\n                    />\n                  </div>\n                </div>\n\n                <div className={classnames(styles.item, styles.text)}>\n                  <div>{area}</div>\n                  <div className={styles.list}>\n                    {neighborhoodsMap[area].map((v) => (\n                      <div>• {v}</div>\n                    ))}\n                  </div>\n                </div>\n\n                <div className={classnames(styles.item, styles.right)}>\n                  <div>\n                    <AreaShape area={area} />\n                  </div>\n                  {/* <Total total={intervals[0].total} /> */}\n                  {totalsMap[area] && (\n                    <div className={styles.major}>\n                      {totalsMap[area].active > 0 && (\n                        <span>\n                          <span>{totalsMap[area].active} active</span>\n                          <SvgDot active={true} />\n                        </span>\n                      )}\n                      {totalsMap[area].sev2 > 0 && (\n                        <span>\n                          <span>{totalsMap[area].sev2} major</span>\n                          <SvgDot sev2={true} />\n                        </span>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </ErrorBoundary>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { TweetsContext } from \"./TweetsProvider\";\nimport { MultiLine } from \"./MultiLine\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\n\nexport const Header = ({ area }) => {\n  const { filteredByArea } = useContext(TweetsContext);\n\n  if (!filteredByArea.length) {\n    return null;\n  }\n\n  return (\n    <ErrorBoundary>\n      <MultiLine\n        intervals={filteredByArea[0].intervals}\n        useCumulative={!!area}\n      />\n    </ErrorBoundary>\n  );\n};\n","import React from \"react\";\nimport styles from \"./topline.module.scss\";\nexport const Topline = ({ number = 0, text }) => {\n  return (\n    <div className={styles.topline}>\n      {text && <div className={styles.text}>{text}</div>}\n      <div className={styles.number}>{number}</div>\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport classnames from \"classnames\";\nimport { axisRadialInner } from \"d3-radial-axis\";\nimport { TweetsContext, currentInterval } from \"./TweetsProvider\";\nimport { intervalExtent } from \"../clientUtils\";\nimport { Topline } from \"./Topline\";\nimport rehoboamStyles from \"./rehoboam.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nexport const Rehoboam = ({ area }) => {\n  const { filteredByArea, activeOrMajorForArea } = useContext(TweetsContext);\n  const [svgPath, setSvgPath] = useState(null);\n  const [sev2Circles, setSev2Circles] = useState([]);\n  const axisRef = useRef(null);\n\n  const mainRadius = 100;\n  const margin = 30,\n    width = 2 * mainRadius,\n    height = 2 * mainRadius,\n    svgWidth = width + 2 * margin,\n    svgHeight = height + 2 * margin;\n\n  const dotRadius = 5;\n\n  useEffect(() => {\n    if (!filteredByArea.length) {\n      return;\n    }\n\n    const current = currentInterval(filteredByArea);\n    // const bins = current.binsHiRes;\n    const bins = current.bins;\n    const extent = intervalExtent(current);\n    const maxDisturbance = margin / 2;\n    const maxLength = d3.max(bins, ({ length }) => length);\n    const [start, end] = extent;\n\n    const toRadial = (timestamp, length) => {\n      const fraction = (timestamp - start) / (end - start);\n      const radians = 2 * Math.PI * fraction;\n      const disturbance = maxLength ? maxDisturbance * (length / maxLength) : 0;\n      return [radians, mainRadius + disturbance];\n    };\n\n    const radialData = bins.map(({ x0, length }) => toRadial(x0, length));\n    const radialGen = d3.lineRadial().curve(d3.curveCardinal.tension(0.4));\n    const path = radialGen(radialData);\n    setSvgPath(path);\n\n    const angleScale = d3\n      .scaleLinear()\n      .domain(extent)\n      .range([0, 2 * Math.PI]);\n    const HOUR = 3600 * 1000;\n    const dateFormatter = d3.timeFormat(\"%-I%p\"); // https://github.com/d3/d3-time-format#locale_format\n    const tickValues = [0, 6, 12, 18].map((h) => current.start + h * HOUR);\n    const axis = axisRadialInner(angleScale, mainRadius)\n      .tickFormat(dateFormatter)\n      .tickSize(0)\n      .tickValues(tickValues); // for some reason d3.timeHour.every() doesn't work here\n    d3.select(axisRef.current).call(axis);\n\n    if (activeOrMajorForArea.length) {\n      const toRadialDot = (timestamp, index) => {\n        const fraction = (timestamp - start) / (end - start);\n        const radians = 2 * Math.PI * fraction;\n        const offset = index * 2 * dotRadius;\n        return [radians, mainRadius + offset];\n      };\n\n      const activeOrMajorBins = currentInterval(activeOrMajorForArea).bins;\n      const toSev2Points = ({ x0, sev2 }) => {\n        const stack = [...new Array(sev2)].map((_, i) => ({\n          x0,\n          index: i,\n        }));\n        return stack;\n      };\n      const sev2Data = activeOrMajorBins.flatMap(toSev2Points);\n      console.log(\"REHOBOAM/sev2 data\", sev2Data);\n      const radialSev2Data = sev2Data.map(({ x0, index }) =>\n        toRadialDot(x0, index)\n      );\n\n      const circles = radialSev2Data.map(([theta, r]) => ({\n        cx: r * Math.sin(theta),\n        cy: r * -Math.cos(theta),\n        r: dotRadius,\n      }));\n\n      setSev2Circles(circles);\n    }\n  }, [activeOrMajorForArea, filteredByArea]);\n\n  const total = filteredByArea.length\n    ? currentInterval(filteredByArea).total\n    : 0;\n  const text = area || \"Seattle\";\n\n  return (\n    <div className={rehoboamStyles.container}>\n      <div className={rehoboamStyles.counter}>\n        <Topline number={total} text={text} />\n      </div>\n      <svg className={rehoboamStyles.svg} width={svgWidth} height={svgHeight}>\n        <g\n          transform={`translate(${margin + mainRadius},${margin + mainRadius})`}\n        >\n          <g className={svgStyles.axis} ref={axisRef} />\n          <circle\n            className={rehoboamStyles.circle}\n            cx={0}\n            cy={0}\n            r={mainRadius}\n          />\n          {svgPath && (\n            <path\n              className={classnames(\n                svgStyles.path,\n                svgStyles.highlight,\n                rehoboamStyles.path\n              )}\n              d={svgPath}\n            />\n          )}\n          <g className={rehoboamStyles.dots}>\n            {sev2Circles.map((c) => (\n              <>\n                <circle className={rehoboamStyles.sev2} {...c} />\n                <circle {...c} r={c.r + 3} fill=\"none\" stroke=\"white\" />\n              </>\n            ))}\n          </g>\n        </g>\n      </svg>\n    </div>\n  );\n};\n","// see groupby.js\nexport const GroupByOptions = {\n  // TODO - import from server\n  Nothing: undefined,\n  IncidentType: \"type\",\n  ZipCode: \"zip\",\n  Area: \"area\",\n  TimeInterval: \"time\",\n};\n\nexport const AreaAccessors = {\n  ZipCode: ({ derived: { zip } }) => zip,\n  Area: ({ derived: { neighborhoodGroup } }) => neighborhoodGroup,\n  AreaSecondary: ({ derived: { neighborhood } }) => neighborhood,\n};\nAreaAccessors.Default = AreaAccessors.Area;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { TweetsContext } from \"./TweetsProvider\";\nimport { GroupByOptions } from \"../groupingOptions\";\n\nconst legendByType = (groups) => {\n  // console.log(\"TODO useLegend/groups\", groups);\n  const legendByType = groups.map(({ key, color, intervals }) => {\n    return {\n      key,\n      color,\n      total: intervals[0].total,\n    };\n  });\n  return { [GroupByOptions.IncidentType]: legendByType };\n};\n\nexport const useLegend = () => {\n  const { byTypeForArea } = useContext(TweetsContext);\n  const [legend, setLegend] = useState({});\n\n  useEffect(() => {\n    if (!byTypeForArea.length) {\n      return;\n    }\n    const sublegend = legendByType(byTypeForArea);\n    console.warn(\"useLegend/setting main - TODO convert to context\");\n\n    const newLegend = { ...legend, ...sublegend };\n    console.log(\"new legend:\", newLegend);\n    setLegend(newLegend);\n  }, [byTypeForArea]);\n\n  return [legend];\n};\n","import React from \"react\";\nimport styles from \"./section.module.scss\";\n\nexport const Section = ({ children, styleOption = 0, edgeToEdge = false }) => {\n  const style =\n    styleOption === 1\n      ? styles.style1\n      : styleOption === 2\n      ? styles.style2\n      : styleOption === 3\n      ? styles.styleMap\n      : styles.styleDefault;\n  return (\n    <section className={`${styles.section} ${style}`}>\n      <div className={styles.content}>\n        <div\n          className={`${styles.subcontent} ${\n            edgeToEdge ? styles.edgeToEdge : \"\"\n          }`}\n        >\n          {children}\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React from \"react\";\nimport styles from \"./paragraph.module.scss\";\nimport classnames from \"classnames\";\n\nexport const Paragraph = ({ title = \"\", content = \"\", margin = false }) => {\n  return (\n    <div className={classnames(styles.paragraph, { [styles.margin]: margin })}>\n      {title && <h3>{title}</h3>}\n      <div className={styles.text}>{content}</div>\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport textures from \"textures\";\nimport {\n  annotation as d3annotation,\n  annotationCalloutCircle as d3annotationCalloutCircle,\n} from \"d3-svg-annotation\";\nimport { TweetsContext } from \"./TweetsProvider\";\n\nimport styles from \"./annotations.module.scss\";\n\nconst textureCurrent = textures\n  .lines()\n  .lighter()\n  .size(8)\n  .orientation(\"6/8\")\n  .stroke(\"#51aae8\");\nconst texturePrevious = textures.lines().lighter().size(8).stroke(\"#51aae8\");\n\nexport const Annotations = ({ rectWidth, scales, currentStart, clipPaths }) => {\n  const calloutsRef = useRef(null);\n  const regionsRef = useRef(null);\n  const { annotations } = useContext(TweetsContext);\n  const [regions, setRegions] = useState([]);\n\n  d3.select(regionsRef.current).call(textureCurrent);\n  d3.select(regionsRef.current).call(texturePrevious);\n\n  useEffect(() => {\n    if (!scales.length) {\n      return;\n    }\n\n    const regionFn = ({ start, end, offset }) => {\n      if (!start || !end) {\n        return undefined;\n      }\n\n      const [xScale, yScale] = scales;\n\n      const isCurrent = offset === 0;\n      const texture = isCurrent ? textureCurrent : texturePrevious;\n\n      return {\n        x: xScale(0) - (isCurrent ? 0 : rectWidth),\n        y: yScale(start.timestamp + offset),\n        width: rectWidth,\n        height:\n          yScale(end.timestamp + offset) - yScale(start.timestamp + offset),\n        fill: texture.url(),\n      };\n    };\n\n    const calloutFn = ({\n      item: { title, label, value, timestamp },\n      offset,\n      scales: [xScale, yScale],\n      isEnd = false,\n    }) => {\n      const isPrevious = timestamp < currentStart;\n      const sideX = isPrevious ? -1 : 1;\n\n      const x = value ? xScale(value) : rectWidth;\n      const sideY = isEnd ? 1 : -1;\n      const y = yScale(timestamp + offset);\n      const callout = {\n        note: {\n          title,\n          label,\n        },\n        x: sideX * x,\n        y,\n        color: \"red\",\n        subject: {\n          radius: 6,\n        },\n      };\n\n      if (value) {\n        callout.nx = sideX * (rectWidth + 10);\n        callout.ny = y;\n      } else {\n        callout.dx = sideX * 10;\n        callout.dy = sideY * 10;\n      }\n      return callout;\n    };\n\n    const calloutsFn = ({ start, end, offset }) => [\n      calloutFn({ item: start, offset, scales }),\n      end ? calloutFn({ item: end, offset, scales, isEnd: true }) : undefined,\n    ];\n\n    const calloutsSvgData = annotations.flatMap(calloutsFn).filter(Boolean);\n    console.log(\"HISTORY/annotations\", annotations);\n    console.log(\"HISTORY/callouts\", annotations.flatMap(calloutsFn));\n\n    const callout = d3annotation()\n      .annotations(calloutsSvgData)\n      .type(d3annotationCalloutCircle);\n\n    d3.select(calloutsRef.current).call(callout);\n\n    const newRegions = annotations.map(regionFn).filter(Boolean);\n    setRegions(newRegions);\n\n    console.log(\"ANNOTATIONS/useEffect end\");\n  }, [annotations, currentStart, rectWidth, scales]);\n\n  return (\n    <>\n      <defs>\n        <clipPath id=\"clippath\">\n          <path d={clipPaths.current} />\n          <path d={clipPaths.previous} />\n        </clipPath>\n      </defs>\n      <g ref={regionsRef}>\n        {regions.map((annotation) => (\n          <rect {...annotation} clipPath=\"url(#clippath)\" />\n        ))}\n      </g>\n      <g className={styles.annotations} ref={calloutsRef} />\n    </>\n  );\n};\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport classnames from \"classnames\";\n\nimport {\n  TweetsContext,\n  currentInterval,\n  previousInterval,\n} from \"./TweetsProvider\";\nimport { intervalExtent, isPhone } from \"../clientUtils\";\nimport historyStyles from \"./history.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\nimport { Annotations } from \"./Annotations\";\n\nconst closedPath = (bins, line, offset) => {\n  let data = bins.map(({ x0, length }) => ({\n    timestamp: x0,\n    value: length + offset,\n  }));\n\n  const first = data[0],\n    last = data[data.length - 1];\n  const extraBottom = { timestamp: last.timestamp, value: 10000 };\n  const extraTop = { timestamp: first.timestamp, value: 10000 };\n\n  data = [...data, extraBottom, extraTop, first];\n  return line(data);\n};\n\nexport const History = () => {\n  const { history } = useContext(TweetsContext);\n  // const [svgData, setSvgData] = useState([]);\n  const [scales, setScales] = useState([]);\n  const [currentStart, setCurrentStart] = useState([]);\n  const [paths, setPaths] = useState([]);\n  const [clipPaths, setClipPaths] = useState({});\n\n  const binHeight = 2;\n  const svgWidth = isPhone ? 350 : 500,\n    margin = { top: 10, right: 30, bottom: 30, left: 30 },\n    svgHeight = 366 * (binHeight + 1) + margin.top + margin.bottom,\n    width = svgWidth - margin.left - margin.right,\n    height = svgHeight - margin.top - margin.bottom;\n  const yearWidth = width / 2;\n  const maxBarWidth = yearWidth * 0.45;\n  const annotationRectWidth = yearWidth * 0.55;\n\n  const svgRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n\n  useEffect(() => {\n    if (!history.length) {\n      return;\n    }\n\n    const intervalCurrent = currentInterval(history);\n    setCurrentStart(intervalCurrent.start);\n    const intervalPrevious = previousInterval(history);\n    const binsCurrent = intervalCurrent.binsLowRes;\n    const binsPrevious = intervalPrevious.binsLowRes;\n    const timeExtent = intervalExtent(intervalCurrent, 60);\n\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(binsCurrent, (b) => b.length)])\n      .range([0, maxBarWidth]);\n\n    const yScale = d3.scaleTime().domain(timeExtent).range([0, height]);\n\n    setScales([xScale, yScale]);\n\n    const dateFormatter = d3.timeFormat(\"%b\"); // https://github.com/d3/d3-time-format#locale_format\n\n    const yAxis = d3\n      .axisLeft()\n      .tickFormat(dateFormatter)\n      .scale(yScale)\n      .ticks(d3.timeMonth.every(1))\n      .tickSize(0);\n    d3.select(yAxisRef.current).call(yAxis);\n\n    const xAxis = d3.axisBottom().scale(xScale).ticks(2);\n    d3.select(xAxisRef.current).call(xAxis);\n\n    // const currentYear = binsCurrent.map(({ x0, length }) => ({\n    //   x: xScale(0),\n    //   width: xScale(length),\n    //   y: yScale(x0),\n    //   height: binHeight,\n    //   rx: 1,\n    // }));\n    // const previousYear = binsPrevious.map(({ x0, length }) => ({\n    //   x: xScale(0) - xScale(length),\n    //   width: xScale(length),\n    //   y: yScale(x0),\n    //   height: binHeight,\n    //   rx: 1,\n    // }));\n    // setSvgData([currentYear, previousYear]);\n\n    const lineCurrent = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(d.length))\n      .y((d) => yScale(d.x0));\n    const linePrevious = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(-d.length))\n      .y((d) => yScale(d.x0));\n\n    const pathCurrent = lineCurrent(binsCurrent);\n    const pathPrevious = linePrevious(binsPrevious);\n    setPaths([pathCurrent, pathPrevious]);\n\n    const clipLineCurrent = d3\n      .line()\n      .x((d) => xScale(d.value))\n      .y((d) => yScale(d.timestamp));\n\n    const clipLinePrevious = d3\n      .line()\n      .x((d) => xScale(-d.value))\n      .y((d) => yScale(d.timestamp));\n\n    const pixelOffset = xScale.invert(2) - xScale.invert(0);\n    const clipPathCurrent = closedPath(\n      binsCurrent,\n      clipLineCurrent,\n      pixelOffset\n    );\n    const clipPathPrevious = closedPath(\n      binsPrevious,\n      clipLinePrevious,\n      pixelOffset\n    );\n\n    setClipPaths({ current: clipPathCurrent, previous: clipPathPrevious });\n\n    console.log(\"HISTORY/useEffect end\");\n  }, [history, height, maxBarWidth]);\n\n  console.log(\"HISTORY/render\");\n\n  return (\n    <div className={historyStyles.container}>\n      <div className={historyStyles.years}>\n        <div className={historyStyles.left}>2019</div>\n        <div className={historyStyles.right}>2020</div>\n      </div>\n      <svg\n        className={historyStyles.svg}\n        ref={svgRef}\n        width={svgWidth}\n        height={svgHeight}\n      >\n        <g transform={`translate(${margin.left + yearWidth},${margin.top})`}>\n          {/* <g\n            className={`${svgStyles.axis} ${historyStyles.axis}`}\n            ref={xAxisRef}\n            transform={`translate(0,${height})`}\n          /> */}\n          <g\n            className={`${svgStyles.axis} ${historyStyles.axis}`}\n            ref={yAxisRef}\n          />\n          {/* <g>\n            {svgData.map((dataset, iDataset) =>\n              dataset.map((d) => (\n                <rect\n                  className={classnames({\n                    [historyStyles.previous]: iDataset,\n                    [historyStyles.current]: !iDataset,\n                  })}\n                  x={d.x}\n                  y={d.y}\n                  width={d.width}\n                  height={d.height}\n                  rx={d.rx}\n                ></rect>\n              ))\n            )}\n          </g> */}\n          <g>\n            {paths.map((path, i) => (\n              <path\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: !i,\n                  [svgStyles.previous]: i,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          <g>\n            <Annotations\n              rectWidth={annotationRectWidth}\n              currentStart={currentStart}\n              scales={scales}\n              clipPaths={clipPaths}\n            />\n          </g>\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React from \"react\";\nimport styles from \"./tweetdetails.module.scss\";\n\nexport const TweetDetails = ({\n  tweet: {\n    derived: { timestamp, address, units, type, color, lat, long },\n  },\n}) => {\n  const unitsList = units.split(\" \");\n  const unitsStr = `${unitsList.length} ${\n    unitsList.length === 1 ? \"unit\" : \"units\"\n  } dispatched:`;\n\n  const format = (n) => Number.parseFloat(n).toFixed(3);\n  const coordinates = `${format(lat)}°N ${format(-long)}°W`;\n  return (\n    <div className={styles.container}>\n      <div>{address}</div>\n      <div className={styles.latlong}>{coordinates}</div>\n      <div>\n        <span>{unitsStr}</span>\n        {unitsList.map((unit) => (\n          <span className={styles.unit}>{unit}</span>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport styles from \"./tweet.module.scss\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\nimport { AreaAccessors, GroupByOptions } from \"../groupingOptions\";\nimport { TweetDetails } from \"./TweetDetails\";\nimport {\n  toPacificStr,\n  isActive,\n  isAtLeastSev1,\n  isAtLeastSev2,\n} from \"../clientUtils\";\nimport { SvgDot } from \"./SvgDot\";\n\nexport const TweetModes = {\n  Default: 0,\n  Detailed: 1,\n  GreyedOut: 2,\n};\n\nexport const Tweet = ({ tweet, mode = TweetModes.Default }) => {\n  const { user, setSelection } = useContext(UserContext);\n  const selectedTweet = user[UserContextKeys.SelectedTweet];\n\n  const handleClick = () => {\n    const newSelectedTweet =\n      selectedTweet && selectedTweet.id_str === tweet.id_str ? null : tweet;\n    setSelection(UserContextKeys.SelectedTweet, newSelectedTweet);\n  };\n  const active = isActive(tweet);\n  const sev1 = isAtLeastSev1(tweet);\n  const sev2 = isAtLeastSev2(tweet);\n\n  const accessor = AreaAccessors.AreaSecondary;\n  const area = accessor(tweet);\n\n  const isGreyedOut = mode === TweetModes.GreyedOut;\n  const isDetailed = mode === TweetModes.Detailed;\n  const time = toPacificStr(tweet.derived.timestamp);\n\n  return (\n    <div\n      className={`${styles.container} ${isDetailed ? styles.detailed : \"\"} ${\n        isGreyedOut ? styles.greyedOut : \"\"\n      }`}\n      onClick={handleClick}\n    >\n      <div className={styles.tweet}>\n        <div className={styles.details}>\n          <span className={styles.location}>\n            {area} @ {time}\n          </span>\n          <SvgDot active={active} sev1={sev1} sev2={sev2} />\n        </div>\n        <div>\n          {tweet.derived.description}\n        </div>\n      </div>\n      {isDetailed && <TweetDetails tweet={tweet} />}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport styles from \"./tweets.module.scss\";\nimport { Tweet, TweetModes } from \"./Tweet\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\n\nexport const TweetList = ({ tweets = [] }) => {\n  const { user } = useContext(UserContext);\n  const selected = user[UserContextKeys.SelectedTweet];\n\n  const mode = ({ id_str }) =>\n    selected\n      ? id_str === selected.id_str\n        ? TweetModes.Detailed\n        : TweetModes.GreyedOut\n      : TweetModes.Default; // TODO - remove modes\n\n  return (\n    <div className={styles.tweets}>\n      {tweets.map((t) => (\n        <Tweet tweet={t} mode={mode(t)} />\n      ))}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { TweetsContext } from \"./TweetsProvider\";\n\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsActive = () => {\n  const { active24 } = useContext(TweetsContext);\n\n  return <TweetList tweets={active24} />;\n}\n","import React, { useContext } from \"react\";\nimport { TweetsContext } from \"./TweetsProvider\";\n\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsMajor = () => {\n  const { major24 } = useContext(TweetsContext);\n\n  return <TweetList tweets={major24} />;\n}\n","import React, { useContext } from \"react\";\nimport { Map } from \"./Map\";\nimport { TweetsProvider, TweetsContext } from \"./TweetsProvider\";\nimport { GroupByArea } from \"./GroupByArea\";\nimport { Header } from \"./Header\";\nimport { Rehoboam } from \"./Rehoboam\";\nimport { LegendSection } from \"./Legend\";\nimport { Histogram } from \"./Histogram\";\nimport { Section } from \"./Section\";\nimport { Paragraph } from \"./Paragraph\";\nimport { History } from \"./History\";\nimport { TweetsActive } from \"./TweetsActive\";\nimport { TweetsMajor } from \"./TweetsMajor\";\nimport { SvgDot } from \"./SvgDot\";\nimport * as d3 from \"d3\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\n\nconst formatter = d3.timeFormat(\"%-I%p\");\n\nexport const DispatchAll = () => {\n  // const { status } = useContext(TweetsContext);\n  // const time = formatter(status.lastUpdated);\n\n  const intro = (\n    <p>\n      A near-real-time visualization of Seattle Fire Department 911 dispatches.\n      All timestamps are in local time (Pacific timezone).\n      {/*Data is current as of\n      <strong>TODO</strong> in Seattle.*/} Active\n      incidents are marked\n      <SvgDot active={true} />. Incidents with 5 or more units dispatched are\n      marked <SvgDot sev1={true} />, with 10 or more <SvgDot sev2={true} />.\n    </p>\n  );\n\n  const pastWeek = `Cumulative number of dispatches for Seattle today, compared to the past 7 days`;\n\n  const map = \"\";\n\n  const major = (\n    <p>\n      Incidents in the past 24 hours with <strong>ten or more</strong> units\n      deployed\n    </p>\n  );\n\n  const areas =\n    \"Select an area of the city to see all of today's incidents there. (TODO - update this text.)\";\n\n  const history =\n    \"This views shows total dispatches for all of Seattle per day this year compared to last year, with a few callouts for context.\";\n\n  const sources = (\n    <p>\n      The primary data source is{\" \"}\n      <a href=\"http://www2.seattle.gov/fire/realTime911/\">\n        Real-Time 911 Dispatch\n      </a>\n      . GPS locations for each incident are retrieved from{\" \"}\n      <a href=\"https://dev.socrata.com/foundry/data.seattle.gov/kzjm-xkqj\">\n        this Socrata dataset\n      </a>\n      . Seattle neighborhood GeoJSON data is from the{\" \"}\n      <a href=\"https://github.com/seattleflu/seattle-geojson/tree/master/seattle_geojsons\">\n        seattleflu/seattle-geojson\n      </a>{\" \"}\n      repository. Map powered by <a href=\"http://leafletjs.com\">Leaflet</a> via{\" \"}\n      <a href=\"https://react-leaflet.js.org\">react-leaflet</a>. Map tiles\n      provided by{\" \"}\n      <a href=\"https://www.jawg.io/docs/apidocs/static-maps/\">Jawg Maps</a>.\n    </p>\n  );\n\n  const notes = (\n    <>\n      <p>\n        The data is up-to-date to within a minute or so. Incidents for which no\n        geolocation data is available are not shown and not counted.\n      </p>\n      <p>\n        Visualization by{\" \"}\n        <a href=\"http://linkedin.com/in/anarseyf/\">Anar Seyf</a>.\n      </p>\n    </>\n  );\n\n  return (\n    <TweetsProvider>\n      <Section styleOption={2}>\n        <Paragraph title=\"Seattle Fire Real-Time Dispatch\" content={intro} />\n        <Rehoboam />\n        <Paragraph title=\"Past Week\" content={pastWeek} />\n        <Header />\n      </Section>\n\n      <Section edgeToEdge={true} styleOption={1}>\n        <Paragraph title=\"Today\" content={map} margin={true} />\n        <ErrorBoundary>\n          <Map />\n        </ErrorBoundary>\n      </Section>\n\n      <Section styleOption={0}>\n        <Paragraph title=\"Active Incidents\" content={\"\"} />\n        <TweetsActive />\n        <Paragraph title=\"Major Incidents (24 Hours)\" content={major} />\n        <TweetsMajor />\n      </Section>\n\n      <Section styleOption={2}>\n        <Paragraph title=\"City Areas\" content={areas} />\n        <GroupByArea />\n      </Section>\n\n      <Section styleOption={1}>\n        <Paragraph title=\"Last Year vs This Year\" content={history} />\n        <History />\n      </Section>\n\n      <Section styleOption={2}>\n        <Paragraph title=\"Data Sources\" content={sources} />\n        <Paragraph title=\"Notes\" content={notes} />\n      </Section>\n    </TweetsProvider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { TweetsContext, currentInterval } from \"./TweetsProvider\";\n\nimport { Tweet, TweetModes } from \"./Tweet\";\nimport { UserContextKeys, UserContext } from \"./UserProvider\";\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsForArea = () => {\n  const { filteredByArea } = useContext(TweetsContext);\n  const { user } = useContext(UserContext);\n  const filter = user[UserContextKeys.TypeFilter];\n\n  if (!filteredByArea.length) {\n    return null;\n  }\n  const all = currentInterval(filteredByArea).values;\n  const filtered = all.filter(\n    ({ derived: { type } }) => !filter || filter === type\n  );\n\n  return <TweetList tweets={filtered} />;\n}\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport { Map } from \"./Map\";\nimport { TweetsProvider } from \"./TweetsProvider\";\nimport { Header } from \"./Header\";\nimport { TweetsForArea } from \"./TweetsForArea\";\nimport { Paragraph } from \"./Paragraph\";\nimport { Section } from \"./Section\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport paragraphStyles from \"./paragraph.module.scss\";\n\nexport const DispatchArea = ({ area }) => {\n  const sources = \"Data sources\";\n\n  return (\n    <TweetsProvider filters={{ area }}>\n      <Section styleOption={2}>\n        <Paragraph\n          title={\n            <Link className={paragraphStyles.link} to=\"/\">\n              « to main page\n            </Link>\n          }\n        />\n      </Section>\n\n      <Section styleOption={1}>\n        <Paragraph title={area} />\n        <Header area={area} />\n        {/* <Histogram /> */}\n      </Section>\n\n      <Section styleOption={2} edgeToEdge={true}>\n        <ErrorBoundary>\n          <Map area={area} />\n        </ErrorBoundary>\n      </Section>\n\n      <Section styleOption={1}>\n        <TweetsForArea />\n      </Section>\n\n      <Section styleOption={2}>\n        <Paragraph text={sources} />\n      </Section>\n    </TweetsProvider>\n  );\n};\n","import React from \"react\";\nimport { Router, Redirect } from \"@reach/router\";\n\nimport { Dispatch } from \"./dispatch/Dispatch\";\nimport { DispatchAll } from \"./dispatch/DispatchAll\";\nimport { DispatchArea } from \"./dispatch/DispatchArea\";\n\nimport styles from \"./app.module.scss\";\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <Router>\n        <Dispatch path=\"/\">\n          <DispatchAll default />\n          <DispatchArea path=\":area\" />\n        </Dispatch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport const register = (config) => {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport const unregister = () => {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./custom.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"legend_container__3I3K6\",\"item\":\"legend_item__jjQT3\",\"selected\":\"legend_selected__12qcY\",\"label\":\"legend_label__1CkRM\",\"header\":\"legend_header__2EhiS\",\"title\":\"legend_title__1JShJ\",\"total\":\"legend_total__1IlJl\",\"body\":\"legend_body__1-6Gv\",\"svg\":\"legend_svg__2LbQ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chart_container__3RTag\",\"header\":\"chart_header__3gCPW\",\"svg\":\"chart_svg__pP08z\",\"total\":\"chart_total__qkQSI\",\"title\":\"chart_title__2BYUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__1TT8J\",\"content\":\"section_content__32e_z\",\"styleDefault\":\"section_styleDefault__1fobi\",\"style1\":\"section_style1__-PHu2\",\"style2\":\"section_style2__3JfYX\",\"styleMap\":\"section_styleMap__2ZHhK\",\"subcontent\":\"section_subcontent__1yzVR\",\"edgeToEdge\":\"section_edgeToEdge__28iHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"rehoboam_container__28M8-\",\"counter\":\"rehoboam_counter__33zQ-\",\"circle\":\"rehoboam_circle__1NUqu\",\"path\":\"rehoboam_path__2oGje\",\"sev2\":\"rehoboam_sev2__20XpY\",\"dots\":\"rehoboam_dots__3KbnO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svg\":\"history_svg__wHz8f\",\"previous\":\"history_previous__1tjyT\",\"current\":\"history_current__2e2uB\",\"years\":\"history_years__2UEbj\",\"left\":\"history_left__YNLcK\",\"right\":\"history_right___nK7k\",\"axis\":\"history_axis__1LX0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"tweet_container__2cPfJ\",\"detailed\":\"tweet_detailed__1zw6b\",\"greyedOut\":\"tweet_greyedOut__187c4\",\"tweet\":\"tweet_tweet__2okc-\",\"type\":\"tweet_type__2VJ4m\",\"details\":\"tweet_details__165yi\",\"units\":\"tweet_units__2ZVmK\",\"location\":\"tweet_location__26Q8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph\":\"paragraph_paragraph__2KRp8\",\"text\":\"paragraph_text__1NbBg\",\"link\":\"paragraph_link__2D61j\",\"margin\":\"paragraph_margin__uTVtm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"spark_container__20mVH\",\"total\":\"spark_total__2Kxtk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topline\":\"topline_topline__3XNKt\",\"number\":\"topline_number__HrVAF\",\"text\":\"topline_text__2_5SM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"tweetdetails_container__1rcoE\",\"explanation\":\"tweetdetails_explanation__3lEx4\",\"latlong\":\"tweetdetails_latlong__29PX1\",\"unit\":\"tweetdetails_unit__33Rog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"axis\":\"svg_axis__bET8j\",\"path\":\"svg_path__EmZTS\",\"highlight\":\"svg_highlight__1dzK0\",\"previous\":\"svg_previous__19uFf\",\"current\":\"svg_current__mnSmX\",\"now\":\"svg_now__2CbCS\",\"pulse\":\"svg_pulse__2GGpF\",\"live\":\"svg_live__2Jj88\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dispatch_container__13oVH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"map_container__1WM_n\",\"pane\":\"map_pane__g9Le7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"area_container__8bOi9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"total_container__Dlmy9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"annotations\":\"annotations_annotations__1BK52\",\"line\":\"annotations_line__I-f5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tweets\":\"tweets_tweets__PhO0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__3mk8F\"};"],"sourceRoot":""}