{"version":3,"sources":["dispatch/Dot.jsx","api.jsx","dispatch/StatusContext.jsx","dispatch/DataProvider.jsx","dispatch/UserProvider.jsx","dispatch/mapOptions.js","dispatch/geojson.js","clientUtils.js","dispatch/Map.jsx","dispatch/ErrorBoundary.jsx","dispatch/AreaShape.jsx","dispatch/SvgDot.jsx","dispatch/Spark.jsx","dispatch/neighborhoods.js","dispatch/GroupByArea.jsx","dispatch/MultiLine.jsx","dispatch/Header.jsx","dispatch/Topline.jsx","dispatch/Rehoboam.jsx","dispatch/Section.jsx","dispatch/Paragraph.jsx","dispatch/Annotations.jsx","dispatch/HistoryEvents.jsx","dispatch/History.jsx","groupingOptions.js","dispatch/TweetDetails.jsx","dispatch/Tweet.jsx","dispatch/TweetList.jsx","dispatch/TweetsActive.jsx","dispatch/TweetsMajor.jsx","dispatch/Sources.jsx","dispatch/Freshness.jsx","dispatch/Legend.jsx","dispatch/DispatchAll.jsx","dispatch/TweetsForArea.jsx","dispatch/AreaPageHeader.jsx","dispatch/DispatchArea.jsx","App.jsx","serviceWorker.js","index.tsx","dispatch/rehoboam.module.scss","dispatch/section.module.scss","dispatch/tweet.module.scss","dispatch/history.module.scss","dispatch/tweetdetails.module.scss","dispatch/paragraph.module.scss","dispatch/chart.module.scss","dispatch/topline.module.scss","dispatch/map.module.scss","dispatch/areashape.module.scss","dispatch/spark.module.scss","dispatch/annotations.module.scss","dispatch/svg.module.scss","dispatch/tweets.module.scss","dispatch/freshness.module.scss","dispatch/legend.module.scss","app.module.scss","dispatch/group.module.scss"],"names":["Appearance","Dot","coordinates","severity","active","appearance","color","opacity","baseRadius","Circle","center","radius","fill","fillOpacity","stroke","weight","console","warn","getStatus","a","getByAPI","getAnnotations","getHistory","getTweetsForArea","area","queryParams","activeOrMajor","minimize","getTweetsForAreaMin","hiRes","getTweetsForAreaMinWeek","compare","getTweetsByArea","getTweetsByType","getTweetsMajor","getTweetsActive24","queryString","query","list","Object","keys","map","key","encodeURIComponent","join","api","allQueryParams","fetch","headers","Accept","response","json","deepEqual","require","StatusContext","createContext","StatusProvider","children","value","useState","status","setStatus","previousStatus","setPreviousStatus","useEffect","log","delay","checkForUpdates","newStatus","env","document","title","intervalId","setInterval","clearInterval","useStatus","Provider","DataContext","currentInterval","dataset","intervals","previousInterval","DataProvider","filters","initialValue","filteredByArea","filteredByAreaMin","filteredByAreaMinWeek","activeOrMajorForArea","activeOrMajorByArea","byTypeForArea","groupedByArea","history","active24","major24","annotations","setValue","useContext","mostRecentId","undefined","setFilteredByArea","setFilteredByAreaMin","setFilteredByAreaMinWeek","setActiveOrMajorForArea","setActiveOrMajorByArea","setByTypeForArea","setGroupedByArea","setHistory","setActive24","setMajor24","setAnnotations","shouldFetch","setShouldFetch","values","length","useTweets","UserContext","UserContextKeys","useUser","user","setUser","setSelection","UserProvider","MapOptions","ProxyLight","url","r","attribution","ProxyDark","CartoDB_DarkMatter","ext","subdomains","CartoDB_DarkMatterNoLabels","CartoDB_Positron","CartoDB_PositronNoLabels","Jawg_Dark","token","Jawg_Light","Mapbox","Stadia_Alidade","Stamen_Toner","Default","NoLabels","byArea","features","prop","forEach","feature","properties","push","nhoodFeaturesByArea","zipCodes","nhoods","featuresForArea","nhood","areas","geojson","areaProp","cityGeojson","city","defaultCentroid","mapBounds","lat","long","centroid","coords","geometry","flat","latExtent","d3","longExtent","intervalExtent","start","end","expandMinutes","expand","extent","offset","queryText","isPhone","window","matchMedia","matches","timeFormatter","timestamp","format","timezone","timeFormatterUserTimezone","date","guess","timeFormatterHourAM","timeFormatterMonth","every6Hours","h","months","Array","_","i","isActive","derived","isAtLeastSev1","isAtLeastSev2","Map","tileOptions","geojsonStyleActive","fillColor","strokeOpacity","typeFilter","selectedTweet","rendered","filter","zoom","defaultZoom","isSelectedDot","id_str","data","flatMap","type","selectedIndex","findIndex","slice","appearanceFn","d","className","classnames","styles","container","phone","minZoom","maxZoom","maxBounds","maxBoundsViscosity","zoomControl","TileLayer","GeoJSON","style","CRA_NAM","ErrorBoundary","props","state","hasError","error","errorInfo","this","React","Component","geojsonStyle","AreaShape","attributionControl","dragging","keyboard","SvgDot","sev1","sev2","svgStyles","live","width","height","cx","size","cy","Spark","showTotal","useCumulative","showPrevious","svgData","setSvgData","nowDot","setNowDot","svgWidth","svgHeight","margin","top","right","bottom","left","accessor","cumulative","xExtent","yExtent","bins","xScale","domain","range","yScale","line","curve","tension","x","x0","y","newSvgData","path","reverse","lastBin","total","lastIndex","sparkStyles","transform","current","now","useNeighborhoods","setMap","newMap","sort","GroupByArea","totalsMap","setTotalsMap","setData","neighborhoodsMap","sortedData","areaA","intervalsA","areaB","intervalsB","activeA","sev1A","sev2A","activeB","sev1B","sev2B","totalA","totalB","itemContainer","to","vpadding","fullWidth","item","major","text","v","spark","MultiLine","showHeader","xAxisRef","useRef","yAxisRef","xAxis","scale","tickValues","tickFormat","tickSize","call","yAxis","ticks","chartStyles","header","chart","axis","ref","Header","Topline","totalContent","totalElement","topline","Date","Rehoboam","svgPath","setSvgPath","circles","setCircles","setTotal","axisRef","mainRadius","binsHiRes","maxLength","radialData","fraction","Math","PI","toRadial","radialGen","angleScale","axisRadialInner","activeOrMajorValues","newCircles","theta","sin","cos","counter","svg","maincircle","events","eventcircle","Section","styleOption","edgeToEdge","style1","style2","styleMap","styleDefault","section","content","subcontent","Paragraph","h1","paragraph","textureCurrent","textures","lines","lighter","orientation","texturePrevious","Annotations","currentStart","rectWidth","scales","clipPaths","calloutsRef","regionsRef","regions","setRegions","calloutFn","label","isEnd","sideX","sideY","callout","note","subject","nx","ny","dx","dy","calloutsSvgData","Boolean","d3annotation","d3annotationCalloutCircle","newRegions","isCurrent","texture","id","previous","annotation","clipPath","HistoryEvents","dayHeight","intervalCurrent","intervalPrevious","binsCurrent","binsLowRes","binsPrevious","mapper","count","stack","index","sev2Current","sev2Previous","toCirclesGen","side","toCirclesCurrent","toCirclesPrevious","circlesCurrent","circlesPrevious","closedPath","first","extraBottom","extraTop","History","setScales","setCurrentStart","paths","setPaths","setClipPaths","yearWidth","maxBarWidth","annotationRectWidth","svgRef","getCurrentInterval","getPreviousInterval","timeExtent","getIntervalExtent","b","m","clone","add","toDate","everyMonth","lineCurrent","linePrevious","pathCurrent","pathPrevious","clipLineCurrent","clipLinePrevious","pixelOffset","invert","clipPathCurrent","clipPathPrevious","historyStyles","years","AreaAccessors","ZipCode","zip","Area","neighborhoodGroup","AreaSecondary","neighborhood","TweetDetails","tweet","address","units","unitsList","split","unitsStr","n","Number","parseFloat","toFixed","secondary","unit","link","href","TweetModes","Tweet","mode","isGreyedOut","isDetailed","time","detailed","greyedOut","onClick","newSelectedTweet","details","location","description","TweetList","tweets","selected","t","TweetsActive","TweetsMajor","Sources","sources","Freshness","lastUpdated","seattle","seattleTZ","userTZ","same","displayUser","displaySeattle","Legend","legend","DispatchAll","intro","notes","TweetsForArea","filtered","AreaPageHeader","subareas","subarea","DispatchArea","paragraphStyles","App","app","default","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.ddd00a14.chunk.js","sourcesContent":["import React from \"react\";\nimport { Circle } from \"react-leaflet\";\n\nexport const Appearance = {\n  Normal: 0,\n  Dimmed: -1,\n  Highlighted: 1,\n};\n\nexport const Dot = ({ coordinates, severity = 0, active = false, appearance = Appearance.Normal }) => {\n  const color = active ? \"red\" : \"white\";\n\n  // TODO - set opacity in CSS\n  let opacity = 0.4;\n  if (severity >= 1) {\n    opacity = 0.7;\n  }\n  if (active) {\n    opacity = 0.9;\n  }\n  if (appearance === Appearance.Dimmed) {\n    opacity = 0.35;\n  }\n  if (appearance === Appearance.Highlighted) {\n    opacity = 0.9;\n  }\n  const baseRadius = active ? 250 : 150;\n\n  if (!coordinates[0]) {\n    console.warn(`Dot: coordinates = ${coordinates}`);\n    return null;\n  }\n\n  return (\n    <>\n      <Circle\n        center={coordinates}\n        radius={baseRadius}\n        color={color}\n        fill={true}\n        fillOpacity={opacity}\n        stroke={false}\n      ></Circle>\n      {severity >= 1 && (\n        <Circle\n          center={coordinates}\n          radius={baseRadius + 150}\n          weight={2}\n          color={color}\n          opacity={opacity}\n          fill={false}\n        ></Circle>\n      )}\n      {severity >= 2 && (\n        <Circle\n          center={coordinates}\n          radius={baseRadius + 300}\n          weight={2}\n          color={color}\n          opacity={opacity}\n          fill={false}\n        ></Circle>\n      )}\n    </>\n  );\n};\n","export async function getEnv() {\n  return getByAPI(\"env\");\n}\n\nexport async function getStatus() {\n  return getByAPI(`dispatch/status`);\n}\n\nexport async function getAnnotations() {\n  return getByAPI(`dispatch/history/annotations`);\n}\n\nexport async function getHistory() {\n  return getByAPI(`dispatch/history`);\n}\n\nexport async function getTweetsForArea(\n  area,\n  queryParams = { activeOrMajor: false, minimize: false }\n) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsForAreaMin(\n  area,\n  queryParams = { activeOrMajor: false, minimize: true, hiRes: true }\n) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsForAreaMinWeek(\n  area,\n  queryParams = { activeOrMajor: false, minimize: true, compare: 6 }\n) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsByArea(queryParams = { activeOrMajor: false }) {\n  return getByAPI(`dispatch/tweets/byArea`, queryParams);\n}\n\nexport async function getTweetsByType(area = \"seattle\") {\n  return getByAPI(`dispatch/tweets/byType/${area}`, { minimize: false });\n}\n\nexport async function getTweetsMajor() {\n  return getByAPI(\"dispatch/tweets/major\", { minimize: false });\n}\n\nexport async function getTweetsActive24() {\n  return getByAPI(\"dispatch/tweets/active24\", { minimize: false });\n}\n\nexport async function getTweetsStatic() {\n  return getByAPI(\"dispatch/static\");\n}\n\nexport async function getTweetsSeattleGov() {\n  return getByAPI(\"dispatch/seattle-gov\");\n}\n\nconst queryString = (query = {}) => {\n  const list = Object.keys(query).map(\n    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(query[key])}`\n  );\n  return list.join(\"&\");\n};\n\nasync function getByAPI(api = \"\", queryParams = {}) {\n  const allQueryParams = {\n    minimize: true,\n    ...queryParams,\n  };\n  const query = queryString(allQueryParams);\n  const response = await fetch(`/api/${api}?${query}`, {\n    // TODO - use axios?\n    headers: { Accept: \"application-json\" },\n  });\n\n  return response.json();\n}\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { getStatus } from \"../api\";\nconst deepEqual = require(\"fast-deep-equal/es6/react\");\n\nexport const StatusContext = createContext();\n\nconst useStatus = () => {\n  const [status, setStatus] = useState({});\n  const [previousStatus, setPreviousStatus] = useState({});\n\n  useEffect(() => {\n    const delay = 60 * 1000;\n\n    console.log(\n      `🟥 useStatus/starting checker @ every ${delay / 1000} seconds`\n    );\n    const checkForUpdates = async () => {\n      const newStatus = await getStatus();\n      // console.log(\n      //   `useStatus(${intervalId})/current status (next check in ${\n      //     delay / 1000\n      //   } sec)`,\n      //   newStatus\n      // );\n\n      if (!deepEqual(status, newStatus)) {\n        console.log(\"useStatus/setting new status:\", newStatus);\n        setPreviousStatus(status);\n        setStatus(newStatus);\n      }\n\n      if (status.env === \"development\") {\n        document.title = \"KSEA.live (dev)\";\n      }\n    };\n\n    checkForUpdates();\n    const intervalId = setInterval(checkForUpdates, delay);\n    return () => clearInterval(intervalId);\n  }, [status]);\n\n  return { status, previousStatus };\n};\n\nexport const StatusProvider = ({ children }) => {\n  const value = useStatus();\n  return (\n    <StatusContext.Provider value={value}>{children}</StatusContext.Provider>\n  );\n};\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\nimport {\n  getTweetsForArea,\n  getTweetsByArea,\n  getTweetsByType,\n  getHistory,\n  getAnnotations,\n  getTweetsActive24,\n  getTweetsMajor,\n  getTweetsForAreaMin,\n  getTweetsForAreaMinWeek,\n} from \"../api\";\n\nimport { StatusContext } from \"./StatusContext\";\nconst deepEqual = require(\"fast-deep-equal/es6/react\");\n\nexport const DataContext = createContext();\n\nexport const currentInterval = (dataset) => dataset[0].intervals[0];\nexport const previousInterval = (dataset) => dataset[0].intervals[1];\n\nconst useTweets = (filters = {}) => {\n  const initialValue = {\n    filteredByArea: [],\n    filteredByAreaMin: [],\n    filteredByAreaMinWeek: [],\n    activeOrMajorForArea: [],\n    activeOrMajorByArea: [],\n    byTypeForArea: [],\n    groupedByArea: [],\n    history: [],\n    active24: [],\n    major24: [],\n    annotations: [],\n    status: {},\n  };\n  const [value, setValue] = useState(initialValue);\n  const { status, previousStatus } = useContext(StatusContext);\n  const mostRecentId = previousStatus.mostRecentId\n    ? status.mostRecentId\n    : undefined;\n\n  if (mostRecentId) {\n    console.log(`useTweets/mostRecentId: ${mostRecentId}`);\n  }\n\n  const [filteredByArea, setFilteredByArea] = useState([]);\n  const [filteredByAreaMin, setFilteredByAreaMin] = useState([]);\n  const [filteredByAreaMinWeek, setFilteredByAreaMinWeek] = useState([]);\n  const [activeOrMajorForArea, setActiveOrMajorForArea] = useState([]);\n  const [activeOrMajorByArea, setActiveOrMajorByArea] = useState([]);\n  const [byTypeForArea, setByTypeForArea] = useState([]);\n  const [groupedByArea, setGroupedByArea] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [active24, setActive24] = useState([]);\n  const [major24, setMajor24] = useState([]);\n  const [annotations, setAnnotations] = useState([]);\n\n  const [shouldFetch, setShouldFetch] = useState(true);\n\n  useEffect(() => {\n    if (!deepEqual(status, previousStatus)) {\n      setShouldFetch(true);\n    }\n  }, [status, previousStatus]);\n\n  useEffect(() => {\n    if (!shouldFetch) {\n      console.log(\"PROVIDER/not fetching\");\n      return;\n    }\n    console.log(\"🟢 PROVIDER/fetching all data\");\n    setShouldFetch(false);\n\n    const area = filters.area || \"seattle\";\n\n    console.log(\"PROVIDER/filters.area=\", area);\n    if (area === \"seattle\") {\n      (async () => {\n        setFilteredByAreaMin(await getTweetsForAreaMin(area));\n        setFilteredByAreaMinWeek(await getTweetsForAreaMinWeek(area));\n      })();\n    } else {\n      (async () => {\n        setFilteredByArea(await getTweetsForArea(area));\n      })();\n    }\n\n    (async () => {\n      setActiveOrMajorForArea(\n        await getTweetsForArea(area, { activeOrMajor: true, minimize: false })\n      );\n    })();\n\n    (async () => {\n      const response = await getTweetsActive24();\n      setActive24(response[0].intervals[0].values);\n    })();\n\n    (async () => {\n      const response = await getTweetsMajor();\n      setMajor24(response[0].intervals[0].values);\n    })();\n\n    (async () => {\n      setByTypeForArea(await getTweetsByType(area));\n    })();\n\n    (async () => {\n      setGroupedByArea(await getTweetsByArea());\n    })();\n\n    (async () => {\n      setActiveOrMajorByArea(\n        await getTweetsByArea({ activeOrMajor: true, minimize: false })\n      );\n    })();\n\n    (async () => {\n      setAnnotations(await getAnnotations());\n    })();\n\n    if (!history.length) {\n      (async () => {\n        setHistory(await getHistory(area));\n      })();\n    }\n  }, [filters.area, history.length, mostRecentId, shouldFetch]);\n\n  useEffect(() => {\n    setValue({\n      filteredByArea,\n      filteredByAreaMin,\n      filteredByAreaMinWeek,\n      byTypeForArea,\n      groupedByArea,\n      history,\n      annotations,\n      active24,\n      major24,\n      activeOrMajorForArea,\n      activeOrMajorByArea,\n      status,\n    });\n  }, [\n    active24,\n    activeOrMajorByArea,\n    activeOrMajorForArea,\n    annotations,\n    byTypeForArea,\n    filteredByArea,\n    filteredByAreaMin,\n    filteredByAreaMinWeek,\n    groupedByArea,\n    history,\n    major24,\n    status,\n  ]);\n\n  return value;\n};\n\nexport const DataProvider = ({ filters, children }) => {\n  const value = useTweets(filters);\n  return <DataContext.Provider value={value}>{children}</DataContext.Provider>;\n};\n","import React, { useState, createContext, useEffect } from \"react\";\n\nexport const UserContext = createContext();\n\nexport const UserContextKeys = {\n  SelectedTweet: \"SelectedTweet\",\n  TypeFilter: \"TypeFilter\",\n};\n\nconst useUser = () => {\n  const [user, setUser] = useState({});\n\n  const setSelection = (key, value) => {\n    console.log(`USER: ${key} -->`, value);\n    setUser({ ...user, [key]: value });\n  };\n\n  useEffect(()=>{console.log('USER/useEffect')},[]);\n\n  return { user, setSelection };\n};\n\nexport const UserProvider = ({ children }) => {\n  return (\n    <UserContext.Provider value={useUser()}>{children}</UserContext.Provider>\n  );\n};\n","export const MapOptions = {\n  ProxyLight: {\n    url: \"/api/dispatch/maps/{s}/{x}/{y}/{z}/{r}/light\",\n    r: \"@2x\",\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n  },\n  ProxyDark: {\n    url: \"/api/dispatch/maps/{s}/{x}/{y}/{z}/{r}/dark\",\n    r: \"@2x\",\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n  },\n  CartoDB_DarkMatter: {\n    url: \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n  },\n  CartoDB_DarkMatterNoLabels: {\n    url: \"https://{s}.basemaps.cartocdn.com/dark_nolabels/{z}/{x}/{y}{r}.png\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n  },\n  CartoDB_Positron: {\n    subdomains: \"abcd\",\n    url: \"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\",\n    ext: \"png\",\n    r: \"@2x\",\n\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n  },\n  CartoDB_PositronNoLabels: {\n    subdomains: \"abcd\",\n    url: \"https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png\",\n    ext: \"png\",\n    r: \"@2x\",\n\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n  },\n  Jawg_Dark: {\n    url:\n      \"https://{s}.tile.jawg.io/jawg-dark/{z}/{x}/{y}{r}.{ext}?access-token={token}\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    token: \"nMsnktvLJ03hHw3Bk4ehaEaNPGKjBE2pLhYTEcMdFEu65cNh4nMfXhGCdEwmhD7H\", // https://www.jawg.io/lab/access-tokens\n  },\n  Jawg_Light: {\n    url:\n      \"https://{s}.tile.jawg.io/jawg-light/{z}/{x}/{y}{r}.{ext}?access-token={token}\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    token: \"nMsnktvLJ03hHw3Bk4ehaEaNPGKjBE2pLhYTEcMdFEu65cNh4nMfXhGCdEwmhD7H\", // https://www.jawg.io/lab/access-tokens\n  },\n  Mapbox: {\n    // accessToken: \"pk.eyJ1IjoiYW5hcnNleWYiLCJhIjoiY2thZXlra3llMGF4MDJ4cXYzY2ZkamVkdyJ9.K8CENC0jz2D0O6ziL_jnNg\"\n  },\n  Stadia_Alidade: {\n    url:\n      \"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.{ext}\",\n    ext: \"png\",\n    r: \"@2x\",\n    attribution:\n      '&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n  },\n  Stamen_Toner: {\n    url: \"https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}{r}.{ext}\",\n    ext: \"png\",\n    r: \"@2x\",\n    subdomains: \"abcd\",\n    attribution:\n      'Tiles by <a href=\"http://stamen.com\">Stamen</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OSM</a>',\n  },\n};\n\n// MapOptions.Default = MapOptions.Jawg_Dark;\n// MapOptions.NoLabels = MapOptions.Jawg_Dark;\nMapOptions.Default = MapOptions.ProxyDark;\nMapOptions.NoLabels = MapOptions.Default;\n","import * as d3 from \"d3\";\nimport zipCodes from \"./zip-codes.json\";\n// import nhoods from \"./nhoods.json\";\nimport nhoods from \"./2016_seattle_cra.json\";\nimport city from \"./2016_seattle_city.json\";\n\nconst nhoodProp = \"NEIGHBO\"; // TODO - import from server/groupby.js\nconst zipcodeProp = \"GEOID10\";\n\nconst byArea = (features, prop) => {\n  const map = {};\n  features.forEach((feature) => {\n    const key = feature.properties[prop];\n    const list = map[key] || [];\n    list.push(feature);\n    map[key] = list;\n  });\n  return map;\n};\n\nconst zipcodeFeaturesByArea = byArea(zipCodes.features, zipcodeProp);\nconst nhoodFeaturesByArea = byArea(nhoods.features, nhoodProp);\n\nconst featuresForZip = (zip) => zipcodeFeaturesByArea[zip];\nconst featuresForNhood = (nhood) => nhoodFeaturesByArea[nhood];\n\nexport const featuresForArea = featuresForNhood;\n\nexport const areas = {\n  geojson: nhoods,\n  areaProp: nhoodProp,\n};\n\nexport const cityGeojson = city;\n\nconst lat = 47.61485, long = -122.32838;\nconst defaultCentroid = [lat, long]; // approx. centroid of cityGeojson\n\nexport const mapBounds = [\n  [lat + 0.2, long - 0.3],\n  [lat - 0.2, long + 0.3],\n];\n\nexport const centroid = (features) => {\n  if (!features.length) {\n    return defaultCentroid;\n  }\n  \n  let coords = features\n    .map(({ geometry: { coordinates } }) => coordinates)\n    .flat(2);\n  const latExtent = d3.extent(coords, ([_, lat]) => lat);\n  const longExtent = d3.extent(coords, ([long, _]) => long);\n  return [d3.mean(latExtent), d3.mean(longExtent)];\n};\n","import * as d3 from \"d3\";\nimport { tz as timezone } from \"moment-timezone\";\nimport moment from \"moment\";\n\nexport const intervalExtent = ({ start, end }, expandMinutes = 0) =>\n  expand([start, end], expandMinutes);\n\n// move to server/histogram.js\nexport const expand = (extent, expandMinutes = 0) => [\n  d3.timeMinute.offset(extent[0], -expandMinutes),\n  d3.timeMinute.offset(extent[1], expandMinutes),\n];\n\n// TODO - coordinate with section.module.scss, or find a way to use vars\n\nconst maxWidthPhone = 500;\nconst queryText = `only screen and (max-device-width: ${maxWidthPhone}px)`;\n\nexport const isPhone = () =>\n  window ? !!window.matchMedia(queryText).matches : true;\n\n// see also fileUtils.js on server\nconst SeattleTimezone = \"America/Vancouver\";\nexport const timeFormatter = (timestamp, format = \"h:mm A\") =>\n  timezone(timestamp, SeattleTimezone).format(format);\n\nexport const timeFormatterUserTimezone = (date, format = \"h:mm A\") =>\n  timezone(date, timezone.guess()).format(format);\n\nexport const timeFormatterHourAM = (timestamp) =>\n  timeFormatter(timestamp, \"h A\");\n\nexport const timeFormatterMonth = (timestamp) =>\n  timeFormatter(+timestamp, \"MMM\");\n\nexport const timeFormatterMonthDay = (timestamp) =>\n  timeFormatter(+timestamp, \"MMM D\");\n\nconst HOUR = 3600 * 1000;\nexport const every6Hours = (start) =>\n  [0, 6, 12, 18, 24].map((h) => start + h * HOUR); // Or use moment.add()\nconst months = [...new Array(12)].map((_, i) => i);\nexport const everyMonth = (start) => {\n  const m = timezone(start, SeattleTimezone);\n  return months.map((v) => m.clone().add(v, \"months\").toDate());\n};\n\nexport const isActive = ({ derived: { active } }) => active;\nexport const isAtLeastSev1 = ({ derived: { severity } }) => severity >= 1;\nexport const isAtLeastSev2 = ({ derived: { severity } }) => severity >= 2;\nexport const isExactlySev1 = ({ derived: { severity } }) => severity === 1;\nexport const isExactlySev2 = ({ derived: { severity } }) => severity === 2;\n","import React, { useContext } from \"react\";\nimport { Map as LeafletMap, TileLayer, GeoJSON } from \"react-leaflet\";\nimport { Dot, Appearance } from \"./Dot\";\nimport { DataContext } from \"./DataProvider\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\nimport { MapOptions } from \"./mapOptions\";\nimport { centroid, areas, cityGeojson, mapBounds } from \"./geojson\";\nimport classnames from \"classnames\";\nimport \"./leaflet.scss\";\nimport styles from \"./map.module.scss\";\nimport { isPhone } from \"../clientUtils\";\n\nconst minZoom = 10,\n  maxZoom = 13,\n  defaultZoom = 11;\n\nconst activeColor = \"dodgerblue\";\n\nexport const Map = ({ area, tileOptions = MapOptions.Default }) => {\n  // TODO - no need for types, so don't use byTypeForArea\n  const { user } = useContext(UserContext);\n  const { byTypeForArea } = useContext(DataContext);\n  if (!byTypeForArea.length) {\n    return null;\n  }\n\n  const geojsonStyleBounds = {\n    color: \"#1e90ff66\", // dodgerblue with alpha\n    fillOpacity: 0,\n    strokeOpacity: 0.5,\n    weight: 4,\n  };\n  const geojsonStyleActive = {\n    color: activeColor,\n    fillColor: activeColor,\n    fillOpacity: 0.1,\n    strokeOpacity: 0.5,\n    weight: 2,\n  };\n\n  const { geojson, areaProp } = areas;\n\n  const typeFilter = user[UserContextKeys.TypeFilter];\n  const selectedTweet = user[UserContextKeys.SelectedTweet];\n\n  const renderFilter = ({ properties }) =>\n    area && properties[areaProp] === area;\n\n  const { features } = geojson;\n  const rendered = features.filter(renderFilter);\n\n  let zoom = defaultZoom;\n  if (area) {\n    zoom = defaultZoom + 1;\n  }\n  if (selectedTweet && selectedTweet.derived.lat) {\n    zoom = maxZoom;\n  }\n\n  const center = selectedTweet && selectedTweet.derived.lat\n    ? [selectedTweet.derived.lat, selectedTweet.derived.long]\n    : area\n    ? centroid(rendered)\n    : centroid(cityGeojson.features);\n\n  const mapper = ({ intervals }) =>\n    intervals[0].values.map(\n      ({ id_str, derived: { lat, long, type, color, active, severity } }) => ({\n        id_str,\n        lat,\n        long,\n        type,\n        color, // TODO - do not use\n        active,\n        severity,\n      })\n    );\n\n  const isSelectedDot = ({ id_str }) => selectedTweet.id_str === id_str;\n\n  const importantOnTop =\n    (a,\n    b) => {\n      // TODO\n      return 0;\n    };\n\n  let data = byTypeForArea\n    .flatMap(mapper)\n    .filter(({ type }) => !typeFilter || typeFilter === type);\n  // .sort(importantOnTop);\n\n  if (selectedTweet) {\n    // Render selected dot last, so it appears on top\n    const selectedIndex = data.findIndex(isSelectedDot);\n\n    data =\n      selectedIndex === -1\n        ? []\n        : [\n            ...data.slice(0, selectedIndex),\n            ...data.slice(selectedIndex + 1),\n            data[selectedIndex],\n          ];\n  }\n\n  const appearanceFn = (d) => {\n    return selectedTweet\n      ? isSelectedDot(d)\n        ? Appearance.Highlighted\n        : Appearance.Dimmed\n      : Appearance.Normal;\n  };\n\n  console.log(\n    `MAP/render area=${area}, zoom=${zoom}, selected:${\n      (selectedTweet || {}).id_str\n    }, features:${rendered.length}/${features.length}, dots:${\n      data.length\n    }, geo:${rendered.length}, center:${center}`\n  );\n  const city = cityGeojson.features[0];\n\n  return (\n    <LeafletMap\n      className={classnames(styles.container, {\n        [styles.area]: area,\n        [styles.phone]: isPhone(),\n      })}\n      center={center}\n      zoom={zoom}\n      minZoom={minZoom}\n      maxZoom={maxZoom}\n      maxBounds={mapBounds}\n      maxBoundsViscosity={0.6}\n      zoomControl={false}\n    >\n      <TileLayer {...tileOptions} />\n      {!area && <GeoJSON data={city} style={geojsonStyleBounds} />}\n      {rendered.map((feature) => (\n        <GeoJSON\n          key={feature.properties.CRA_NAM}\n          data={feature}\n          style={geojsonStyleActive}\n        />\n      ))}\n      {data.map((d) => (\n        <Dot // TODO - group under a single container?\n          key={d.id_str}\n          coordinates={[d.lat, d.long]}\n          severity={d.severity}\n          appearance={appearanceFn(d)}\n          active={d.active}\n          // color={d.color}\n        ></Dot>\n      ))}\n    </LeafletMap>\n  );\n};\n","import React from \"react\";\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"ErrorBoundary\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n","import React from \"react\";\nimport { Map as LeafletMap, TileLayer, GeoJSON } from \"react-leaflet\";\nimport { featuresForArea, centroid } from \"./geojson\";\nimport { MapOptions } from \"./mapOptions\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { isPhone } from \"../clientUtils\";\nimport classnames from \"classnames\";\nimport styles from \"./areashape.module.scss\";\n\nconst geojsonStyle = {\n  color: \"dodgerblue\",\n  fillColor: \"dodgerblue\",\n  fillOpacity: 0.15,\n  weight: 1,\n};\n\nexport const AreaShape = ({ area }) => {\n  const features = featuresForArea(area);\n  if (!features || !features.length) {\n    console.warn(\"AreaShape/no features for area\", area);\n    return null;\n  }\n\n  const center = centroid(features);\n  const zoom = 10;\n  const tileOptions = MapOptions.NoLabels;\n\n  return (\n    <ErrorBoundary>\n      <LeafletMap\n        className={classnames(styles.container, { [styles.phone]: isPhone() })}\n        center={center}\n        zoom={zoom}\n        minZoom={zoom}\n        maxZoom={zoom}\n        zoomControl={false}\n        attributionControl={false}\n        dragging={false}\n        keyboard={false}\n      >\n        <TileLayer {...tileOptions} />\n        <GeoJSON data={features} style={geojsonStyle} />\n      </LeafletMap>\n    </ErrorBoundary>\n  );\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport svgStyles from \"./svg.module.scss\";\n\nexport const SvgDot = ({ radius = 0, active = false, sev1 = false, sev2 = false }) => {\n  const color = active ? \"red\" : \"white\";\n  const size = 18,\n    sev1Radius = 5,\n    sev2Radius = 8;\n  const baseRadius = radius || (active ? 5 : 3);\n\n  return (\n    <svg\n      className={classnames({ [svgStyles.live]: active })}\n      width={size}\n      height={size}\n    >\n      <circle cx={size / 2} cy={size / 2} r={baseRadius} fill={color} />\n      {(sev1 || sev2) && (\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={sev1Radius}\n          fill=\"none\"\n          stroke={color}\n        />\n      )}\n      {sev2 && (\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={sev2Radius}\n          fill=\"none\"\n          stroke={color}\n        />\n      )}\n    </svg>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport * as d3 from \"d3\";\nimport sparkStyles from \"./spark.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\nimport { intervalExtent, isPhone } from \"../clientUtils\";\n\nexport const Spark = ({\n  intervals = [],\n  title,\n  showTotal,\n  useCumulative,\n  showPrevious,\n}) => {\n  const [svgData, setSvgData] = useState([]);\n  const [nowDot, setNowDot] = useState(null);\n\n  const radius = 3;\n  const svgWidth = isPhone() ? 90 : 120;\n  const svgHeight = 0.2 * svgWidth,\n    margin = {\n      top: radius + 1,\n      right: radius + 1,\n      bottom: radius + 1,\n      left: radius + 1,\n    },\n    width = svgWidth - margin.left - margin.right,\n    height = svgHeight - margin.bottom - margin.top;\n\n  useEffect(() => {\n    // TODO - no need for useEffect?\n    if (!intervals.length) {\n      return;\n    }\n\n    const data = showPrevious ? intervals : intervals.slice(0, 1);\n\n    const accessor = ({ length, cumulative }) =>\n      useCumulative ? cumulative : length;\n\n    const xExtent = intervalExtent(data[0]);\n\n    const yExtent = [\n      0,\n      d3.max([1.0, ...data.flatMap(({ bins }) => bins).map(accessor)]),\n    ];\n\n    const xScale = d3.scaleTime().domain(xExtent).range([0, width]);\n    const yScale = d3.scaleLinear().domain(yExtent).range([height, 0]);\n\n    const line = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(d.x0))\n      .y((d) => yScale(accessor(d)));\n\n    const paths = data.map((d) => d.bins).map(line);\n\n    let newSvgData = paths.map((path, i) => ({ path, key: i })).reverse(); // render highlight after all others\n\n    setSvgData(newSvgData);\n\n    const bins = data[0].bins;\n    if (bins.length) {\n      const lastBin = bins[bins.length - 1];\n      setNowDot({\n        cx: xScale(lastBin.x0),\n        cy: yScale(accessor(lastBin)),\n        r: radius,\n      });\n    }\n  }, [width, height, intervals, showPrevious, useCumulative]);\n\n  if (!intervals.length) {\n    return null;\n  }\n\n  const total = intervals[0].total;\n  const lastIndex = svgData.length - 1;\n\n  return (\n    <div className={sparkStyles.container}>\n      <svg width={svgWidth} height={svgHeight}>\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <g>\n            {svgData.map(({path,key}, i) => (\n              <path\n              key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: i === lastIndex,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          {nowDot && (\n            <g className={svgStyles.now}>\n              <circle {...nowDot} />\n            </g>\n          )}\n        </g>\n      </svg>\n      {showTotal && <span className={sparkStyles.total}>{total}</span>}\n    </div>\n  );\n};\n","import { useState, useEffect, useContext } from 'react';\nimport { DataContext } from './DataProvider';\nimport { featuresForArea } from \"./geojson\";\n\nexport const useNeighborhoods = () => {\n  const [map, setMap] = useState({});\n\n  const { groupedByArea } = useContext(DataContext);\n\n  useEffect(() => {\n    const newMap = {};\n    groupedByArea\n      .map(({ key }) => key)\n      .forEach((key) => {\n        newMap[key] = featuresForArea(key)\n          .map(({ properties: { CRA_NAM } }) => CRA_NAM)\n          .sort();\n      });\n\n      setMap(newMap);\n  }, [groupedByArea]);\n\n  return map;\n}","import React, { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"@reach/router\";\nimport { DataContext } from \"./DataProvider\";\nimport { AreaShape } from \"./AreaShape\";\n\nimport { isActive, isAtLeastSev2, isAtLeastSev1, isPhone } from \"../clientUtils\";\nimport { SvgDot } from \"./SvgDot\";\nimport { Spark } from \"./Spark\";\nimport classnames from \"classnames\";\nimport styles from \"./group.module.scss\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { useNeighborhoods } from \"./neighborhoods\";\n\nexport const GroupByArea = () => {\n  const { groupedByArea, activeOrMajorByArea } = useContext(DataContext);\n  const [totalsMap, setTotalsMap] = useState({});\n  const [data, setData] = useState([]);\n  const neighborhoodsMap = useNeighborhoods();\n  const phone = isPhone();\n\n  useEffect(() => {\n    if (!activeOrMajorByArea.length) {\n      return;\n    }\n\n    const map = {};\n    activeOrMajorByArea.forEach(({ key: area, intervals }) => {\n      const values = intervals[0].values;\n      if (values.length) {\n        map[area] = {\n          active: values.filter(isActive).length,\n          sev1: values.filter(isAtLeastSev1).length,\n          sev2: values.filter(isAtLeastSev2).length,\n        };\n      }\n    });\n    setTotalsMap(map);\n  }, [activeOrMajorByArea]);\n\n  useEffect(() => {\n    if (!groupedByArea.length || !totalsMap) {\n      return;\n    }\n\n    const sortByImportance = (\n      { key: areaA, intervals: intervalsA },\n      { key: areaB, intervals: intervalsB }\n    ) => {\n      const { active: activeA, sev1: sev1A, sev2: sev2A } = totalsMap[\n        areaA\n      ] || { active: 0, sev1: 0, sev2: 0 };\n      const { active: activeB, sev1: sev1B, sev2: sev2B } = totalsMap[\n        areaB\n      ] || { active: 0, sev1: 0, sev2: 0 };\n      const totalA = intervalsA[0].total;\n      const totalB = intervalsB[0].total;\n\n      return (\n        activeB - activeA || sev2B - sev2A || sev1B - sev1A || totalB - totalA\n      );\n    };\n    const sortedData = groupedByArea.sort(sortByImportance);\n    setData(sortedData);\n\n    console.log(\n      \"GROUP/sorted\",\n      sortedData.map(({ key }) => key)\n    );\n    console.log(\"GROUP/map\", totalsMap);\n  }, [groupedByArea, totalsMap]);\n\n  if (!data.length) {\n    return null;\n  }\n\n  return (\n    <div className={styles.container}>\n      {data.map(({ key: area, intervals }) => (\n        <div key={area} className={styles.itemContainer}>\n          <Link to={`${encodeURIComponent(area)}`}>\n            <div className={styles.vpadding}>\n              <div className={styles.fullWidth}>\n                <div className={styles.item}>&nbsp;</div>\n                <div className={classnames(styles.item, styles.right)}>\n                  {totalsMap[area] && (\n                    <div className={styles.major}>\n                      {totalsMap[area].active > 0 && (\n                        <span className={styles.active}>\n                          <SvgDot active={true} />\n                          <span>{totalsMap[area].active} active </span>\n                        </span>\n                      )}\n                      {totalsMap[area].sev2 > 0 && (\n                        <>\n                          <SvgDot sev2={true} />\n                          <span> {totalsMap[area].sev2} major </span>\n                        </>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className={classnames(styles.item, styles.text, {[styles.phone]:phone})}>\n                <div className={styles.area}>{area}</div>\n                {neighborhoodsMap[area] && (\n                  <div className={classnames(styles.list)}>\n                    {neighborhoodsMap[area].map((v) => (\n                      <div key={v}>• {v}</div>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              <div className={classnames(styles.item, styles.right)}>\n                <AreaShape area={area} />\n                <ErrorBoundary>\n                  <Spark\n                    className={styles.spark}\n                    intervals={intervals}\n                    useCumulative={true}\n                    showTotal={true}\n                  />\n                </ErrorBoundary>\n              </div>\n            </div>\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport * as d3 from \"d3\";\nimport chartStyles from \"./chart.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\nimport { intervalExtent, timeFormatterHourAM, isPhone, every6Hours } from \"../clientUtils\";\n\nexport const MultiLine = ({\n  intervals = [],\n  title,\n  showHeader = false,\n  useCumulative,\n}) => {\n  const [svgData, setSvgData] = useState([]);\n  const [nowDot, setNowDot] = useState(null);\n\n  const svgWidth = isPhone() ? 350 : 500;\n  const svgHeight = 0.3 * svgWidth,\n    margin = { top: 20, right: 20, bottom: 20, left: 20 },\n    width = svgWidth - margin.left - margin.right,\n    height = svgHeight - margin.bottom - margin.top;\n\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n\n  useEffect(() => {\n    // TODO - no need for useEffect?\n    if (!intervals.length) {\n      return;\n    }\n\n    const accessor = ({ length, cumulative }) =>\n      useCumulative ? cumulative : length;\n\n    const currentInterval = intervals[0];\n    const xExtent = intervalExtent(currentInterval);\n    const yExtent = [\n      0,\n      d3.max([1.0, ...intervals.flatMap(({ bins }) => bins).map(accessor)]),\n    ];\n\n    const xScale = d3.scaleTime().domain(xExtent).range([0, width]);\n    const xAxis = d3\n      .axisBottom()\n      .scale(xScale)\n      .tickValues(every6Hours(currentInterval.start))\n      .tickFormat(timeFormatterHourAM)\n      .tickSize(3);\n    d3.select(xAxisRef.current).call(xAxis);\n\n    const yScale = d3.scaleLinear().domain(yExtent).range([height, 0]);\n    const yAxis = d3.axisLeft().scale(yScale).ticks(2);\n    d3.select(yAxisRef.current).call(yAxis);\n\n    const line = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(d.x0))\n      .y((d) => yScale(accessor(d)));\n\n    const paths = intervals.map((d) => d.bins).map(line);\n\n    let newSvgData = paths.map((path, i) => ({ path, key: i })).reverse(); // render highlight after all others\n\n    setSvgData(newSvgData);\n\n    const bins = intervals[0].bins;\n    if (bins.length) {\n      const lastBin = bins[bins.length - 1];\n      setNowDot({\n        cx: xScale(lastBin.x0),\n        cy: yScale(accessor(lastBin)),\n        r: 3,\n      });\n    }\n  }, [height, intervals, useCumulative, width]);\n\n  if (!intervals.length) {\n    return null;\n  }\n\n  const total = intervals[0].total;\n  const lastIndex = svgData.length - 1;\n\n  return (\n    <div className={chartStyles.container}>\n      {showHeader && (\n        <div className={chartStyles.header}>\n          {title && <div className={chartStyles.title}>{title}</div>}\n          {typeof total === \"number\" && (\n            <div className={chartStyles.total}>{total}</div>\n          )}\n        </div>\n      )}\n      <svg className={chartStyles.chart} width={svgWidth} height={svgHeight}>\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <g\n            className={svgStyles.axis}\n            ref={xAxisRef}\n            transform={`translate(0,${height})`}\n          />\n          <g className={svgStyles.axis} ref={yAxisRef} />\n          <g>\n            {svgData.map(({path, key}, i) => (\n              <path\n                key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: i === lastIndex,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          {nowDot && (\n            <g className={svgStyles.now}>\n              <circle {...nowDot} />\n            </g>\n          )}\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\nimport { MultiLine } from \"./MultiLine\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\n\nexport const Header = ({ area }) => {\n  const { filteredByAreaMinWeek } = useContext(DataContext);\n\n  if (!filteredByAreaMinWeek.length) {\n    return null;\n  }\n\n  return (\n    <ErrorBoundary>\n      <MultiLine\n        intervals={filteredByAreaMinWeek[0].intervals}\n        useCumulative={!!area}\n      />\n    </ErrorBoundary>\n  );\n};\n","import React from \"react\";\nimport { timeFormatterMonthDay } from \"../clientUtils\";\nimport styles from \"./topline.module.scss\";\nimport { isPhone } from \"../clientUtils\";\nimport classnames from \"classnames\";\n\nexport const Topline = ({ total, text }) => {\n  const isDefined = typeof total === \"number\";\n  const totalContent = isDefined ? total : \"⋯\";\n  const totalElement = <div className={styles.total}>{totalContent}</div>;\n  const phone = isPhone();\n\n  return (\n    <div className={classnames(styles.topline, {[styles.phone]: phone})}>\n      {text && <div className={styles.text}>{text}</div>}\n      {totalElement}\n      <div className={styles.date}>{timeFormatterMonthDay(new Date())}</div>\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { axisRadialInner } from \"d3-radial-axis\";\nimport { DataContext, currentInterval } from \"./DataProvider\";\nimport { intervalExtent, timeFormatterHourAM, every6Hours, isPhone } from \"../clientUtils\";\nimport { Topline } from \"./Topline\";\nimport classnames from \"classnames\";\nimport styles from \"./rehoboam.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nexport const Rehoboam = ({ area }) => {\n  const { filteredByAreaMin, activeOrMajorForArea } = useContext(DataContext);\n  const [svgPath, setSvgPath] = useState(null);\n  const [circles, setCircles] = useState([]);\n  const [total, setTotal] = useState(undefined);\n  const axisRef = useRef(null);\n\n  const mainRadius = isPhone() ? 100 : 130;\n  const margin = 30,\n    width = 2 * mainRadius,\n    height = 2 * mainRadius,\n    svgWidth = width + 2 * margin,\n    svgHeight = height + 2 * margin;\n\n  const dotRadius = 7;\n\n  useEffect(() => {\n    if (!filteredByAreaMin.length) {\n      return;\n    }\n\n    setTotal(currentInterval(filteredByAreaMin).total); // TODO - use status\n\n    const current = currentInterval(filteredByAreaMin);\n    console.log(\"REHOBOAM/current\", current);\n    const bins = current.binsHiRes;\n    // const bins = current.bins;\n    const extent = intervalExtent(current);\n    const maxDisturbance = 20;\n    const maxLength = d3.max(bins, ({ length }) => length);\n    const [start, end] = extent;\n\n    const toRadial = (timestamp, length) => {\n      const fraction = (timestamp - start) / (end - start);\n      const radians = 2 * Math.PI * fraction;\n      const disturbance = maxLength ? maxDisturbance * (length / maxLength) : 0;\n      return [radians, mainRadius + disturbance];\n    };\n\n    const radialData = bins.map(({ x0, length }) => toRadial(x0, length));\n    const radialGen = d3.lineRadial().curve(d3.curveCardinal.tension(0.4));\n    const path = radialGen(radialData);\n    setSvgPath(path);\n\n    const angleScale = d3\n      .scaleLinear()\n      .domain(extent)\n      .range([0, 2 * Math.PI]);\n    \n    const axis = axisRadialInner(angleScale, mainRadius)\n      .tickFormat(timeFormatterHourAM)\n      .tickSize(0)\n      .tickValues(every6Hours(current.start));\n    d3.select(axisRef.current).call(axis);\n\n    if (activeOrMajorForArea.length) {\n      const toRadialDot = ({ derived: { timestamp } }) => {\n        const fraction = (timestamp - start) / (end - start);\n        const radians = 2 * Math.PI * fraction;\n        return [radians, mainRadius];\n      };\n\n      const activeOrMajorValues = currentInterval(activeOrMajorForArea).values;\n\n      const radialDots = activeOrMajorValues.map(toRadialDot);\n\n      const newCircles = radialDots.map(([theta, r], i) => {\n        const {\n          derived: { severity, active },\n        } = activeOrMajorValues[i];\n        return {\n          key: i,\n          cx: r * Math.sin(theta),\n          cy: r * -Math.cos(theta),\n          r: dotRadius,\n          sev1: severity >= 1,\n          sev2: severity >= 2,\n          active,\n        };\n      });\n\n      setCircles(newCircles);\n    }\n  }, [activeOrMajorForArea, filteredByAreaMin, mainRadius]);\n\n  const text = area || \"Seattle\";\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.counter}>\n        <Topline total={total} text={text} />\n      </div>\n      <svg className={styles.svg} width={svgWidth} height={svgHeight}>\n        <g\n          transform={`translate(${margin + mainRadius},${margin + mainRadius})`}\n        >\n          <g className={svgStyles.axis} ref={axisRef} />\n          <circle className={styles.maincircle} cx={0} cy={0} r={mainRadius} />\n          {svgPath && <path className={classnames(styles.path)} d={svgPath} />}\n          <g className={styles.events}>\n            {circles.map(({ key, cx, cy, r, sev1, sev2, active }) => (\n              <g key={key} className={classnames({ [svgStyles.live]: active })}>\n                <circle\n                  className={classnames(styles.eventcircle)}\n                  cx={cx}\n                  cy={cy}\n                  r={r}\n                />\n                {sev1 && (\n                  <circle className={styles.major} cx={cx} cy={cy} r={r + 2} />\n                )}\n                {sev2 && (\n                  <circle className={styles.major} cx={cx} cy={cy} r={r + 4} />\n                )}\n              </g>\n            ))}\n          </g>\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React from \"react\";\nimport styles from \"./section.module.scss\";\nimport classnames from \"classnames\";\nimport { isPhone } from \"../clientUtils\";\n\nexport const Section = ({ children, styleOption = 0, edgeToEdge = false }) => {\n  const style =\n    styleOption === 1\n      ? styles.style1\n      : styleOption === 2\n      ? styles.style2\n      : styleOption === 3\n      ? styles.styleMap\n      : styles.styleDefault;\n  return (\n    <section className={classnames(styles.section, style)}>\n      <div\n        className={classnames(styles.content, {\n          [styles.phone]: isPhone(),\n        })}\n      >\n        <div\n          className={classnames(styles.subcontent, {\n            [styles.edgeToEdge]: edgeToEdge,\n          })}\n        >\n          {children}\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React from \"react\";\nimport styles from \"./paragraph.module.scss\";\nimport classnames from \"classnames\";\n\nexport const Paragraph = ({ h1, title, content, margin = false }) => {\n  return (\n    <div className={classnames(styles.paragraph, { [styles.margin]: margin })}>\n      {h1 && <h1>{h1}</h1>}\n      {title && <h3>{title}</h3>}\n      {content && <div className={styles.text}>{content}</div>}\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport textures from \"textures\";\nimport {\n  annotation as d3annotation,\n  annotationCalloutCircle as d3annotationCalloutCircle,\n} from \"d3-svg-annotation\";\nimport { DataContext } from \"./DataProvider\";\n\nimport styles from \"./annotations.module.scss\";\n\nconst textureCurrent = textures\n  .lines()\n  .lighter()\n  .size(8)\n  .orientation(\"6/8\")\n  .stroke(\"#51aae8\");\nconst texturePrevious = textures.lines().lighter().size(8).stroke(\"#51aae8\");\n\nexport const Annotations = ({ currentStart, rectWidth, scales, clipPaths }) => {\n  const calloutsRef = useRef(null);\n  const regionsRef = useRef(null);\n  const { annotations } = useContext(DataContext);\n  const [regions, setRegions] = useState([]);\n\n  d3.select(regionsRef.current).call(textureCurrent);\n  d3.select(regionsRef.current).call(texturePrevious);\n\n  useEffect(() => {\n    if (!scales.length) {\n      return;\n    }\n\n    const regionFn = ({ start, end, offset }, i) => {\n      if (!start || !end) {\n        return undefined;\n      }\n      const [xScale, yScale] = scales;\n      const isCurrent = offset === 0;\n      const texture = isCurrent ? textureCurrent : texturePrevious;\n\n      return {\n        key: `${start}-${end}-${i}`,\n        x: xScale(0) - (isCurrent ? 0 : rectWidth),\n        y: yScale(start.timestamp + offset),\n        width: rectWidth,\n        height:\n          yScale(end.timestamp + offset) - yScale(start.timestamp + offset),\n        fill: texture.url(),\n      };\n    };\n\n    const calloutFn = ({\n      item: { title, label, value, timestamp },\n      offset,\n      scales: [xScale, yScale],\n      isEnd = false,\n    }) => {\n      const isPrevious = timestamp < currentStart;\n      const sideX = isPrevious ? -1 : 1;\n\n      const x = value ? xScale(value) : rectWidth;\n      const sideY = isEnd ? 1 : -1;\n      const y = yScale(timestamp + offset);\n      const callout = {\n        note: {\n          title,\n          label,\n        },\n        x: sideX * x,\n        y,\n        subject: {\n          radius: 6,\n        },\n        color: \"rgb(223, 69, 69)\", // sync with colors.scss $annotation\n      };\n\n      if (value) {\n        callout.nx = sideX * (rectWidth + 5);\n        callout.ny = y;\n      } else {\n        callout.dx = sideX * 10;\n        callout.dy = sideY * 10;\n      }\n      return callout;\n    };\n\n    const calloutsFn = ({ start, end, offset }) => [\n      start ? calloutFn({ item: start, offset, scales }) : undefined,\n      end ? calloutFn({ item: end, offset, scales, isEnd: true }) : undefined,\n    ];\n\n    const calloutsSvgData = annotations.flatMap(calloutsFn).filter(Boolean);\n\n    const callout = d3annotation()\n      .annotations(calloutsSvgData)\n      .type(d3annotationCalloutCircle);\n\n    d3.select(calloutsRef.current).call(callout);\n\n    const newRegions = annotations.map(regionFn).filter(Boolean);\n    setRegions(newRegions);\n  }, [annotations, currentStart, rectWidth, scales]);\n\n  return (\n    <>\n      <defs>\n        <clipPath id=\"clippath\">\n          <path d={clipPaths.current} />\n          <path d={clipPaths.previous} />\n        </clipPath>\n      </defs>\n      <g ref={regionsRef}>\n        {regions.map((annotation) => (\n          <rect {...annotation} clipPath=\"url(#clippath)\" />\n        ))}\n      </g>\n      <g className={styles.annotations} ref={calloutsRef} />\n    </>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport classnames from \"classnames\";\nimport styles from \"./historyevents.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nimport { DataContext, currentInterval, previousInterval } from \"./DataProvider\";\n\nexport const HistoryEvents = ({ scales, dayHeight = 4 }) => {\n  const { history } = useContext(DataContext);\n  const [circles, setCircles] = useState([]);\n\n  useEffect(() => {\n    if (!history.length || !scales.length) {\n      return;\n    }\n    const intervalCurrent = currentInterval(history);\n    const intervalPrevious = previousInterval(history);\n    const binsCurrent = intervalCurrent.binsLowRes;\n    const binsPrevious = intervalPrevious.binsLowRes;\n    const [, yScale] = scales;\n\n    const radius = dayHeight / 2 + 2;\n    const filter = ({ sev2 }) => sev2 > 0;\n    const mapper = ({ x0, sev2 }) => ({ timestamp: x0, count: sev2 });\n    const stack = ({ timestamp, count }) =>\n      [...new Array(count)].map((_, index) => ({ timestamp, index }));\n    const sev2Current = binsCurrent.filter(filter).map(mapper).flatMap(stack);\n    const sev2Previous = binsPrevious.filter(filter).map(mapper).flatMap(stack);\n\n    const toCirclesGen = (side) => ({ timestamp, index }) => ({\n      key: `${timestamp}-${index}-${side}`,\n      cx: side * (index + 0.75) * 2 * radius,\n      cy: yScale(timestamp),\n      r: radius,\n      isCurrent: side === 1,\n    });\n    const toCirclesCurrent = toCirclesGen(1);\n    const toCirclesPrevious = toCirclesGen(-1);\n\n    const circlesCurrent = sev2Current.map(toCirclesCurrent);\n    const circlesPrevious = sev2Previous.map(toCirclesPrevious);\n\n    const newCircles = [...circlesPrevious, ...circlesCurrent];\n    setCircles(newCircles);\n  }, [dayHeight, history, scales]);\n\n  return (\n    <g>\n      {circles.map(({ key, cx, cy, r, isCurrent }) => (\n        <g\n          key={key}\n          className={classnames({\n            [svgStyles.current]: isCurrent,\n            [svgStyles.previous]: !isCurrent,\n          })}\n        >\n          <circle cx={cx} cy={cy} r={r} />\n        </g>\n      ))}\n    </g>\n  );\n};\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport classnames from \"classnames\";\n\nimport { DataContext, currentInterval as getCurrentInterval, previousInterval as getPreviousInterval } from \"./DataProvider\";\nimport { intervalExtent as getIntervalExtent, isPhone, timeFormatterMonth, everyMonth } from \"../clientUtils\";\nimport { Annotations } from \"./Annotations\";\nimport { HistoryEvents } from \"./HistoryEvents\";\nimport historyStyles from \"./history.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nconst closedPath = (bins, line, offset) => {\n  if (!bins.length) {\n    return \"\";\n  }\n\n  let data = bins.map(({ x0, length }) => ({\n    timestamp: x0,\n    value: length + offset,\n  }));\n\n  const first = data[0],\n    last = data[data.length - 1];\n  const extraBottom = { timestamp: last.timestamp, value: 10000 };\n  const extraTop = { timestamp: first.timestamp, value: 10000 };\n\n  data = [...data, extraBottom, extraTop, first];\n  return line(data);\n};\n\nexport const History = () => {\n  const { history } = useContext(DataContext);\n  // const [svgData, setSvgData] = useState([]);\n  const [scales, setScales] = useState([]);\n  const [currentStart, setCurrentStart] = useState([]);\n  const [paths, setPaths] = useState([]);\n  const [clipPaths, setClipPaths] = useState({});\n\n  const dayHeight = 3.5;\n  const width = isPhone() ? 360 : 500, // TODO - use screen width\n    margin = { top: 20, right: 0, bottom: 20, left: 0 },\n    height = 365 * dayHeight,\n    svgHeight = height + margin.top + margin.bottom,\n    svgWidth = width + margin.left + margin.right;\n  const yearWidth = width / 2;\n  const maxBarWidth = yearWidth * 0.4;\n  const annotationRectWidth = yearWidth * 0.5;\n\n  const svgRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n\n  useEffect(() => {\n    if (!history.length) {\n      return;\n    }\n\n    const intervalCurrent = getCurrentInterval(history);\n    setCurrentStart(intervalCurrent.start);\n    const intervalPrevious = getPreviousInterval(history);\n    const binsCurrent = intervalCurrent.binsLowRes;\n    const binsPrevious = intervalPrevious.binsLowRes;\n    const timeExtent = getIntervalExtent(intervalCurrent);\n\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(binsCurrent, (b) => b.length)])\n      .range([0, maxBarWidth]);\n\n    const yScale = d3.scaleTime().domain(timeExtent).range([0, height]);\n\n    setScales([xScale, yScale]);\n\n    const yAxis = d3\n      .axisLeft()\n      .scale(yScale)\n      .tickValues(everyMonth(intervalCurrent.start))\n      .tickFormat(timeFormatterMonth)\n      .tickSize(0);\n    d3.select(yAxisRef.current).call(yAxis);\n\n    const xAxis = d3.axisBottom().scale(xScale).ticks(2);\n    d3.select(xAxisRef.current).call(xAxis);\n\n    // const currentYear = binsCurrent.map(({ x0, length }) => ({\n    //   x: xScale(0),\n    //   width: xScale(length),\n    //   y: yScale(x0),\n    //   height: binHeight,\n    //   rx: 1,\n    // }));\n    // const previousYear = binsPrevious.map(({ x0, length }) => ({\n    //   x: xScale(0) - xScale(length),\n    //   width: xScale(length),\n    //   y: yScale(x0),\n    //   height: binHeight,\n    //   rx: 1,\n    // }));\n    // setSvgData([currentYear, previousYear]);\n\n    const lineCurrent = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(d.length))\n      .y((d) => yScale(d.x0));\n    const linePrevious = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(-d.length))\n      .y((d) => yScale(d.x0));\n\n    const pathCurrent = lineCurrent(binsCurrent);\n    const pathPrevious = linePrevious(binsPrevious);\n    setPaths([\n      { path: pathCurrent, key: \"current\" },\n      { path: pathPrevious, key: \"previous\" },\n    ]);\n\n    const clipLineCurrent = d3\n      .line()\n      .x((d) => xScale(d.value))\n      .y((d) => yScale(d.timestamp));\n\n    const clipLinePrevious = d3\n      .line()\n      .x((d) => xScale(-d.value))\n      .y((d) => yScale(d.timestamp));\n\n    const pixelOffset = xScale.invert(2) - xScale.invert(0);\n    const clipPathCurrent = closedPath(\n      binsCurrent,\n      clipLineCurrent,\n      pixelOffset\n    );\n    const clipPathPrevious = closedPath(\n      binsPrevious,\n      clipLinePrevious,\n      pixelOffset\n    );\n\n    setClipPaths({ current: clipPathCurrent, previous: clipPathPrevious });\n  }, [history, height, maxBarWidth]);\n\n  // console.log(\"HISTORY/render\");\n\n  return (\n    <div className={historyStyles.container}>\n      <div className={historyStyles.years}>\n        <div className={historyStyles.left}>2019</div>\n        <div className={historyStyles.right}>2020</div>\n      </div>\n      <svg\n        className={historyStyles.svg}\n        ref={svgRef}\n        width={svgWidth}\n        height={svgHeight}\n      >\n        <g transform={`translate(${margin.left + yearWidth},${margin.top})`}>\n          {/* <g>\n            {svgData.map((dataset, iDataset) =>\n              dataset.map((d) => (\n                <rect\n                  className={classnames({\n                    [historyStyles.previous]: iDataset,\n                    [historyStyles.current]: !iDataset,\n                  })}\n                  x={d.x}\n                  y={d.y}\n                  width={d.width}\n                  height={d.height}\n                  rx={d.rx}\n                ></rect>\n              ))\n            )}\n          </g> */}\n          <g>\n            {paths.map(({ path, key }, i) => (\n              <path\n                key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: !i,\n                  [svgStyles.previous]: i,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          <g>\n            <HistoryEvents scales={scales} dayHeight={dayHeight} />\n          </g>\n          <g>\n            <Annotations\n              currentStart={currentStart}\n              rectWidth={annotationRectWidth}\n              scales={scales}\n              clipPaths={clipPaths}\n            />\n          </g>\n          {/* <g\n            className={classnames(svgStyles.axis, historyStyles.axis)}\n            ref={xAxisRef}\n            transform={`translate(0,${height})`}\n          /> */}\n          <g\n            className={classnames(svgStyles.axis, historyStyles.axis)}\n            ref={yAxisRef}\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n","// see groupby.js\nexport const GroupByOptions = {\n  // TODO - import from server\n  Nothing: undefined,\n  IncidentType: \"type\",\n  ZipCode: \"zip\",\n  Area: \"area\",\n  TimeInterval: \"time\",\n};\n\nexport const AreaAccessors = {\n  ZipCode: ({ derived: { zip } }) => zip,\n  Area: ({ derived: { neighborhoodGroup } }) => neighborhoodGroup,\n  AreaSecondary: ({ derived: { neighborhood } }) => neighborhood,\n};\nAreaAccessors.Default = AreaAccessors.Area;\n","import React from \"react\";\nimport styles from \"./tweetdetails.module.scss\";\nimport { isPhone } from \"../clientUtils\";\nimport { AreaAccessors } from \"../groupingOptions\";\n\nexport const TweetDetails = ({tweet}) => {\n  const { address, units, lat, long } = tweet.derived;\n  const { id_str } = tweet;\n  const url = `https://data.seattle.gov/resource/fire-911.json?incident_number=${id_str}`;\n  const unitsList = units.split(\" \");\n  const unitsStr = `${unitsList.length} ${\n    unitsList.length === 1 ? \"unit\" : \"units\"\n  } dispatched:`;\n  const area = AreaAccessors.AreaSecondary(tweet);\n  const phone = isPhone();\n\n  const format = (n) => Number.parseFloat(n).toFixed(3);\n  const coordinates = lat ? `${format(lat)}°N ${format(-long)}°W` : \"\";\n  return (\n    <div className={styles.container}>\n      <div>{address}</div>\n      {phone && <div className={styles.secondary}>{area}</div>}\n      <div className={styles.secondary}>{coordinates}</div>\n      <div>\n        <span>{unitsStr}</span>\n        {unitsList.map((unit) => (\n          <span key={unit} className={styles.unit}>{unit}</span>\n          ))}\n      </div>\n      <div className={styles.secondary}>Incident ID <a className={styles.link} href={url}>{id_str}</a></div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport styles from \"./tweet.module.scss\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\nimport { AreaAccessors } from \"../groupingOptions\";\nimport { TweetDetails } from \"./TweetDetails\";\nimport {\n  timeFormatter,\n  isActive,\n  isAtLeastSev1,\n  isAtLeastSev2,\n  isPhone,\n} from \"../clientUtils\";\nimport { SvgDot } from \"./SvgDot\";\nimport classnames from \"classnames\";\n\nexport const TweetModes = {\n  Default: 0,\n  Detailed: 1,\n  GreyedOut: 2,\n};\n\nexport const Tweet = ({ tweet, mode = TweetModes.Default }) => {\n  const { user, setSelection } = useContext(UserContext);\n  const selectedTweet = user[UserContextKeys.SelectedTweet];\n\n  const handleClick = () => {\n    const newSelectedTweet =\n      selectedTweet && selectedTweet.id_str === tweet.id_str ? null : tweet;\n    setSelection(UserContextKeys.SelectedTweet, newSelectedTweet);\n  };\n  const active = isActive(tweet);\n  const sev1 = isAtLeastSev1(tweet);\n  const sev2 = isAtLeastSev2(tweet);\n\n  const area = AreaAccessors.AreaSecondary(tweet);\n\n  const isGreyedOut = mode === TweetModes.GreyedOut;\n  const isDetailed = mode === TweetModes.Detailed;\n  const time = timeFormatter(tweet.derived.timestamp);\n  const phone = isPhone();\n\n  return (\n    <div\n      className={classnames(styles.container, {\n        [styles.detailed]: isDetailed,\n        [styles.greyedOut]: isGreyedOut,\n        [styles.phone]: phone,\n      })}\n      onClick={handleClick}\n    >\n      <div className={styles.tweet}>\n        <div className={styles.details}>\n          <span className={styles.location}>\n            {!phone && area && <span>{area} @ </span>}\n            {time}\n          </span>\n        </div>\n        <div className={classnames({ [styles.active]: active })}>\n          <SvgDot active={active} sev1={sev1} sev2={sev2} />\n          <span> {tweet.derived.description}</span>\n        </div>\n      </div>\n      {isDetailed && <TweetDetails tweet={tweet} />}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport styles from \"./tweets.module.scss\";\nimport { Tweet, TweetModes } from \"./Tweet\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\n\nexport const TweetList = ({ tweets = [] }) => {\n  const { user } = useContext(UserContext);\n  const selected = user[UserContextKeys.SelectedTweet];\n\n  const mode = ({ id_str }) =>\n    selected\n      ? id_str === selected.id_str\n        ? TweetModes.Detailed\n        : TweetModes.GreyedOut\n      : TweetModes.Default; // TODO - remove modes\n\n  return (\n    <div className={styles.tweets}>\n      {tweets.map((t) => (\n        <Tweet key={t.id_str} tweet={t} mode={mode(t)} />\n      ))}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\n\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsActive = () => {\n  const { active24 } = useContext(DataContext);\n\n  return <TweetList tweets={active24} />;\n}\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\n\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsMajor = () => {\n  const { major24 } = useContext(DataContext);\n\n  return <TweetList tweets={major24} />;\n}\n","import React from \"react\";\nimport { Paragraph } from \"./Paragraph\";\n\nexport const Sources = () => {\n  const title = <span id=\"sources\">Data Sources</span>;\n\n  const sources = (\n    <p>\n      The primary data source is{\" \"}\n      <a href=\"http://www2.seattle.gov/fire/realTime911/\">\n        Real-Time 911 Dispatch\n      </a>\n      . Geolocation data for each incident is retrieved from{\" \"}\n      <a href=\"https://data.seattle.gov/Public-Safety/Seattle-Real-Time-Fire-911-Calls/kzjm-xkqj\">\n        data.seattle.gov\n      </a>{\" \"}\n      (refreshed every 5 minutes, with occasional delays). City and neighborhood\n      boundary data is from{\" \"}\n      <a href=\"https://github.com/seattleflu/seattle-geojson/tree/master/seattle_geojsons\">\n        seattleflu/seattle-geojson\n      </a>\n      . Map powered by <a href=\"http://leafletjs.com\">Leaflet</a> via{\" \"}\n      <a href=\"https://react-leaflet.js.org\">react-leaflet</a>. Map tiles\n      provided by{\" \"}\n      <a href=\"https://www.jawg.io/docs/apidocs/static-maps/\">Jawg Maps</a>.\n      Visualizations powered by <a href=\"https://d3js.org\">D3</a>.\n    </p>\n  );\n\n  return <Paragraph title={title} content={sources} />;\n};\n","import React, { useContext } from \"react\";\nimport { StatusContext } from \"./StatusContext\";\nimport { timeFormatter, timeFormatterUserTimezone } from \"../clientUtils\";\nimport styles from \"./freshness.module.scss\";\n\nexport const Freshness = () => {\n  const { status = {} } = useContext(StatusContext);\n\n  if (!status.lastUpdated) {\n    return <span>&nbsp;</span>;\n  }\n\n  const date = new Date(status.lastUpdated);\n  const formatTimezone = \"h:mma z\";\n  const formatNoTimezone = \"h:mma\";\n  const seattle = timeFormatter(date, formatNoTimezone);\n  const seattleTZ = timeFormatter(date, formatTimezone);\n  const user = timeFormatterUserTimezone(date, formatNoTimezone);\n  const userTZ = timeFormatterUserTimezone(date, formatTimezone);\n\n  const same = seattle === user;\n  const displayUser = same ? \"\" : ` (${userTZ})`;\n  const displaySeattle = same ? seattle : seattleTZ;\n\n  return (\n    <span>\n      Data is current as of{\" \"}\n      <span className={styles.time}>{displaySeattle}</span>\n      {displayUser}.\n    </span>\n  );\n};\n","import React from \"react\";\nimport styles from \"./legend.module.scss\";\nimport { SvgDot } from \"./SvgDot\";\n\nexport const Legend = () => (\n  <p className={styles.legend}>\n    <div>\n      <span>Active incident </span>\n      <SvgDot active={true} radius={5} />\n    </div>\n    <div>\n      <span>Fewer than 5 units dispatched </span>\n      <SvgDot sev1={true} />\n    </div>\n    <div>\n      <span>5 or more units dispatched </span>\n      <SvgDot sev1={true} />\n    </div>\n    <div>\n      <span>10 or more units dispatched </span>\n      <SvgDot sev2={true} />\n    </div>\n  </p>\n);\n","import React from \"react\";\nimport { Map } from \"./Map\";\nimport { DataProvider } from \"./DataProvider\";\nimport { GroupByArea } from \"./GroupByArea\";\nimport { Header } from \"./Header\";\nimport { Rehoboam } from \"./Rehoboam\";\nimport { Section } from \"./Section\";\nimport { Paragraph } from \"./Paragraph\";\nimport { History } from \"./History\";\nimport { TweetsActive } from \"./TweetsActive\";\nimport { TweetsMajor } from \"./TweetsMajor\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { Sources } from \"./Sources\";\nimport { Freshness } from \"./Freshness\";\nimport { Legend } from \"./Legend\";\n\nexport const DispatchAll = () => {\n  const intro = (\n    <p>\n      A visualization of Seattle Fire Department 911 dispatch data: a real-time\n      view of incidents across the city, a breakdown by neighborhood, and an\n      overview of the year's cumulative data.{\" \"}\n      <a href=\"#sources\">Data sources</a> are listed at the end.\n    </p>\n  );\n\n  const live = (\n    <p>\n      <span>\n        A near-real-time view of today's incidents. All timestamps are in\n        Seattle local time.\n      </span>{\" \"}\n      <Freshness />\n    </p>\n  );\n\n  const todayText = \"\";\n\n  const pastWeek = `The past 7 days of dispatches.`;\n\n  const active = (\n    <p>\n      Select an incident to view dispatch details. If geolocation data is\n      available (typically within 5 minutes), the map will zoom in to the spot.\n    </p>\n  );\n\n  const major = (\n    <p>\n      Today's incidents with <strong>five or more</strong> units dispatched.\n    </p>\n  );\n\n  const areas = \"Select an area to zoom in on today's incidents there.\";\n\n  const history = (\n    <p>\n      Zooming out even further, this view presents a year's worth of data. Lines\n      trace daily dispatch totals for all of Seattle. Circles represent major\n      incidents (those with 10 or more units dispatched).\n    </p>\n  );\n\n  const notes = (\n    <>\n      <p>\n        Created by <a href=\"https://linkedin.com/in/anarseyf/\">Anar Seyf</a>.\n      </p>\n    </>\n  );\n\n  return (\n    <DataProvider>\n      <Section styleOption={1}>\n        <Paragraph h1=\"Seattle Fire 911 Dispatch\" content={intro} />\n      </Section>\n\n      <Section styleOption={2}>\n        <Paragraph title=\"Live View\" content={live} />\n        <Rehoboam />\n        <Paragraph content={<Legend />} />\n      </Section>\n\n      <Section edgeToEdge={true} styleOption={1}>\n        <Paragraph title=\"\" content={todayText} margin={true} />\n\n        <ErrorBoundary>\n          <Map />\n        </ErrorBoundary>\n      </Section>\n\n      <Section styleOption={2}>\n        <Paragraph title=\"Active Incidents\" content={active} />\n        <TweetsActive />\n        <Paragraph title=\"Major Incidents\" content={major} />\n        <TweetsMajor />\n      </Section>\n\n      <Section styleOption={1} edgeToEdge={true}>\n        <Paragraph title=\"City Areas\" content={areas} margin={true} />\n        <GroupByArea />\n      </Section>\n\n      <Section styleOption={2}>\n        <Paragraph title=\"Past Week\" content={pastWeek} />\n        <Header />\n      </Section>\n\n      <Section styleOption={1} edgeToEdge={true}>\n        <Paragraph\n          title=\"This Year compared to Last Year\"\n          content={history}\n          margin={true}\n        />\n        <History />\n      </Section>\n\n      <Section styleOption={2}>\n        <Sources />\n        <Paragraph title=\"About\" content={notes} />\n      </Section>\n    </DataProvider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext, currentInterval } from \"./DataProvider\";\n\nimport { Tweet, TweetModes } from \"./Tweet\";\nimport { UserContextKeys, UserContext } from \"./UserProvider\";\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsForArea = () => {\n  const { filteredByArea } = useContext(DataContext);\n  const { user } = useContext(UserContext);\n  const filter = user[UserContextKeys.TypeFilter];\n\n  if (!filteredByArea.length) {\n    return null;\n  }\n  const all = currentInterval(filteredByArea).values;\n  const filtered = all.filter(\n    ({ derived: { type } }) => !filter || filter === type\n  );\n\n  return <TweetList tweets={filtered} />;\n}\n","import React from \"react\";\nimport { Paragraph } from \"./Paragraph\";\nimport { Header } from \"./Header\";\nimport { useNeighborhoods } from \"./neighborhoods\";\n\nexport const AreaPageHeader = ({ area }) => {\n  const neighborhoodsMap = useNeighborhoods();\n  const subareas = (\n    <div>\n      {(neighborhoodsMap[area] || []).map((subarea) => (\n        <div key={subarea}>{subarea}</div>\n      ))}\n    </div>\n  );\n\n  // const [list, setList] = useState([]);\n  // useEffect(() => {\n  //   if (neighborhoodsMap[area]) {\n  //     setList(neighborhoodsMap[area]);\n  //   }\n  // }, [area, neighborhoodsMap]);\n\n  return (\n    <>\n      <Paragraph title={area} content={subareas} />\n      <Header area={area} />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport { Map } from \"./Map\";\nimport { DataProvider } from \"./DataProvider\";\nimport { TweetsForArea } from \"./TweetsForArea\";\nimport { Paragraph } from \"./Paragraph\";\nimport { Section } from \"./Section\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { Sources } from \"./Sources\";\nimport { AreaPageHeader } from \"./AreaPageHeader\";\nimport paragraphStyles from \"./paragraph.module.scss\";\n\nexport const DispatchArea = ({ area }) => {\n\n  return (\n    <DataProvider filters={{ area }}>\n      <Section styleOption={2}>\n        <Paragraph\n          content={\n            <Link className={paragraphStyles.link} to=\"/\">\n              « main page\n            </Link>\n          }\n        />\n      </Section>\n\n      <Section styleOption={1}>\n        <AreaPageHeader area={area} />\n      </Section>\n\n      <Section styleOption={2} edgeToEdge={true}>\n        <ErrorBoundary>\n          <Map area={area} />\n        </ErrorBoundary>\n      </Section>\n\n      <Section styleOption={1}>\n        <Paragraph title=\"Today's Incidents\" />\n        <TweetsForArea />\n      </Section>\n\n      <Section styleOption={2}>\n        <Sources />\n      </Section>\n    </DataProvider>\n  );\n};\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\nimport { DispatchAll } from \"./dispatch/DispatchAll\";\nimport { DispatchArea } from \"./dispatch/DispatchArea\";\n\nimport styles from \"./app.module.scss\";\nimport { StatusProvider } from \"./dispatch/StatusContext\";\nimport { UserProvider } from \"./dispatch/UserProvider\";\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <Router>\n        <StatusProvider path=\"/\">\n          <UserProvider default>\n            <DispatchAll default />\n          </UserProvider>\n          <UserProvider path=\":area\">\n            <DispatchArea path=\"/\" />\n          </UserProvider>\n        </StatusProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport const register = (config) => {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport const unregister = () => {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./custom.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"rehoboam_container__28M8-\",\"counter\":\"rehoboam_counter__33zQ-\",\"path\":\"rehoboam_path__2oGje\",\"maincircle\":\"rehoboam_maincircle__UPFVE\",\"events\":\"rehoboam_events__24i6B\",\"eventcircle\":\"rehoboam_eventcircle__2SvTX\",\"major\":\"rehoboam_major__1xPRx\",\"active\":\"rehoboam_active__Tv3Oe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__1TT8J\",\"content\":\"section_content__32e_z\",\"phone\":\"section_phone__C_IbC\",\"styleDefault\":\"section_styleDefault__1fobi\",\"style1\":\"section_style1__-PHu2\",\"style2\":\"section_style2__3JfYX\",\"styleMap\":\"section_styleMap__2ZHhK\",\"subcontent\":\"section_subcontent__1yzVR\",\"edgeToEdge\":\"section_edgeToEdge__28iHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"tweet_container__2cPfJ\",\"detailed\":\"tweet_detailed__1zw6b\",\"phone\":\"tweet_phone__2hHRD\",\"greyedOut\":\"tweet_greyedOut__187c4\",\"tweet\":\"tweet_tweet__2okc-\",\"active\":\"tweet_active__1wASL\",\"details\":\"tweet_details__165yi\",\"units\":\"tweet_units__2ZVmK\",\"location\":\"tweet_location__26Q8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"history_container__jp729\",\"svg\":\"history_svg__wHz8f\",\"previous\":\"history_previous__1tjyT\",\"current\":\"history_current__2e2uB\",\"years\":\"history_years__2UEbj\",\"left\":\"history_left__YNLcK\",\"right\":\"history_right___nK7k\",\"axis\":\"history_axis__1LX0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"tweetdetails_container__1rcoE\",\"explanation\":\"tweetdetails_explanation__3lEx4\",\"secondary\":\"tweetdetails_secondary__sgHzU\",\"unit\":\"tweetdetails_unit__33Rog\",\"link\":\"tweetdetails_link__23U3X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph\":\"paragraph_paragraph__2KRp8\",\"text\":\"paragraph_text__1NbBg\",\"link\":\"paragraph_link__2D61j\",\"margin\":\"paragraph_margin__uTVtm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chart_container__3RTag\",\"header\":\"chart_header__3gCPW\",\"svg\":\"chart_svg__pP08z\",\"total\":\"chart_total__qkQSI\",\"title\":\"chart_title__2BYUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topline\":\"topline_topline__3XNKt\",\"phone\":\"topline_phone__2VHBk\",\"text\":\"topline_text__2_5SM\",\"date\":\"topline_date__2k6ha\",\"total\":\"topline_total__b2Zkr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"map_container__1WM_n\",\"phone\":\"map_phone__1XpbO\",\"area\":\"map_area__1ZdwJ\",\"pane\":\"map_pane__g9Le7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"areashape_container__3TA09\",\"phone\":\"areashape_phone__ZKBlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"spark_container__20mVH\",\"total\":\"spark_total__2Kxtk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"annotations\":\"annotations_annotations__1BK52\",\"line\":\"annotations_line__I-f5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"axis\":\"svg_axis__bET8j\",\"path\":\"svg_path__EmZTS\",\"highlight\":\"svg_highlight__1dzK0\",\"previous\":\"svg_previous__19uFf\",\"current\":\"svg_current__mnSmX\",\"now\":\"svg_now__2CbCS\",\"pulse\":\"svg_pulse__2GGpF\",\"live\":\"svg_live__2Jj88\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tweets\":\"tweets_tweets__PhO0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time\":\"freshness_time__3D6Db\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"legend\":\"legend_legend__1pAdz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__3mk8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"group_container___U6Y6\",\"itemContainer\":\"group_itemContainer__91pkk\",\"vpadding\":\"group_vpadding__3db4T\",\"fullWidth\":\"group_fullWidth__33LFP\",\"right\":\"group_right__2euLw\",\"item\":\"group_item__1Q6Q7\",\"area\":\"group_area__3alEV\",\"text\":\"group_text__1JC9o\",\"list\":\"group_list__c2KEa\",\"phone\":\"group_phone__rXIIG\",\"major\":\"group_major__2byd-\",\"active\":\"group_active__2THyL\"};"],"sourceRoot":""}