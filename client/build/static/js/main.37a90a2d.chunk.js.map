{"version":3,"sources":["dispatch/group.module.scss","dispatch/geojson.js","clientUtils.js","dispatch/ThemeContext.jsx","dispatch/MapDot.jsx","api.jsx","dispatch/StatusContext.jsx","dispatch/Annotations.jsx","dispatch/DataProvider.jsx","dispatch/UserProvider.jsx","dispatch/mapOptions.js","dispatch/Map.jsx","dispatch/ErrorBoundary.jsx","dispatch/AreaShape.jsx","dispatch/SvgDot.jsx","dispatch/Spark.jsx","dispatch/neighborhoods.js","dispatch/GroupByArea.jsx","dispatch/MultiLine.jsx","dispatch/Header.jsx","dispatch/Topline.jsx","dispatch/Rehoboam.jsx","dispatch/Section.jsx","dispatch/Paragraph.jsx","dispatch/HistoryEvents.jsx","dispatch/History.jsx","groupingOptions.js","dispatch/TweetDetails.jsx","dispatch/Tweet.jsx","dispatch/TweetList.jsx","dispatch/TweetsActive.jsx","dispatch/TweetsMajor.jsx","dispatch/Sources.jsx","dispatch/Freshness.jsx","dispatch/Legend.jsx","dispatch/ThemeSwitch.jsx","dispatch/DispatchAll.jsx","dispatch/TweetsForArea.jsx","dispatch/AreaPageHeader.jsx","dispatch/DispatchArea.jsx","App.jsx","serviceWorker.js","index.tsx","dispatch/rehoboam.module.scss","dispatch/tweet.module.scss","dispatch/section.module.scss","dispatch/history.module.scss","dispatch/paragraph.module.scss","dispatch/chart.module.scss","dispatch/topline.module.scss","dispatch/tweetdetails.module.scss","dispatch/map.module.scss","dispatch/areashape.module.scss","dispatch/spark.module.scss","dispatch/themeswitch.module.scss","dispatch/svg.module.scss","dispatch/annotations.module.scss","dispatch/tweets.module.scss","dispatch/freshness.module.scss","dispatch/legend.module.scss"],"names":["module","exports","nhoodFeaturesByArea","features","prop","map","forEach","feature","key","properties","list","push","byArea","nhoods","featuresForArea","nhood","areas","geojson","areaProp","cityGeojson","city","defaultCentroid","mapBounds","lat","long","centroid","length","coords","geometry","coordinates","flat","latExtent","d3","longExtent","intervalExtent","start","end","expandMinutes","expand","extent","offset","queryText","isPhone","window","matchMedia","matches","timeFormatter","timestamp","format","timezone","timeFormatterUserTimezone","date","guess","timeFormatterHourAM","timeFormatterMonth","pacificMidnight","addDays","Date","startOf","add","every6Hours","h","months","Array","_","i","isActive","derived","active","isExactlySev1","severity","isExactlySev2","getStyleProp","appElement","document","getElementById","getComputedStyle","getPropertyValue","ThemeContext","createContext","ThemeProvider","children","value","useState","theme","setTheme","useEffect","midnight","nextMidnight","sunrise","getSunrise","sunset","getSunset","now","Math","abs","useTheme","Provider","id","className","Appearance","MapDot","appearance","useContext","color","setColor","regularColor","activeColor","opacity","baseRadius","Circle","center","radius","fill","fillOpacity","stroke","weight","getStatus","a","getByAPI","getAnnotations","getHistory","getTweetsForArea","area","queryParams","getTweetsForAreaMin","minimize","hiRes","getTweetsForAreaMinWeek","compare","getTweetsByArea","getTweetsMajor","getTweetsActive24","queryString","query","Object","keys","encodeURIComponent","join","api","fetch","headers","Accept","response","json","textureCurrent","texturePrevious","deepEqual","require","StatusContext","StatusProvider","status","setStatus","previousStatus","setPreviousStatus","console","log","delay","checkForUpdates","newStatus","env","title","intervalId","setInterval","clearInterval","useStatus","DataContext","currentInterval","dataset","intervals","previousInterval","DataProvider","filters","initialValue","filteredByArea","filteredByAreaMin","filteredByAreaMinWeek","activeOrMajorForArea","activeOrMajorByArea","groupedByArea","history","active24","major24","annotations","setValue","mostRecentId","undefined","setFilteredByArea","setFilteredByAreaMin","setFilteredByAreaMinWeek","setActiveOrMajorForArea","setActiveOrMajorByArea","setGroupedByArea","setHistory","setActive24","setMajor24","setAnnotations","shouldFetch","setShouldFetch","activeOrMajor","values","useTweets","UserContext","UserContextKeys","useUser","user","setUser","setSelection","UserProvider","mapOptions","resolution","url","r","attribution","Map","geoColor","geojsonStyleBounds","strokeOpacity","geojsonStyleActive","fillColor","typeFilter","selectedTweet","rendered","filter","zoom","defaultZoom","isSelectedDot","id_str","data","type","selectedIndex","findIndex","slice","appearanceFn","d","phone","tileOptions","classnames","styles","container","minZoom","maxZoom","maxBounds","maxBoundsViscosity","zoomControl","TileLayer","GeoJSON","style","CRA_NAM","ErrorBoundary","props","state","hasError","error","errorInfo","this","React","Component","AreaShape","warn","geojsonStyle","attributionControl","dragging","keyboard","SvgDot","sev1","sev2","svgStyles","live","width","height","event","cx","size","cy","outer","Spark","showTotal","useCumulative","showPrevious","svgData","setSvgData","nowDot","setNowDot","svgWidth","svgHeight","margin","top","right","bottom","left","accessor","cumulative","xExtent","yExtent","flatMap","bins","xScale","domain","range","yScale","line","curve","tension","x","x0","y","newSvgData","path","reverse","lastBin","total","lastIndex","sparkStyles","transform","current","useNeighborhoods","setMap","newMap","sort","GroupByArea","totalsMap","setTotalsMap","setData","neighborhoodsMap","sortedData","areaA","intervalsA","areaB","intervalsB","activeA","sev1A","sev2A","activeB","sev1B","sev2B","totalA","totalB","itemContainer","to","vpadding","fullWidth","item","major","text","v","spark","MultiLine","showHeader","xAxisRef","useRef","yAxisRef","xAxis","scale","tickValues","tickFormat","tickSize","call","yAxis","ticks","chartStyles","header","chart","axis","ref","Header","Topline","totalContent","totalElement","topline","Rehoboam","svgPath","setSvgPath","circles","setCircles","setTotal","axisRef","mainRadius","binsHiRes","maxLength","radialData","fraction","PI","toRadial","radialGen","angleScale","axisRadialInner","activeOrMajorValues","newCircles","theta","sin","cos","counter","svg","maincircle","events","Section","styleOption","edgeToEdge","styleDefault","section","content","subcontent","Paragraph","h1","paragraph","Annotations","currentStart","rectWidth","scales","clipPaths","calloutsRef","regionsRef","regions","setRegions","annotationColor","textureColor","textures","lines","orientation","calloutFn","label","isEnd","sideX","sideY","callout","note","subject","nx","ny","dx","dy","calloutsSvgData","Boolean","d3annotation","d3annotationCalloutCircle","newRegions","isCurrent","texture","previous","annotation","clipPath","HistoryEvents","dayHeight","intervalCurrent","intervalPrevious","binsCurrent","binsLowRes","binsPrevious","mapper","count","stack","index","sev2Current","sev2Previous","toCirclesGen","side","toCirclesCurrent","toCirclesPrevious","circlesCurrent","circlesPrevious","closedPath","first","extraBottom","extraTop","History","setScales","setCurrentStart","paths","setPaths","setClipPaths","yearWidth","maxBarWidth","annotationRectWidth","svgRef","getCurrentInterval","getPreviousInterval","timeExtent","getIntervalExtent","b","m","clone","toDate","everyMonth","lineCurrent","linePrevious","pathCurrent","pathPrevious","clipLineCurrent","clipLinePrevious","pixelOffset","invert","clipPathCurrent","clipPathPrevious","historyStyles","years","AreaAccessors","ZipCode","zip","Area","neighborhoodGroup","AreaSecondary","neighborhood","Default","TweetDetails","tweet","address","units","unitsList","split","unitsStr","n","Number","parseFloat","toFixed","secondary","unit","TweetModes","Tweet","mode","isGreyedOut","isDetailed","time","detailed","greyedOut","onClick","newSelectedTweet","details","location","description","TweetList","tweets","selected","t","TweetsActive","TweetsMajor","Sources","sources","href","Freshness","lastUpdated","seattle","seattleTZ","userTZ","same","displayUser","displaySeattle","Legend","legend","ThemeSwitch","button","DispatchAll","intro","notes","TweetsForArea","filtered","AreaPageHeader","decodedArea","decodeURIComponent","subareas","subarea","DispatchArea","paragraphStyles","link","App","StrictMode","default","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.37a90a2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"group_app__36m5B\",\"light\":\"group_light__3vLZi\",\"dusk\":\"group_dusk__jCyaT\",\"dark\":\"group_dark__XPv8q\",\"container\":\"group_container___U6Y6\",\"itemContainer\":\"group_itemContainer__91pkk\",\"vpadding\":\"group_vpadding__3db4T\",\"fullWidth\":\"group_fullWidth__33LFP\",\"right\":\"group_right__2euLw\",\"item\":\"group_item__1Q6Q7\",\"area\":\"group_area__3alEV\",\"text\":\"group_text__1JC9o\",\"list\":\"group_list__c2KEa\",\"phone\":\"group_phone__rXIIG\",\"major\":\"group_major__2byd-\",\"active\":\"group_active__2THyL\"};","import * as d3 from \"d3\";\n// import zipCodes from \"./zip-codes.json\";\n// import nhoods from \"./nhoods.json\";\nimport nhoods from \"./2016_seattle_cra.json\";\nimport city from \"./2016_seattle_city.json\";\n\nconst nhoodProp = \"NEIGHBO\"; // TODO - import from server/groupby.js\n// const zipcodeProp = \"GEOID10\";\n\nconst byArea = (features, prop) => {\n  const map = {};\n  features.forEach((feature) => {\n    const key = feature.properties[prop];\n    const list = map[key] || [];\n    list.push(feature);\n    map[key] = list;\n  });\n  return map;\n};\n\nconst nhoodFeaturesByArea = byArea(nhoods.features, nhoodProp);\nconst featuresForNhood = (nhood) => nhoodFeaturesByArea[nhood];\n\n// const zipcodeFeaturesByArea = byArea(zipCodes.features, zipcodeProp);\n// const featuresForZip = (zip) => zipcodeFeaturesByArea[zip];\n\nexport const featuresForArea = featuresForNhood;\n\nexport const areas = {\n  geojson: nhoods,\n  areaProp: nhoodProp,\n};\n\nexport const cityGeojson = city;\n\nconst lat = 47.61485,\n  long = -122.32838;\nexport const defaultCentroid = [lat, long]; // approx. centroid of cityGeojson\n\nexport const mapBounds = [\n  [lat + 0.2, long - 0.3],\n  [lat - 0.2, long + 0.3],\n];\n\nexport const centroid = (features) => {\n  if (!features.length) {\n    return defaultCentroid;\n  }\n\n  let coords = features\n    .map(({ geometry: { coordinates } }) => coordinates)\n    .flat(2);\n  const latExtent = d3.extent(coords, ([_, lat]) => lat);\n  const longExtent = d3.extent(coords, ([long, _]) => long);\n  return [d3.mean(latExtent), d3.mean(longExtent)];\n};\n","import * as d3 from \"d3\";\nimport { tz as timezone } from \"moment-timezone\";\n\nexport const intervalExtent = ({ start, end }, expandMinutes = 0) =>\n  expand([start, end], expandMinutes);\n\n// move to server/histogram.js\nexport const expand = (extent, expandMinutes = 0) => [\n  d3.timeMinute.offset(extent[0], -expandMinutes),\n  d3.timeMinute.offset(extent[1], expandMinutes),\n];\n\n// TODO - coordinate with section.module.scss, or find a way to use vars\n\nconst maxWidthPhone = 500;\nconst queryText = `only screen and (max-device-width: ${maxWidthPhone}px)`;\n\nexport const isPhone = () =>\n  window ? !!window.matchMedia(queryText).matches : true;\n\n// see also fileUtils.js on server\nconst SeattleTimezone = \"America/Vancouver\";\nexport const timeFormatter = (timestamp, format = \"h:mm A\") =>\n  timezone(timestamp, SeattleTimezone).format(format);\n\nexport const timeFormatterUserTimezone = (date, format = \"h:mm A\") =>\n  timezone(date, timezone.guess()).format(format);\n\nexport const timeFormatterHourAM = (timestamp) =>\n  timeFormatter(timestamp, \"h A\");\n\nexport const timeFormatterMonth = (timestamp) =>\n  timeFormatter(+timestamp, \"MMM\");\n\nexport const timeFormatterMonthDay = (timestamp) =>\n  timeFormatter(+timestamp, \"MMM D\");\n\nexport const pacificMidnight = (addDays = 0) =>\n  +timezone(new Date(), SeattleTimezone).startOf(\"day\").add(addDays, \"days\");\n\nconst HOUR = 3600 * 1000;\nexport const every6Hours = (start) =>\n  [0, 6, 12, 18, 24].map((h) => start + h * HOUR); // Or use moment.add()\nconst months = [...new Array(12)].map((_, i) => i);\nexport const everyMonth = (start) => {\n  const m = timezone(start, SeattleTimezone);\n  return months.map((v) => m.clone().add(v, \"months\").toDate());\n};\n\nexport const isActive = ({ derived: { active } }) => active;\nexport const isAtLeastSev1 = ({ derived: { severity } }) => severity >= 1;\nexport const isAtLeastSev2 = ({ derived: { severity } }) => severity >= 2;\nexport const isExactlySev1 = ({ derived: { severity } }) => severity === 1;\nexport const isExactlySev2 = ({ derived: { severity } }) => severity === 2;\n\nexport const getStyleProp = (prop) => {\n  const appElement = document.getElementById(\"app\");\n    const style = getComputedStyle(appElement);\n    return style.getPropertyValue(prop);\n}","import React, { createContext, useState, useEffect } from \"react\";\nimport { getSunrise, getSunset } from \"sunrise-sunset-js\";\nimport { defaultCentroid } from \"./geojson\";\nimport { pacificMidnight } from \"../clientUtils\";\n\nexport const ThemeContext = createContext();\n\nconst useTheme = () => {\n  const [theme, setTheme] = useState(\"dark\");\n\n  useEffect(() => {\n    const midnight = new Date(pacificMidnight());\n    const nextMidnight = new Date(pacificMidnight(1));\n    const sunrise = getSunrise(...defaultCentroid, midnight);\n    const sunset = getSunset(...defaultCentroid, nextMidnight);\n\n    const now = new Date();\n    const threshold = 0.5 * 3600 * 1000;\n    if (\n      Math.abs(now - sunrise) < threshold ||\n      Math.abs(now - sunset) < threshold\n    ) {\n      setTheme(\"dusk\");\n    } else if (now < sunrise || now > sunset) {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n\n    setTheme(\"dark\"); // TODO - remove\n  }, []);\n\n  return { theme, setTheme };\n};\n\nexport const ThemeProvider = ({ children }) => {\n  const value = useTheme();\n  const { theme } = value;\n  return (\n    <ThemeContext.Provider value={value}>\n      <div id=\"app\" className={theme}>\n        {children}\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { ThemeContext } from \"./ThemeContext\";\nimport { Circle } from \"react-leaflet\";\nimport { getStyleProp } from \"../clientUtils\";\n\nexport const Appearance = {\n  Normal: 0,\n  Dimmed: -1,\n  Highlighted: 1,\n};\n\nexport const MapDot = ({\n  coordinates,\n  severity = 0,\n  active = false,\n  appearance = Appearance.Normal,\n}) => {\n  const { theme } = useContext(ThemeContext);\n  const [color, setColor] = useState(null);\n\n  useEffect(() => {\n    const regularColor = getStyleProp(\"--graph-primary\");\n    const activeColor = getStyleProp(\"--live\");\n    setColor(active ? activeColor : regularColor);\n  }, [active, theme]);\n\n  // TODO - set opacity in CSS\n  let opacity = 0.4;\n  if (severity >= 1) {\n    opacity = 0.7;\n  }\n  if (active) {\n    opacity = 0.9;\n  }\n  if (appearance === Appearance.Dimmed) {\n    opacity = 0.35;\n  }\n  if (appearance === Appearance.Highlighted) {\n    opacity = 0.9;\n  }\n  const baseRadius = active ? 250 : 150;\n\n  if (!coordinates[0]) {\n    // console.warn(`Dot: coordinates = ${coordinates}`);\n    return null;\n  }\n\n  return (\n    <>\n      <Circle\n        center={coordinates}\n        radius={baseRadius}\n        color={color}\n        fill={true}\n        fillOpacity={opacity}\n        stroke={false}\n      ></Circle>\n      {severity >= 1 && (\n        <Circle\n          center={coordinates}\n          radius={baseRadius + 150}\n          weight={2}\n          color={color}\n          opacity={opacity}\n          fill={false}\n        ></Circle>\n      )}\n      {severity >= 2 && (\n        <Circle\n          center={coordinates}\n          radius={baseRadius + 300}\n          weight={2}\n          color={color}\n          opacity={opacity}\n          fill={false}\n        ></Circle>\n      )}\n    </>\n  );\n};\n","export async function getEnv() {\n  return getByAPI(\"env\");\n}\n\nexport async function getStatus() {\n  return getByAPI(`dispatch/status`);\n}\n\nexport async function getAnnotations() {\n  return getByAPI(`dispatch/history/annotations`);\n}\n\nexport async function getHistory() {\n  return getByAPI(`dispatch/history`);\n}\n\nexport async function getTweetsForArea(area, queryParams) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsForAreaMin(\n  area,\n  queryParams = { minimize: true, hiRes: true }\n) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsForAreaMinWeek(\n  area,\n  queryParams = { minimize: true, compare: 6 }\n) {\n  return getByAPI(`dispatch/tweets/${area}`, queryParams);\n}\n\nexport async function getTweetsByArea(queryParams) {\n  return getByAPI(`dispatch/tweets/byArea`, queryParams);\n}\n\nexport async function getTweetsMajor() {\n  return getByAPI(\"dispatch/tweets/major\");\n}\n\nexport async function getTweetsActive24() {\n  return getByAPI(\"dispatch/tweets/active24\");\n}\n\nexport async function getTweetsStatic() {\n  return getByAPI(\"dispatch/static\");\n}\n\nexport async function getTweetsSeattleGov() {\n  return getByAPI(\"dispatch/seattle-gov\");\n}\n\nconst queryString = (query = {}) => {\n  const list = Object.keys(query).map(\n    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(query[key])}`\n  );\n  return list.join(\"&\");\n};\n\nasync function getByAPI(api = \"\", queryParams = {}) {\n  const query = queryString(queryParams);\n  const response = await fetch(\n    `/api/${api}${query.length ? \"?\" : \"\"}${query}`,\n    {\n      // TODO - use axios?\n      headers: { Accept: \"application-json\" },\n    }\n  );\n\n  return response.json();\n}\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { getStatus } from \"../api\";\nconst deepEqual = require(\"fast-deep-equal/es6/react\");\n\nexport const StatusContext = createContext();\n\nconst useStatus = () => {\n  const [status, setStatus] = useState({});\n  const [previousStatus, setPreviousStatus] = useState({});\n\n  useEffect(() => {\n    const delay = 60 * 1000;\n\n    console.log(\n      `🟥 useStatus/starting checker @ every ${delay / 1000} seconds`\n    );\n    const checkForUpdates = async () => {\n      const newStatus = await getStatus();\n      // console.log(\n      //   `useStatus(${intervalId})/current status (next check in ${\n      //     delay / 1000\n      //   } sec)`,\n      //   newStatus\n      // );\n\n      if (!deepEqual(status, newStatus)) {\n        console.log(\"useStatus/setting new status:\", newStatus);\n        setPreviousStatus(status);\n        setStatus(newStatus);\n      }\n\n      if (status.env === \"development\") {\n        document.title = \"KSEA.live (dev)\";\n      }\n    };\n\n    checkForUpdates();\n    const intervalId = setInterval(checkForUpdates, delay);\n    return () => clearInterval(intervalId);\n  }, [status]);\n\n  return { status, previousStatus };\n};\n\nexport const StatusProvider = ({ children }) => {\n  const value = useStatus();\n  return (\n    <StatusContext.Provider value={value}>{children}</StatusContext.Provider>\n  );\n};\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport textures from \"textures\";\nimport {\n  annotation as d3annotation,\n  annotationCalloutCircle as d3annotationCalloutCircle,\n} from \"d3-svg-annotation\";\nimport { DataContext } from \"./DataProvider\";\n\nimport styles from \"./annotations.module.scss\";\nimport { getStyleProp } from \"../clientUtils\";\n\nlet textureCurrent;\nlet texturePrevious;\n\nexport const Annotations = ({ currentStart, rectWidth, scales, clipPaths }) => {\n  const calloutsRef = useRef(null);\n  const regionsRef = useRef(null);\n  const { annotations } = useContext(DataContext);\n  const [regions, setRegions] = useState([]);\n\n  useEffect(() => {\n    if (!scales.length) {\n      return;\n    }\n\n    const annotationColor = getStyleProp(\"--annotation\");\n    const textureColor = getStyleProp(\"--texture\");\n    texturePrevious = textures\n      .lines()\n      // .lighter()\n      .size(8)\n      .stroke(textureColor);\n    textureCurrent = textures\n      .lines()\n      // .lighter()\n      .size(8)\n      .orientation(\"6/8\")\n      .stroke(textureColor);\n\n    d3.select(regionsRef.current).call(textureCurrent);\n    d3.select(regionsRef.current).call(texturePrevious);\n\n    const regionFn = ({ start, end, offset }, i) => {\n      if (!start || !end) {\n        return undefined;\n      }\n      const [xScale, yScale] = scales;\n      const isCurrent = offset === 0;\n      const texture = isCurrent ? textureCurrent : texturePrevious;\n\n      return {\n        key: `${start}-${end}-${i}`,\n        x: xScale(0) - (isCurrent ? 0 : rectWidth),\n        y: yScale(start.timestamp + offset),\n        width: rectWidth,\n        height:\n          yScale(end.timestamp + offset) - yScale(start.timestamp + offset),\n        fill: texture.url(),\n      };\n    };\n\n    const calloutFn = ({\n      item: { title, label, value, timestamp },\n      offset,\n      scales: [xScale, yScale],\n      isEnd = false,\n    }) => {\n      const isPrevious = timestamp < currentStart;\n      const sideX = isPrevious ? -1 : 1;\n\n      const x = value ? xScale(value) : rectWidth;\n      const sideY = isEnd ? 1 : -1;\n      const y = yScale(timestamp + offset);\n      const callout = {\n        note: {\n          title,\n          label,\n        },\n        x: sideX * x,\n        y,\n        subject: {\n          radius: 6,\n        },\n        color: annotationColor,\n      };\n\n      if (value) {\n        callout.nx = sideX * (rectWidth + 10);\n        callout.ny = y;\n      } else {\n        callout.dx = sideX * 10;\n        callout.dy = sideY * 10;\n      }\n      return callout;\n    };\n\n    const calloutsFn = ({ start, end, offset }) => [\n      start ? calloutFn({ item: start, offset, scales }) : undefined,\n      end ? calloutFn({ item: end, offset, scales, isEnd: true }) : undefined,\n    ];\n\n    const calloutsSvgData = annotations.flatMap(calloutsFn).filter(Boolean);\n\n    const callout = d3annotation()\n      .annotations(calloutsSvgData)\n      .type(d3annotationCalloutCircle);\n\n    d3.select(calloutsRef.current).call(callout);\n\n    const newRegions = annotations.map(regionFn).filter(Boolean);\n    setRegions(newRegions);\n  }, [annotations, currentStart, rectWidth, scales]);\n\n  return (\n    <>\n      <defs>\n        <clipPath id=\"clippath\">\n          <path d={clipPaths.current} />\n          <path d={clipPaths.previous} />\n        </clipPath>\n      </defs>\n      <g ref={regionsRef}>\n        {regions.map((annotation) => (\n          <rect {...annotation} clipPath=\"url(#clippath)\" />\n        ))}\n      </g>\n      <g className={styles.annotations} ref={calloutsRef} />\n    </>\n  );\n};\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\nimport {\n  getTweetsForArea,\n  getTweetsByArea,\n  getHistory,\n  getAnnotations,\n  getTweetsActive24,\n  getTweetsMajor,\n  getTweetsForAreaMin,\n  getTweetsForAreaMinWeek,\n} from \"../api\";\n\nimport { StatusContext } from \"./StatusContext\";\nconst deepEqual = require(\"fast-deep-equal/es6/react\");\n\nexport const DataContext = createContext();\n\nexport const currentInterval = (dataset) => dataset[0].intervals[0];\nexport const previousInterval = (dataset) => dataset[0].intervals[1];\n\nconst useTweets = (filters = {}) => {\n  const initialValue = {\n    filteredByArea: [],\n    filteredByAreaMin: [],\n    filteredByAreaMinWeek: [],\n    activeOrMajorForArea: [],\n    activeOrMajorByArea: [],\n    groupedByArea: [],\n    history: [],\n    active24: [],\n    major24: [],\n    annotations: [],\n    status: {},\n  };\n  const [value, setValue] = useState(initialValue);\n  const { status, previousStatus } = useContext(StatusContext);\n  const mostRecentId = previousStatus.mostRecentId\n    ? status.mostRecentId\n    : undefined;\n\n  if (mostRecentId) {\n    console.log(`useTweets/mostRecentId: ${mostRecentId}`);\n  }\n\n  const [filteredByArea, setFilteredByArea] = useState([]);\n  const [filteredByAreaMin, setFilteredByAreaMin] = useState([]);\n  const [filteredByAreaMinWeek, setFilteredByAreaMinWeek] = useState([]);\n  const [activeOrMajorForArea, setActiveOrMajorForArea] = useState([]);\n  const [activeOrMajorByArea, setActiveOrMajorByArea] = useState([]);\n  const [groupedByArea, setGroupedByArea] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [active24, setActive24] = useState([]);\n  const [major24, setMajor24] = useState([]);\n  const [annotations, setAnnotations] = useState([]);\n\n  const [shouldFetch, setShouldFetch] = useState(true);\n\n  useEffect(() => {\n    if (!deepEqual(status, previousStatus)) {\n      setShouldFetch(true);\n    }\n  }, [status, previousStatus]);\n\n  useEffect(() => {\n    if (!shouldFetch) {\n      console.log(\"PROVIDER/not fetching\");\n      return;\n    }\n    console.log(\"🟢 PROVIDER/fetching all data\");\n    setShouldFetch(false);\n\n    const area = filters.area || \"seattle\";\n\n    console.log(\"PROVIDER/filters.area=\", area);\n    if (area === \"seattle\") {\n      (async () => {\n        setFilteredByAreaMin(await getTweetsForAreaMin(area));\n        setFilteredByAreaMinWeek(await getTweetsForAreaMinWeek(area));\n      })();\n    }\n\n    (async () => {\n      setFilteredByArea(await getTweetsForArea(area));\n    })();\n\n    (async () => {\n      setActiveOrMajorForArea(\n        await getTweetsForArea(area, { activeOrMajor: true })\n      );\n    })();\n\n    (async () => {\n      const response = await getTweetsActive24();\n      setActive24(response[0].intervals[0].values);\n    })();\n\n    (async () => {\n      const response = await getTweetsMajor();\n      setMajor24(response[0].intervals[0].values);\n    })();\n\n    (async () => {\n      setGroupedByArea(await getTweetsByArea());\n    })();\n\n    (async () => {\n      setActiveOrMajorByArea(await getTweetsByArea({ activeOrMajor: true }));\n    })();\n\n    (async () => {\n      setAnnotations(await getAnnotations());\n    })();\n\n    if (!history.length) {\n      (async () => {\n        setHistory(await getHistory(area));\n      })();\n    }\n  }, [filters.area, history.length, mostRecentId, shouldFetch]);\n\n  useEffect(() => {\n    setValue({\n      filteredByArea,\n      filteredByAreaMin,\n      filteredByAreaMinWeek,\n      groupedByArea,\n      history,\n      annotations,\n      active24,\n      major24,\n      activeOrMajorForArea,\n      activeOrMajorByArea,\n      status,\n    });\n  }, [\n    active24,\n    activeOrMajorByArea,\n    activeOrMajorForArea,\n    annotations,\n    filteredByArea,\n    filteredByAreaMin,\n    filteredByAreaMinWeek,\n    groupedByArea,\n    history,\n    major24,\n    status,\n  ]);\n\n  return value;\n};\n\nexport const DataProvider = ({ filters, children }) => {\n  const value = useTweets(filters);\n  return <DataContext.Provider value={value}>{children}</DataContext.Provider>;\n};\n","import React, { useState, createContext, useEffect } from \"react\";\n\nexport const UserContext = createContext();\n\nexport const UserContextKeys = {\n  SelectedTweet: \"SelectedTweet\",\n  TypeFilter: \"TypeFilter\",\n};\n\nconst useUser = () => {\n  const [user, setUser] = useState({});\n\n  const setSelection = (key, value) => {\n    console.log(`USER: ${key} -->`, value);\n    setUser({ ...user, [key]: value });\n  };\n\n  useEffect(()=>{console.log('USER/useEffect')},[]);\n\n  return { user, setSelection };\n};\n\nexport const UserProvider = ({ children }) => {\n  return (\n    <UserContext.Provider value={useUser()}>{children}</UserContext.Provider>\n  );\n};\n","export const mapOptions = (theme, resolution = \"@2x\") => ({\n  url: `/api/dispatch/maps/{s}/{x}/{y}/{z}/{r}/${theme}`,\n  r: resolution,\n  attribution:\n    '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\">&copy; jawg maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">openstreetmap</a> contributors',\n});\n","import React, { useContext } from \"react\";\nimport { Map as LeafletMap, TileLayer, GeoJSON } from \"react-leaflet\";\nimport { MapDot, Appearance } from \"./MapDot\";\nimport { DataContext, currentInterval } from \"./DataProvider\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\nimport { ThemeContext } from \"./ThemeContext\";\nimport { mapOptions } from \"./mapOptions\";\nimport { centroid, areas, cityGeojson, mapBounds } from \"./geojson\";\nimport classnames from \"classnames\";\nimport { isPhone, getStyleProp } from \"../clientUtils\";\nimport \"./leaflet.scss\";\nimport styles from \"./map.module.scss\";\n\nconst minZoom = 10,\n  maxZoom = 13,\n  defaultZoom = 11;\n\nexport const Map = ({ area }) => {\n  const { user } = useContext(UserContext);\n  const { filteredByArea } = useContext(DataContext);\n  const { theme } = useContext(ThemeContext);\n\n  if (!filteredByArea.length) {\n    // console.log(\"MAP/no data\");\n    return null;\n  }\n\n  const geoColor = getStyleProp(\"--geo\");\n  const geoBoundsColor = getStyleProp(\"--geo-bounds\");\n\n  const geojsonStyleBounds = {\n    color: geoBoundsColor,\n    fillOpacity: 0,\n    strokeOpacity: 0.5,\n    weight: 4,\n  };\n  const geojsonStyleActive = {\n    color: geoColor,\n    fillColor: geoColor,\n    fillOpacity: 0.1,\n    strokeOpacity: 0.5,\n    weight: 2,\n  };\n\n  const { geojson, areaProp } = areas;\n\n  const typeFilter = user[UserContextKeys.TypeFilter];\n  const selectedTweet = user[UserContextKeys.SelectedTweet];\n\n  const renderFilter = ({ properties }) =>\n    area && properties[areaProp] === area;\n\n  const { features } = geojson;\n  const rendered = features.filter(renderFilter);\n\n  let zoom = defaultZoom;\n  if (area) {\n    zoom = defaultZoom + 1;\n  }\n  if (selectedTweet && selectedTweet.derived.lat) {\n    zoom = maxZoom;\n  }\n\n  const center =\n    selectedTweet && selectedTweet.derived.lat\n      ? [selectedTweet.derived.lat, selectedTweet.derived.long]\n      : area\n      ? centroid(rendered)\n      : centroid(cityGeojson.features);\n\n  const mapper = ({\n    id_str,\n    derived: { lat, long, type, color, active, severity },\n  }) => ({\n    id_str,\n    lat,\n    long,\n    type,\n    color, // TODO - do not use\n    active,\n    severity,\n  });\n\n  const isSelectedDot = ({ id_str }) => selectedTweet.id_str === id_str;\n\n  // const importantOnTop = (a, b) => { return 0; }; // TODO\n\n  const interval = currentInterval(filteredByArea);\n  let data = interval.values\n    .map(mapper)\n    .filter(({ type }) => !typeFilter || typeFilter === type);\n  // .sort(importantOnTop);\n\n  if (selectedTweet) {\n    // Render selected dot last, so it appears on top\n    const selectedIndex = data.findIndex(isSelectedDot);\n\n    data =\n      selectedIndex === -1\n        ? []\n        : [\n            ...data.slice(0, selectedIndex),\n            ...data.slice(selectedIndex + 1),\n            data[selectedIndex],\n          ];\n  }\n\n  const appearanceFn = (d) => {\n    return selectedTweet\n      ? isSelectedDot(d)\n        ? Appearance.Highlighted\n        : Appearance.Dimmed\n      : Appearance.Normal;\n  };\n\n  // console.log(\n  //   `MAP/render area=${area || \"-\"}, zoom=${zoom}, selected:${\n  //     (selectedTweet || {}).id_str || \"-\"\n  //   }, features:${rendered.length}/${features.length}, dots:${\n  //     data.length\n  //   }, geo:${rendered.length}`\n  // );\n  const phone = isPhone();\n  const resolution = phone && zoom < 12 ? \"@1x\" : \"@2x\";\n  const tileOptions = mapOptions(theme, resolution);\n  const city = cityGeojson.features[0];\n\n  return (\n    <LeafletMap\n      className={classnames(styles.container, {\n        [styles.area]: area,\n        [styles.phone]: phone,\n      })}\n      center={center}\n      zoom={zoom}\n      minZoom={minZoom}\n      maxZoom={maxZoom}\n      maxBounds={mapBounds}\n      maxBoundsViscosity={0.6}\n      zoomControl={false}\n    >\n      <TileLayer {...tileOptions} />\n      {!area && <GeoJSON data={city} style={geojsonStyleBounds} />}\n      {rendered.map((feature) => (\n        <GeoJSON\n          key={feature.properties.CRA_NAM}\n          data={feature}\n          style={geojsonStyleActive}\n        />\n      ))}\n      {data.map((d) => (\n        <MapDot // TODO - group under a single container?\n          key={d.id_str}\n          coordinates={[d.lat, d.long]}\n          severity={d.severity}\n          appearance={appearanceFn(d)}\n          active={d.active}\n        />\n      ))}\n    </LeafletMap>\n  );\n};\n","import React from \"react\";\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"ErrorBoundary\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n","import React, { useContext } from \"react\";\nimport { Map as LeafletMap, TileLayer, GeoJSON } from \"react-leaflet\";\nimport { featuresForArea, centroid } from \"./geojson\";\nimport { mapOptions } from \"./mapOptions\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { isPhone, getStyleProp } from \"../clientUtils\";\nimport classnames from \"classnames\";\nimport styles from \"./areashape.module.scss\";\nimport { ThemeContext } from \"./ThemeContext\";\n\nexport const AreaShape = ({ area }) => {\n  const { theme } = useContext(ThemeContext);\n  const features = featuresForArea(area);\n  if (!features || !features.length) {\n    console.warn(\"AreaShape/no features for area\", area);\n    return null;\n  }\n\n  const geoColor = getStyleProp(\"--geo\");\n\n  const geojsonStyle = {\n    color: geoColor,\n    fillColor: geoColor,\n    fillOpacity: 0.1,\n    weight: 2,\n  };\n\n  const center = centroid(features);\n  const zoom = 10;\n  const tileOptions = mapOptions(theme, \"@1x\");\n\n  return (\n    <ErrorBoundary>\n      <LeafletMap\n        className={classnames(styles.container, { [styles.phone]: isPhone() })}\n        center={center}\n        zoom={zoom}\n        minZoom={zoom}\n        maxZoom={zoom}\n        zoomControl={false}\n        attributionControl={false}\n        dragging={false}\n        keyboard={false}\n      >\n        <TileLayer {...tileOptions} />\n        <GeoJSON data={features} style={geojsonStyle} />\n      </LeafletMap>\n    </ErrorBoundary>\n  );\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport svgStyles from \"./svg.module.scss\";\n\nexport const SvgDot = ({ radius = 0, active = false, sev1 = false, sev2 = false }) => {\n  const size = 20,\n    sev1Radius = 6.5,\n    sev2Radius = 9;\n  const baseRadius = radius || (4);\n\n  return (\n    <svg\n      className={classnames(svgStyles.container, { [svgStyles.live]: active })}\n      width={size}\n      height={size}\n    >\n      <circle className={svgStyles.event} cx={size / 2} cy={size / 2} r={baseRadius} />\n      {(sev1 || sev2) && (\n        <circle className={svgStyles.outer}\n          cx={size / 2}\n          cy={size / 2}\n          r={sev1Radius}\n          fill=\"none\"\n        />\n      )}\n      {sev2 && (\n        <circle className={svgStyles.outer}\n          cx={size / 2}\n          cy={size / 2}\n          r={sev2Radius}\n          fill=\"none\"\n        />\n      )}\n    </svg>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport classnames from \"classnames\";\nimport * as d3 from \"d3\";\nimport sparkStyles from \"./spark.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\nimport { intervalExtent, isPhone } from \"../clientUtils\";\n\nexport const Spark = ({\n  intervals = [],\n  title,\n  showTotal,\n  useCumulative,\n  showPrevious,\n}) => {\n  const [svgData, setSvgData] = useState([]);\n  const [nowDot, setNowDot] = useState(null);\n\n  const radius = 3;\n  const svgWidth = isPhone() ? 90 : 120;\n  const svgHeight = 0.2 * svgWidth,\n    margin = {\n      top: radius + 1,\n      right: radius + 1,\n      bottom: radius + 1,\n      left: radius + 1,\n    },\n    width = svgWidth - margin.left - margin.right,\n    height = svgHeight - margin.bottom - margin.top;\n\n  useEffect(() => {\n    // TODO - no need for useEffect?\n    if (!intervals.length) {\n      return;\n    }\n\n    const data = showPrevious ? intervals : intervals.slice(0, 1);\n\n    const accessor = ({ length, cumulative }) =>\n      useCumulative ? cumulative : length;\n\n    const xExtent = intervalExtent(data[0]);\n\n    const yExtent = [\n      0,\n      d3.max([1.0, ...data.flatMap(({ bins }) => bins).map(accessor)]),\n    ];\n\n    const xScale = d3.scaleTime().domain(xExtent).range([0, width]);\n    const yScale = d3.scaleLinear().domain(yExtent).range([height, 0]);\n\n    const line = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(d.x0))\n      .y((d) => yScale(accessor(d)));\n\n    const paths = data.map((d) => d.bins).map(line);\n\n    let newSvgData = paths.map((path, i) => ({ path, key: i })).reverse(); // render highlight after all others\n\n    setSvgData(newSvgData);\n\n    const bins = data[0].bins;\n    if (bins.length) {\n      const lastBin = bins[bins.length - 1];\n      setNowDot({\n        cx: xScale(lastBin.x0),\n        cy: yScale(accessor(lastBin)),\n        r: radius,\n      });\n    }\n  }, [width, height, intervals, showPrevious, useCumulative]);\n\n  if (!intervals.length) {\n    return null;\n  }\n\n  const total = intervals[0].total;\n  const lastIndex = svgData.length - 1;\n\n  return (\n    <div className={sparkStyles.container}>\n      <svg width={svgWidth} height={svgHeight}>\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <g>\n            {svgData.map(({path,key}, i) => (\n              <path\n              key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: i === lastIndex,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          {nowDot && (\n            <g className={svgStyles.now}>\n              <circle {...nowDot} />\n            </g>\n          )}\n        </g>\n      </svg>\n      {showTotal && <span className={sparkStyles.total}>{total}</span>}\n    </div>\n  );\n};\n","import { useState, useEffect, useContext } from 'react';\nimport { DataContext } from './DataProvider';\nimport { featuresForArea } from \"./geojson\";\n\nexport const useNeighborhoods = () => {\n  const [map, setMap] = useState({});\n\n  const { groupedByArea } = useContext(DataContext);\n\n  useEffect(() => {\n    const newMap = {};\n    groupedByArea\n      .map(({ key }) => key)\n      .forEach((key) => {\n        newMap[key] = featuresForArea(key)\n          .map(({ properties: { CRA_NAM } }) => CRA_NAM)\n          .sort();\n      });\n\n      setMap(newMap);\n  }, [groupedByArea]);\n\n  return map;\n}","import React, { useContext, useState, useEffect } from \"react\";\nimport { Link } from \"@reach/router\";\nimport { DataContext } from \"./DataProvider\";\nimport { AreaShape } from \"./AreaShape\";\n\nimport { isActive, isExactlySev2, isExactlySev1, isPhone } from \"../clientUtils\";\nimport { SvgDot } from \"./SvgDot\";\nimport { Spark } from \"./Spark\";\nimport classnames from \"classnames\";\nimport styles from \"./group.module.scss\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { useNeighborhoods } from \"./neighborhoods\";\n\nexport const GroupByArea = () => {\n  const { groupedByArea, activeOrMajorByArea } = useContext(DataContext);\n  const [totalsMap, setTotalsMap] = useState({});\n  const [data, setData] = useState([]);\n  const neighborhoodsMap = useNeighborhoods();\n  const phone = isPhone();\n\n  useEffect(() => {\n    if (!activeOrMajorByArea.length) {\n      return;\n    }\n\n    const map = {};\n    activeOrMajorByArea.forEach(({ key: area, intervals }) => {\n      const values = intervals[0].values;\n      if (values.length) {\n        map[area] = {\n          active: values.filter(isActive).length,\n          sev1: values.filter(isExactlySev1).length,\n          sev2: values.filter(isExactlySev2).length,\n        };\n      }\n    });\n    setTotalsMap(map);\n  }, [activeOrMajorByArea]);\n\n  useEffect(() => {\n    if (!groupedByArea.length || !totalsMap) {\n      return;\n    }\n\n    const sortByImportance = (\n      { key: areaA, intervals: intervalsA },\n      { key: areaB, intervals: intervalsB }\n    ) => {\n      const { active: activeA, sev1: sev1A, sev2: sev2A } = totalsMap[\n        areaA\n      ] || { active: 0, sev1: 0, sev2: 0 };\n      const { active: activeB, sev1: sev1B, sev2: sev2B } = totalsMap[\n        areaB\n      ] || { active: 0, sev1: 0, sev2: 0 };\n      const totalA = intervalsA[0].total;\n      const totalB = intervalsB[0].total;\n\n      return (\n        activeB - activeA || sev2B - sev2A || sev1B - sev1A || totalB - totalA\n      );\n    };\n    const sortedData = groupedByArea.sort(sortByImportance);\n    setData(sortedData);\n  }, [groupedByArea, totalsMap]);\n\n  if (!data.length) {\n    return null;\n  }\n\n  return (\n    <div className={styles.container}>\n      {data.map(({ key: area, intervals }) => (\n        <div key={area} className={styles.itemContainer}>\n          <Link to={`${encodeURIComponent(area)}`}>\n            <div className={styles.vpadding}>\n              <div className={styles.fullWidth}>\n                <div className={styles.item}>&nbsp;</div>\n                <div className={classnames(styles.item, styles.right)}>\n                  {totalsMap[area] && (\n                    <div className={styles.major}>\n                      {totalsMap[area].active > 0 && (\n                        <span className={styles.active}>\n                          <SvgDot active={true} />\n                          <span>{totalsMap[area].active} </span>\n                        </span>\n                      )}\n                      {totalsMap[area].sev1 > 0 && (\n                        <>\n                          <SvgDot sev1={true} />\n                          <span> {totalsMap[area].sev1} </span>\n                        </>\n                      )}\n                      {totalsMap[area].sev2 > 0 && (\n                        <>\n                          <SvgDot sev2={true} />\n                          <span> {totalsMap[area].sev2} </span>\n                        </>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className={classnames(styles.item, styles.text, {[styles.phone]:phone})}>\n                <div className={styles.area}>{area}</div>\n                {neighborhoodsMap[area] && (\n                  <div className={classnames(styles.list)}>\n                    {neighborhoodsMap[area].map((v) => (\n                      <div key={v}>• {v}</div>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              <div className={classnames(styles.item, styles.right)}>\n                <AreaShape area={area} />\n                <ErrorBoundary>\n                  <Spark\n                    className={styles.spark}\n                    intervals={intervals}\n                    useCumulative={true}\n                    showTotal={true}\n                  />\n                </ErrorBoundary>\n              </div>\n            </div>\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport * as d3 from \"d3\";\nimport chartStyles from \"./chart.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\nimport { intervalExtent, timeFormatterHourAM, isPhone, every6Hours } from \"../clientUtils\";\n\nexport const MultiLine = ({\n  intervals = [],\n  title,\n  showHeader = false,\n  useCumulative,\n}) => {\n  const [svgData, setSvgData] = useState([]);\n  const [nowDot, setNowDot] = useState(null);\n\n  const svgWidth = isPhone() ? 350 : 500;\n  const svgHeight = 0.3 * svgWidth,\n    margin = { top: 20, right: 20, bottom: 20, left: 20 },\n    width = svgWidth - margin.left - margin.right,\n    height = svgHeight - margin.bottom - margin.top;\n\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n\n  useEffect(() => {\n    // TODO - no need for useEffect?\n    if (!intervals.length) {\n      return;\n    }\n\n    const accessor = ({ length, cumulative }) =>\n      useCumulative ? cumulative : length;\n\n    const currentInterval = intervals[0];\n    const xExtent = intervalExtent(currentInterval);\n    const yExtent = [\n      0,\n      d3.max([1.0, ...intervals.flatMap(({ bins }) => bins).map(accessor)]),\n    ];\n\n    const xScale = d3.scaleTime().domain(xExtent).range([0, width]);\n    const xAxis = d3\n      .axisBottom()\n      .scale(xScale)\n      .tickValues(every6Hours(currentInterval.start))\n      .tickFormat(timeFormatterHourAM)\n      .tickSize(3);\n    d3.select(xAxisRef.current).call(xAxis);\n\n    const yScale = d3.scaleLinear().domain(yExtent).range([height, 0]);\n    const yAxis = d3.axisLeft().scale(yScale).ticks(2);\n    d3.select(yAxisRef.current).call(yAxis);\n\n    const line = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(d.x0))\n      .y((d) => yScale(accessor(d)));\n\n    const paths = intervals.map((d) => d.bins).map(line);\n\n    let newSvgData = paths.map((path, i) => ({ path, key: i })).reverse(); // render highlight after all others\n\n    setSvgData(newSvgData);\n\n    const bins = intervals[0].bins;\n    if (bins.length) {\n      const lastBin = bins[bins.length - 1];\n      setNowDot({\n        cx: xScale(lastBin.x0),\n        cy: yScale(accessor(lastBin)),\n        r: 3,\n      });\n    }\n  }, [height, intervals, useCumulative, width]);\n\n  if (!intervals.length) {\n    return null;\n  }\n\n  const total = intervals[0].total;\n  const lastIndex = svgData.length - 1;\n\n  return (\n    <div className={chartStyles.container}>\n      {showHeader && (\n        <div className={chartStyles.header}>\n          {title && <div className={chartStyles.title}>{title}</div>}\n          {typeof total === \"number\" && (\n            <div className={chartStyles.total}>{total}</div>\n          )}\n        </div>\n      )}\n      <svg className={chartStyles.chart} width={svgWidth} height={svgHeight}>\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          <g\n            className={svgStyles.axis}\n            ref={xAxisRef}\n            transform={`translate(0,${height})`}\n          />\n          <g className={svgStyles.axis} ref={yAxisRef} />\n          <g>\n            {svgData.map(({path, key}, i) => (\n              <path\n                key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: i === lastIndex,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          {nowDot && (\n            <g className={svgStyles.now}>\n              <circle {...nowDot} />\n            </g>\n          )}\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\nimport { MultiLine } from \"./MultiLine\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\n\nexport const Header = ({ area }) => {\n  const { filteredByAreaMinWeek } = useContext(DataContext);\n\n  if (!filteredByAreaMinWeek.length) {\n    return null;\n  }\n\n  return (\n    <ErrorBoundary>\n      <MultiLine\n        intervals={filteredByAreaMinWeek[0].intervals}\n        useCumulative={!!area}\n      />\n    </ErrorBoundary>\n  );\n};\n","import React from \"react\";\nimport { timeFormatterMonthDay } from \"../clientUtils\";\nimport styles from \"./topline.module.scss\";\nimport { isPhone } from \"../clientUtils\";\nimport classnames from \"classnames\";\n\nexport const Topline = ({ total, text }) => {\n  const isDefined = typeof total === \"number\";\n  const totalContent = isDefined ? total : \"⋯\";\n  const totalElement = <div className={styles.total}>{totalContent}</div>;\n  const phone = isPhone();\n\n  return (\n    <div className={classnames(styles.topline, {[styles.phone]: phone})}>\n      {text && <div className={styles.text}>{text}</div>}\n      {totalElement}\n      <div className={styles.date}>{timeFormatterMonthDay(new Date())}</div>\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { axisRadialInner } from \"d3-radial-axis\";\nimport { DataContext, currentInterval } from \"./DataProvider\";\nimport {\n  intervalExtent,\n  timeFormatterHourAM,\n  every6Hours,\n  isPhone,\n} from \"../clientUtils\";\nimport { Topline } from \"./Topline\";\nimport classnames from \"classnames\";\nimport styles from \"./rehoboam.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nexport const Rehoboam = ({ area }) => {\n  const { filteredByAreaMin, activeOrMajorForArea } = useContext(DataContext);\n  const [svgPath, setSvgPath] = useState(null);\n  const [circles, setCircles] = useState([]);\n  const [total, setTotal] = useState(undefined);\n  const axisRef = useRef(null);\n\n  const mainRadius = isPhone() ? 100 : 130;\n  const margin = 30,\n    width = 2 * mainRadius,\n    height = 2 * mainRadius,\n    svgWidth = width + 2 * margin,\n    svgHeight = height + 2 * margin;\n\n  const dotRadius = 5;\n\n  useEffect(() => {\n    if (!filteredByAreaMin.length) {\n      return;\n    }\n\n    setTotal(currentInterval(filteredByAreaMin).total); // TODO - use status\n\n    const current = currentInterval(filteredByAreaMin);\n    const bins = current.binsHiRes;\n    const extent = intervalExtent(current);\n    const maxDisturbance = 20;\n    const maxLength = d3.max(bins, ({ length }) => length);\n    const [start, end] = extent;\n\n    const toRadial = (timestamp, length) => {\n      const fraction = (timestamp - start) / (end - start);\n      const radians = 2 * Math.PI * fraction;\n      const disturbance = maxLength ? maxDisturbance * (length / maxLength) : 0;\n      return [radians, mainRadius + disturbance];\n    };\n\n    const radialData = bins.map(({ x0, length }) => toRadial(x0, length));\n    const radialGen = d3.lineRadial().curve(d3.curveCardinal.tension(0.4));\n    const path = radialGen(radialData);\n    setSvgPath(path);\n\n    const angleScale = d3\n      .scaleLinear()\n      .domain(extent)\n      .range([0, 2 * Math.PI]);\n\n    const axis = axisRadialInner(angleScale, mainRadius)\n      .tickFormat(timeFormatterHourAM)\n      .tickSize(0)\n      .tickValues(every6Hours(current.start));\n    d3.select(axisRef.current).call(axis);\n\n    if (activeOrMajorForArea.length) {\n      const toRadialDot = ({ derived: { timestamp } }) => {\n        const fraction = (timestamp - start) / (end - start);\n        const radians = 2 * Math.PI * fraction;\n        return [radians, mainRadius];\n      };\n\n      const activeOrMajorValues = currentInterval(activeOrMajorForArea).values;\n\n      const radialDots = activeOrMajorValues.map(toRadialDot);\n\n      const newCircles = radialDots.map(([theta, r], i) => {\n        const {\n          derived: { severity, active },\n        } = activeOrMajorValues[i];\n        return {\n          key: i,\n          cx: r * Math.sin(theta),\n          cy: r * -Math.cos(theta),\n          r: dotRadius,\n          sev1: severity >= 1,\n          sev2: severity >= 2,\n          active,\n        };\n      });\n\n      setCircles(newCircles);\n    }\n  }, [activeOrMajorForArea, filteredByAreaMin, mainRadius]);\n\n  const text = area || \"Seattle\";\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.counter}>\n        <Topline total={total} text={text} />\n      </div>\n      <svg className={styles.svg} width={svgWidth} height={svgHeight}>\n        <g\n          transform={`translate(${margin + mainRadius},${margin + mainRadius})`}\n        >\n          <g className={svgStyles.axis} ref={axisRef} />\n          <circle className={styles.maincircle} cx={0} cy={0} r={mainRadius} />\n          {svgPath && <path className={classnames(styles.path)} d={svgPath} />}\n          <g className={styles.events}>\n            {circles.map(({ key, cx, cy, r, sev1, sev2, active }) => (\n              <g key={key} className={classnames({ [svgStyles.live]: active })}>\n                <circle\n                  className={classnames(svgStyles.event)}\n                  cx={cx}\n                  cy={cy}\n                  r={r}\n                />\n                {sev1 && (\n                  <circle className={classnames(styles.outer, svgStyles.outer)} cx={cx} cy={cy} r={r + 3} />\n                )}\n                {sev2 && (\n                  <circle className={classnames(styles.outer, svgStyles.outer)} cx={cx} cy={cy} r={r + 6} />\n                )}\n              </g>\n            ))}\n          </g>\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React from \"react\";\nimport styles from \"./section.module.scss\";\nimport classnames from \"classnames\";\nimport { isPhone } from \"../clientUtils\";\n\nexport const Section = ({ children, styleOption = 0, edgeToEdge = false }) => {\n  const style = styleOption ? styles[`style${styleOption}`] : styles.styleDefault;\n    \n  return (\n    <section className={classnames(styles.section, style)}>\n      <div\n        className={classnames(styles.content, {\n          [styles.phone]: isPhone(),\n        })}\n      >\n        <div\n          className={classnames(styles.subcontent, {\n            [styles.edgeToEdge]: edgeToEdge,\n          })}\n        >\n          {children}\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React from \"react\";\nimport styles from \"./paragraph.module.scss\";\nimport classnames from \"classnames\";\n\nexport const Paragraph = ({ h1, title, content, margin = false }) => {\n  return (\n    <div className={classnames(styles.paragraph, { [styles.margin]: margin })}>\n      {h1 && <h1>{h1}</h1>}\n      {title && <h3>{title}</h3>}\n      {content && <div className={styles.text}>{content}</div>}\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport classnames from \"classnames\";\nimport svgStyles from \"./svg.module.scss\";\n\nimport { DataContext, currentInterval, previousInterval } from \"./DataProvider\";\n\nexport const HistoryEvents = ({ scales, dayHeight = 4 }) => {\n  const { history } = useContext(DataContext);\n  const [circles, setCircles] = useState([]);\n\n  useEffect(() => {\n    if (!history.length || !scales.length) {\n      return;\n    }\n    const intervalCurrent = currentInterval(history);\n    const intervalPrevious = previousInterval(history);\n    const binsCurrent = intervalCurrent.binsLowRes;\n    const binsPrevious = intervalPrevious.binsLowRes;\n    const [, yScale] = scales;\n\n    const radius = dayHeight / 2 + 2;\n    const filter = ({ sev2 }) => sev2 > 0;\n    const mapper = ({ x0, sev2 }) => ({ timestamp: x0, count: sev2 });\n    const stack = ({ timestamp, count }) =>\n      [...new Array(count)].map((_, index) => ({ timestamp, index }));\n    const sev2Current = binsCurrent.filter(filter).map(mapper).flatMap(stack);\n    const sev2Previous = binsPrevious.filter(filter).map(mapper).flatMap(stack);\n\n    const toCirclesGen = (side) => ({ timestamp, index }) => ({\n      key: `${timestamp}-${index}-${side}`,\n      cx: side * (index + 0.75) * 2 * radius,\n      cy: yScale(timestamp),\n      r: radius,\n      isCurrent: side === 1,\n    });\n    const toCirclesCurrent = toCirclesGen(1);\n    const toCirclesPrevious = toCirclesGen(-1);\n\n    const circlesCurrent = sev2Current.map(toCirclesCurrent);\n    const circlesPrevious = sev2Previous.map(toCirclesPrevious);\n\n    const newCircles = [...circlesPrevious, ...circlesCurrent];\n    setCircles(newCircles);\n  }, [dayHeight, history, scales]);\n\n  return (\n    <g>\n      {circles.map(({ key, cx, cy, r, isCurrent }) => (\n        <g\n          key={key}\n          className={classnames({\n            [svgStyles.current]: isCurrent,\n            [svgStyles.previous]: !isCurrent,\n          })}\n        >\n          <circle cx={cx} cy={cy} r={r} />\n        </g>\n      ))}\n    </g>\n  );\n};\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport classnames from \"classnames\";\n\nimport { DataContext, currentInterval as getCurrentInterval, previousInterval as getPreviousInterval } from \"./DataProvider\";\nimport { intervalExtent as getIntervalExtent, isPhone, timeFormatterMonth, everyMonth } from \"../clientUtils\";\nimport { Annotations } from \"./Annotations\";\nimport { HistoryEvents } from \"./HistoryEvents\";\nimport historyStyles from \"./history.module.scss\";\nimport svgStyles from \"./svg.module.scss\";\n\nconst closedPath = (bins, line, offset) => {\n  if (!bins.length) {\n    return \"\";\n  }\n\n  let data = bins.map(({ x0, length }) => ({\n    timestamp: x0,\n    value: length + offset,\n  }));\n\n  const first = data[0],\n    last = data[data.length - 1];\n  const extraBottom = { timestamp: last.timestamp, value: 10000 };\n  const extraTop = { timestamp: first.timestamp, value: 10000 };\n\n  data = [...data, extraBottom, extraTop, first];\n  return line(data);\n};\n\nexport const History = () => {\n  const { history } = useContext(DataContext);\n  // const [svgData, setSvgData] = useState([]);\n  const [scales, setScales] = useState([]);\n  const [currentStart, setCurrentStart] = useState([]);\n  const [paths, setPaths] = useState([]);\n  const [clipPaths, setClipPaths] = useState({});\n\n  const dayHeight = 3.5;\n  const width = isPhone() ? 360 : 500, // TODO - use screen width\n    margin = { top: 20, right: 0, bottom: 20, left: 0 },\n    height = 365 * dayHeight,\n    svgHeight = height + margin.top + margin.bottom,\n    svgWidth = width + margin.left + margin.right;\n  const yearWidth = width / 2;\n  const maxBarWidth = yearWidth * 0.4;\n  const annotationRectWidth = yearWidth * 0.45;\n\n  const svgRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n\n  useEffect(() => {\n    if (!history.length) {\n      return;\n    }\n\n    const intervalCurrent = getCurrentInterval(history);\n    setCurrentStart(intervalCurrent.start);\n    const intervalPrevious = getPreviousInterval(history);\n    const binsCurrent = intervalCurrent.binsLowRes;\n    const binsPrevious = intervalPrevious.binsLowRes;\n    const timeExtent = getIntervalExtent(intervalCurrent);\n\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(binsCurrent, (b) => b.length)])\n      .range([0, maxBarWidth]);\n\n    const yScale = d3.scaleTime().domain(timeExtent).range([0, height]);\n\n    setScales([xScale, yScale]);\n\n    const yAxis = d3\n      .axisLeft()\n      .scale(yScale)\n      .tickValues(everyMonth(intervalCurrent.start))\n      .tickFormat(timeFormatterMonth)\n      .tickSize(0);\n    d3.select(yAxisRef.current).call(yAxis);\n\n    const xAxis = d3.axisBottom().scale(xScale).ticks(2);\n    d3.select(xAxisRef.current).call(xAxis);\n\n    // const currentYear = binsCurrent.map(({ x0, length }) => ({\n    //   x: xScale(0),\n    //   width: xScale(length),\n    //   y: yScale(x0),\n    //   height: binHeight,\n    //   rx: 1,\n    // }));\n    // const previousYear = binsPrevious.map(({ x0, length }) => ({\n    //   x: xScale(0) - xScale(length),\n    //   width: xScale(length),\n    //   y: yScale(x0),\n    //   height: binHeight,\n    //   rx: 1,\n    // }));\n    // setSvgData([currentYear, previousYear]);\n\n    const lineCurrent = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(d.length))\n      .y((d) => yScale(d.x0));\n    const linePrevious = d3\n      .line()\n      .curve(d3.curveCardinal.tension(0.3))\n      .x((d) => xScale(-d.length))\n      .y((d) => yScale(d.x0));\n\n    const pathCurrent = lineCurrent(binsCurrent);\n    const pathPrevious = linePrevious(binsPrevious);\n    setPaths([\n      { path: pathCurrent, key: \"current\" },\n      { path: pathPrevious, key: \"previous\" },\n    ]);\n\n    const clipLineCurrent = d3\n      .line()\n      .x((d) => xScale(d.value))\n      .y((d) => yScale(d.timestamp));\n\n    const clipLinePrevious = d3\n      .line()\n      .x((d) => xScale(-d.value))\n      .y((d) => yScale(d.timestamp));\n\n    const pixelOffset = xScale.invert(2) - xScale.invert(0);\n    const clipPathCurrent = closedPath(\n      binsCurrent,\n      clipLineCurrent,\n      pixelOffset\n    );\n    const clipPathPrevious = closedPath(\n      binsPrevious,\n      clipLinePrevious,\n      pixelOffset\n    );\n\n    setClipPaths({ current: clipPathCurrent, previous: clipPathPrevious });\n  }, [history, height, maxBarWidth]);\n\n  // console.log(\"HISTORY/render\");\n\n  return (\n    <div className={historyStyles.container}>\n      <div className={historyStyles.years}>\n        <div className={historyStyles.left}>2019</div>\n        <div className={historyStyles.right}>2020</div>\n      </div>\n      <svg\n        className={historyStyles.svg}\n        ref={svgRef}\n        width={svgWidth}\n        height={svgHeight}\n      >\n        <g transform={`translate(${margin.left + yearWidth},${margin.top})`}>\n          {/* <g>\n            {svgData.map((dataset, iDataset) =>\n              dataset.map((d) => (\n                <rect\n                  className={classnames({\n                    [historyStyles.previous]: iDataset,\n                    [historyStyles.current]: !iDataset,\n                  })}\n                  x={d.x}\n                  y={d.y}\n                  width={d.width}\n                  height={d.height}\n                  rx={d.rx}\n                ></rect>\n              ))\n            )}\n          </g> */}\n          <g>\n            {paths.map(({ path, key }, i) => (\n              <path\n                key={key}\n                className={classnames(svgStyles.path, {\n                  [svgStyles.current]: !i,\n                  [svgStyles.previous]: i,\n                })}\n                d={path}\n              />\n            ))}\n          </g>\n          <g>\n            <HistoryEvents scales={scales} dayHeight={dayHeight} />\n          </g>\n          <g>\n            <Annotations\n              currentStart={currentStart}\n              rectWidth={annotationRectWidth}\n              scales={scales}\n              clipPaths={clipPaths}\n            />\n          </g>\n          {/* <g\n            className={classnames(svgStyles.axis, historyStyles.axis)}\n            ref={xAxisRef}\n            transform={`translate(0,${height})`}\n          /> */}\n          <g\n            className={classnames(svgStyles.axis, historyStyles.axis)}\n            ref={yAxisRef}\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n","// see groupby.js\nexport const GroupByOptions = {\n  // TODO - import from server\n  Nothing: undefined,\n  IncidentType: \"type\",\n  ZipCode: \"zip\",\n  Area: \"area\",\n  TimeInterval: \"time\",\n};\n\nexport const AreaAccessors = {\n  ZipCode: ({ derived: { zip } }) => zip,\n  Area: ({ derived: { neighborhoodGroup } }) => neighborhoodGroup,\n  AreaSecondary: ({ derived: { neighborhood } }) => neighborhood,\n};\nAreaAccessors.Default = AreaAccessors.Area;\n","import React from \"react\";\nimport styles from \"./tweetdetails.module.scss\";\nimport { isPhone } from \"../clientUtils\";\nimport { AreaAccessors } from \"../groupingOptions\";\n\nexport const TweetDetails = ({tweet}) => {\n  const { address, units, lat, long } = tweet.derived;\n  const { id_str } = tweet;\n  // const url = `https://data.seattle.gov/resource/fire-911.json?incident_number=${id_str}`;\n  const unitsList = units.split(\" \");\n  const unitsStr = `${unitsList.length} ${\n    unitsList.length === 1 ? \"unit\" : \"units\"\n  } dispatched:`;\n  const area = AreaAccessors.AreaSecondary(tweet);\n  const phone = isPhone();\n\n  const format = (n) => Number.parseFloat(n).toFixed(3);\n  const coordinates = lat ? `${format(lat)}°N ${format(-long)}°W` : \"\";\n  // const incidentLink = <a className={styles.link} href={url}>{id_str}</a>;\n  return (\n    <div className={styles.container}>\n      <div>{address}</div>\n      {phone && <div className={styles.secondary}>{area}</div>}\n      <div className={styles.secondary}>{coordinates}</div>\n      <div>\n        <span>{unitsStr}</span>\n        {unitsList.map((unit) => (\n          <span key={unit} className={styles.unit}>{unit}</span>\n          ))}\n      </div>\n      <div className={styles.secondary}>Incident ID {id_str}</div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport styles from \"./tweet.module.scss\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\nimport { AreaAccessors } from \"../groupingOptions\";\nimport { TweetDetails } from \"./TweetDetails\";\nimport {\n  timeFormatter,\n  isActive,\n  isAtLeastSev1,\n  isAtLeastSev2,\n  isPhone,\n} from \"../clientUtils\";\nimport { SvgDot } from \"./SvgDot\";\nimport classnames from \"classnames\";\n\nexport const TweetModes = {\n  Default: 0,\n  Detailed: 1,\n  GreyedOut: 2,\n};\n\nexport const Tweet = ({ tweet, mode = TweetModes.Default }) => {\n  const { user, setSelection } = useContext(UserContext);\n  const selectedTweet = user[UserContextKeys.SelectedTweet];\n\n  const handleClick = () => {\n    const newSelectedTweet =\n      selectedTweet && selectedTweet.id_str === tweet.id_str ? null : tweet;\n    setSelection(UserContextKeys.SelectedTweet, newSelectedTweet);\n  };\n  const active = isActive(tweet);\n  const sev1 = isAtLeastSev1(tweet);\n  const sev2 = isAtLeastSev2(tweet);\n\n  const area = AreaAccessors.AreaSecondary(tweet);\n\n  const isGreyedOut = mode === TweetModes.GreyedOut;\n  const isDetailed = mode === TweetModes.Detailed;\n  const time = timeFormatter(tweet.derived.timestamp);\n  const phone = isPhone();\n\n  return (\n    <div\n      className={classnames(styles.container, {\n        [styles.detailed]: isDetailed,\n        [styles.greyedOut]: isGreyedOut,\n        [styles.phone]: phone,\n      })}\n      onClick={handleClick}\n    >\n      <div className={styles.tweet}>\n        <div className={styles.details}>\n          <span className={styles.location}>\n            {!phone && area && <span>{area} @ </span>}\n            {time}\n          </span>\n        </div>\n        <div className={classnames({ [styles.active]: active })}>\n          <SvgDot active={active} sev1={sev1} sev2={sev2} />\n          <span> {tweet.derived.description}</span>\n        </div>\n      </div>\n      {isDetailed && <TweetDetails tweet={tweet} />}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport styles from \"./tweets.module.scss\";\nimport { Tweet, TweetModes } from \"./Tweet\";\nimport { UserContext, UserContextKeys } from \"./UserProvider\";\n\nexport const TweetList = ({ tweets = [] }) => {\n  const { user } = useContext(UserContext);\n  const selected = user[UserContextKeys.SelectedTweet];\n\n  const mode = ({ id_str }) =>\n    selected\n      ? id_str === selected.id_str\n        ? TweetModes.Detailed\n        : TweetModes.GreyedOut\n      : TweetModes.Default; // TODO - remove modes\n\n  return (\n    <div className={styles.tweets}>\n      {tweets.map((t) => (\n        <Tweet key={t.id_str} tweet={t} mode={mode(t)} />\n      ))}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\n\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsActive = () => {\n  const { active24 } = useContext(DataContext);\n\n  return <TweetList tweets={active24} />;\n}\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./DataProvider\";\n\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsMajor = () => {\n  const { major24 } = useContext(DataContext);\n\n  return <TweetList tweets={major24} />;\n}\n","import React from \"react\";\nimport { Paragraph } from \"./Paragraph\";\n\n\nexport const Sources = () => {\n  const title = <span id=\"sources\">Data Sources</span>;\n\n  const sources = (\n    <p>\n      The primary data source is{\" \"}\n      <a href=\"http://www2.seattle.gov/fire/realTime911/\">\n        Real-Time 911 Dispatch\n      </a>\n      . Geolocation data for each incident is retrieved from{\" \"}\n      <a href=\"https://data.seattle.gov/Public-Safety/Seattle-Real-Time-Fire-911-Calls/kzjm-xkqj\">\n        data.seattle.gov\n      </a>{\" \"}\n      (refreshed every 5 minutes, with occasional delays). City and neighborhood\n      boundary data is from{\" \"}\n      <a href=\"https://github.com/seattleflu/seattle-geojson/tree/master/seattle_geojsons\">\n        seattleflu/seattle-geojson\n      </a>\n      . Map powered by <a href=\"http://leafletjs.com\">Leaflet</a> via{\" \"}\n      <a href=\"https://react-leaflet.js.org\">react-leaflet</a>. Map tiles\n      provided by{\" \"}\n      <a href=\"https://www.jawg.io/docs/apidocs/static-maps/\">Jawg Maps</a>.\n      Visualizations powered by <a href=\"https://d3js.org\">D3</a>.\n    </p>\n  );\n\n  return <Paragraph title={title} content={sources} />;\n};\n","import React, { useContext } from \"react\";\nimport { StatusContext } from \"./StatusContext\";\nimport { timeFormatter, timeFormatterUserTimezone } from \"../clientUtils\";\nimport styles from \"./freshness.module.scss\";\n\nexport const Freshness = () => {\n  const { status = {} } = useContext(StatusContext);\n\n  if (!status.lastUpdated) {\n    return <span>&nbsp;</span>;\n  }\n\n  const date = new Date(status.lastUpdated);\n  const formatTimezone = \"h:mma z\";\n  const formatNoTimezone = \"h:mma\";\n  const seattle = timeFormatter(date, formatNoTimezone);\n  const seattleTZ = timeFormatter(date, formatTimezone);\n  const user = timeFormatterUserTimezone(date, formatNoTimezone);\n  const userTZ = timeFormatterUserTimezone(date, formatTimezone);\n\n  const same = seattle === user;\n  const displayUser = same ? \"\" : ` (${userTZ})`;\n  const displaySeattle = same ? seattle : seattleTZ;\n\n  return (\n    <span>\n      Data is current as of{\" \"}\n      <span className={styles.time}>{displaySeattle}</span>\n      {displayUser}.\n    </span>\n  );\n};\n","import React from \"react\";\nimport styles from \"./legend.module.scss\";\nimport { SvgDot } from \"./SvgDot\";\n\nexport const Legend = () => (\n  <div className={styles.legend}>\n    <div>\n      <span>Active incident </span>\n      <SvgDot active={true} radius={5} />\n    </div>\n    <div>\n      <span>10 or more units dispatched </span>\n      <SvgDot sev2={true} />\n    </div>\n    <div>\n      <span>5 or more units dispatched </span>\n      <SvgDot sev1={true} />\n    </div>\n    <div>\n      <span>Fewer than 5 units dispatched </span>\n      <SvgDot />\n    </div>\n  </div>\n);\n","import React, { useContext } from \"react\";\nimport { Paragraph } from \"./Paragraph\";\nimport { ThemeContext } from \"./ThemeContext\";\nimport classnames from \"classnames\";\nimport styles from \"./themeswitch.module.scss\";\n\nexport const ThemeSwitch = () => {\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  const themes = [\"light\", \"dusk\", \"dark\"];\n\n  const handleClick = (newTheme) => {\n    setTheme(newTheme);\n  };\n\n  const content = (\n    <p>\n      The color theme changes based on time of day in Seattle. (See this page in\n      {themes.map((t) => (\n        <span key={t}>\n          {\" \"}\n          <button\n            className={classnames(styles.button, {\n              [styles.selected]: t === theme,\n            })}\n            onClick={() => handleClick(t)}\n          >\n            {t}\n          </button>\n        </span>\n      ))})\n    </p>\n  );\n\n  return <Paragraph content={content} />;\n};\n","import React from \"react\";\nimport { Map } from \"./Map\";\nimport { DataProvider } from \"./DataProvider\";\nimport { GroupByArea } from \"./GroupByArea\";\nimport { Header } from \"./Header\";\nimport { Rehoboam } from \"./Rehoboam\";\nimport { Section } from \"./Section\";\nimport { Paragraph } from \"./Paragraph\";\nimport { History } from \"./History\";\nimport { TweetsActive } from \"./TweetsActive\";\nimport { TweetsMajor } from \"./TweetsMajor\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { Sources } from \"./Sources\";\nimport { Freshness } from \"./Freshness\";\nimport { Legend } from \"./Legend\";\nimport { ThemeSwitch } from \"./ThemeSwitch\";\n\nexport const DispatchAll = () => {\n  const intro = (\n    <p>\n      A visualization of Seattle Fire Department 911 dispatch data: real-time\n      view of incidents across the city; per-neighborhood breakdown; overview of\n      the year's cumulative data.{\" \"}\n    </p>\n  );\n\n  const live = (\n    <p>\n      <span>\n        A near-real-time view of today's incidents. All timestamps are in\n        Seattle local time.\n      </span>{\" \"}\n      <Freshness />\n    </p>\n  );\n\n  const todayText = \"\";\n\n  const pastWeek = `The past 7 days of dispatches.`;\n\n  const active = (\n    <p>\n      Select an incident to view dispatch details. If geolocation data is\n      available (typically within 5 minutes) the map will zoom in to the spot.\n    </p>\n  );\n\n  const major = (\n    <p>\n      Today's incidents with <strong>five or more</strong> units dispatched.\n    </p>\n  );\n\n  const areas = \"Select an area to zoom in on today's incidents there.\";\n\n  const history = (\n    <p>\n      Zooming out even further, this view presents a year's worth of data. Lines\n      trace daily dispatch totals for all of Seattle. Circles represent major\n      incidents (those with 10 or more units dispatched).\n    </p>\n  );\n\n  const notes = (\n    <>\n      <ThemeSwitch />\n      <p>\n        Created by <a href=\"https://linkedin.com/in/anarseyf/\">Anar Seyf</a>.\n      </p>\n    </>\n  );\n\n  return (\n    <DataProvider>\n      <Section styleOption={1}>\n        <Paragraph h1=\"Seattle Fire 911 Dispatch\" content={intro} />\n      </Section>\n\n      <Section styleOption={2}>\n        <Paragraph title=\"Live View\" content={live} />\n        <Rehoboam />\n        <Paragraph content={<Legend />} />\n      </Section>\n\n      <Section styleOption={3} edgeToEdge={true}>\n        <Paragraph title=\"\" content={todayText} margin={true} />\n        <ErrorBoundary>\n          <Map />\n        </ErrorBoundary>\n      </Section>\n\n      <Section styleOption={4}>\n        <Paragraph title=\"Active Incidents\" content={active} />\n        <TweetsActive />\n        <Paragraph title=\"Major Incidents\" content={major} />\n        <TweetsMajor />\n      </Section>\n\n      <Section styleOption={5} edgeToEdge={true}>\n        <Paragraph title=\"City Areas\" content={areas} margin={true} />\n        <GroupByArea />\n      </Section>\n\n      <Section styleOption={6}>\n        <Paragraph title=\"Past Week\" content={pastWeek} />\n        <Header />\n      </Section>\n\n      <Section styleOption={7} edgeToEdge={true}>\n        <Paragraph\n          title=\"This Year compared to Last Year\"\n          content={history}\n          margin={true}\n        />\n        <History />\n      </Section>\n\n      <Section styleOption={8}>\n        <Sources />\n        <Paragraph title=\"Notes\" content={notes} />\n      </Section>\n    </DataProvider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { DataContext, currentInterval } from \"./DataProvider\";\n\nimport { UserContextKeys, UserContext } from \"./UserProvider\";\nimport { TweetList } from \"./TweetList\";\n\nexport const TweetsForArea = () => {\n  const { filteredByArea } = useContext(DataContext);\n  const { user } = useContext(UserContext);\n  const filter = user[UserContextKeys.TypeFilter];\n\n  if (!filteredByArea.length) {\n    return null;\n  }\n  const all = currentInterval(filteredByArea).values;\n  const filtered = all.filter(\n    ({ derived: { type } }) => !filter || filter === type\n  );\n\n  return <TweetList tweets={filtered} />;\n}\n","import React from \"react\";\nimport { Paragraph } from \"./Paragraph\";\nimport { Header } from \"./Header\";\nimport { useNeighborhoods } from \"./neighborhoods\";\n\nexport const AreaPageHeader = ({ area }) => {\n  const neighborhoodsMap = useNeighborhoods();\n  const decodedArea = decodeURIComponent(area);\n  const subareas = (\n    <div>\n      {(neighborhoodsMap[decodedArea] || []).map((subarea) => (\n        <div key={subarea}>{subarea}</div>\n      ))}\n    </div>\n  );\n\n  // const [list, setList] = useState([]);\n  // useEffect(() => {\n  //   if (neighborhoodsMap[area]) {\n  //     setList(neighborhoodsMap[area]);\n  //   }\n  // }, [area, neighborhoodsMap]);\n\n  return (\n    <>\n      <Paragraph title={decodedArea} content={subareas} />\n      <Header area={area} />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport { Map } from \"./Map\";\nimport { DataProvider } from \"./DataProvider\";\nimport { TweetsForArea } from \"./TweetsForArea\";\nimport { Paragraph } from \"./Paragraph\";\nimport { Section } from \"./Section\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { Sources } from \"./Sources\";\nimport { AreaPageHeader } from \"./AreaPageHeader\";\nimport paragraphStyles from \"./paragraph.module.scss\";\n\nexport const DispatchArea = ({ area }) => {\n\n  return (\n    <DataProvider filters={{ area }}>\n      <Section styleOption={2}>\n        <Paragraph\n          content={\n            <Link className={paragraphStyles.link} to=\"/\">\n              « main page\n            </Link>\n          }\n        />\n      </Section>\n\n      <Section styleOption={1}>\n        <AreaPageHeader area={area} />\n      </Section>\n\n      <Section styleOption={2} edgeToEdge={true}>\n        <ErrorBoundary>\n          <Map area={area} />\n        </ErrorBoundary>\n      </Section>\n\n      <Section styleOption={1}>\n        <Paragraph title=\"Today's Incidents\" />\n        <TweetsForArea />\n      </Section>\n\n      <Section styleOption={2}>\n        <Sources />\n      </Section>\n    </DataProvider>\n  );\n};\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\nimport { DispatchAll } from \"./dispatch/DispatchAll\";\nimport { DispatchArea } from \"./dispatch/DispatchArea\";\nimport { StatusProvider } from \"./dispatch/StatusContext\";\nimport { UserProvider } from \"./dispatch/UserProvider\";\nimport \"./colors.scss\";\n// import styles from \"./app.module.scss\";\nimport { ThemeProvider } from \"./dispatch/ThemeContext\";\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <ThemeProvider>\n        <StatusProvider>\n          <Router>\n            <UserProvider path=\"/\">\n              <DispatchAll default />\n            </UserProvider>\n            <UserProvider path=\":area\">\n              <DispatchArea path=\"/\" />\n            </UserProvider>\n          </Router>\n        </StatusProvider>\n      </ThemeProvider>\n    </React.StrictMode>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport const register = (config) => {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport const unregister = () => {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./custom.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"rehoboam_app__2vSZA\",\"light\":\"rehoboam_light__rziQr\",\"dusk\":\"rehoboam_dusk__3zUc9\",\"dark\":\"rehoboam_dark__2QkVw\",\"container\":\"rehoboam_container__28M8-\",\"counter\":\"rehoboam_counter__33zQ-\",\"path\":\"rehoboam_path__2oGje\",\"maincircle\":\"rehoboam_maincircle__UPFVE\",\"events\":\"rehoboam_events__24i6B\",\"outer\":\"rehoboam_outer__i-sFc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"tweet_app__1YKqt\",\"light\":\"tweet_light__2q2wS\",\"dusk\":\"tweet_dusk__2D2WU\",\"dark\":\"tweet_dark__1Q5ft\",\"container\":\"tweet_container__2cPfJ\",\"detailed\":\"tweet_detailed__1zw6b\",\"phone\":\"tweet_phone__2hHRD\",\"greyedOut\":\"tweet_greyedOut__187c4\",\"tweet\":\"tweet_tweet__2okc-\",\"active\":\"tweet_active__1wASL\",\"details\":\"tweet_details__165yi\",\"units\":\"tweet_units__2ZVmK\",\"location\":\"tweet_location__26Q8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"section_app__2Vo_9\",\"light\":\"section_light__3Rzwq\",\"dusk\":\"section_dusk__2n8zA\",\"dark\":\"section_dark__3d7sN\",\"section\":\"section_section__1TT8J\",\"content\":\"section_content__32e_z\",\"phone\":\"section_phone__C_IbC\",\"styleDefault\":\"section_styleDefault__1fobi\",\"style1\":\"section_style1__-PHu2\",\"style2\":\"section_style2__3JfYX\",\"style3\":\"section_style3__120EE\",\"style4\":\"section_style4__15b6S\",\"style5\":\"section_style5__1cXrW\",\"style6\":\"section_style6__2Pnph\",\"style7\":\"section_style7__2TUBO\",\"style8\":\"section_style8__2W_h1\",\"styleMap\":\"section_styleMap__2ZHhK\",\"subcontent\":\"section_subcontent__1yzVR\",\"edgeToEdge\":\"section_edgeToEdge__28iHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"history_app__3ezRX\",\"light\":\"history_light__2fQs9\",\"dusk\":\"history_dusk__1n3Kx\",\"dark\":\"history_dark__2VOIx\",\"container\":\"history_container__jp729\",\"svg\":\"history_svg__wHz8f\",\"previous\":\"history_previous__1tjyT\",\"current\":\"history_current__2e2uB\",\"years\":\"history_years__2UEbj\",\"left\":\"history_left__YNLcK\",\"right\":\"history_right___nK7k\",\"axis\":\"history_axis__1LX0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"paragraph_app__SRHrQ\",\"light\":\"paragraph_light__MGZls\",\"dusk\":\"paragraph_dusk__2Qeix\",\"dark\":\"paragraph_dark__20gM1\",\"paragraph\":\"paragraph_paragraph__2KRp8\",\"link\":\"paragraph_link__2D61j\",\"text\":\"paragraph_text__1NbBg\",\"margin\":\"paragraph_margin__uTVtm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"chart_app__NgggY\",\"light\":\"chart_light__26OQU\",\"dusk\":\"chart_dusk__tXZzv\",\"dark\":\"chart_dark__2_Xz6\",\"container\":\"chart_container__3RTag\",\"header\":\"chart_header__3gCPW\",\"svg\":\"chart_svg__pP08z\",\"total\":\"chart_total__qkQSI\",\"title\":\"chart_title__2BYUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"topline_app__oxYOD\",\"light\":\"topline_light__3Wkuy\",\"dusk\":\"topline_dusk__3oZf9\",\"dark\":\"topline_dark__2sg1O\",\"topline\":\"topline_topline__3XNKt\",\"phone\":\"topline_phone__2VHBk\",\"text\":\"topline_text__2_5SM\",\"date\":\"topline_date__2k6ha\",\"total\":\"topline_total__b2Zkr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"tweetdetails_app__2e3dp\",\"light\":\"tweetdetails_light__1bFOl\",\"dusk\":\"tweetdetails_dusk__CdslP\",\"dark\":\"tweetdetails_dark__1vbtk\",\"container\":\"tweetdetails_container__1rcoE\",\"explanation\":\"tweetdetails_explanation__3lEx4\",\"secondary\":\"tweetdetails_secondary__sgHzU\",\"unit\":\"tweetdetails_unit__33Rog\",\"link\":\"tweetdetails_link__23U3X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"map_app__QgyhH\",\"light\":\"map_light__1l7Uw\",\"dusk\":\"map_dusk__1Kp5m\",\"dark\":\"map_dark__3mN3y\",\"container\":\"map_container__1WM_n\",\"phone\":\"map_phone__1XpbO\",\"area\":\"map_area__1ZdwJ\",\"pane\":\"map_pane__g9Le7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"areashape_app__1jcgu\",\"light\":\"areashape_light__2vos_\",\"dusk\":\"areashape_dusk__1spjy\",\"dark\":\"areashape_dark__3xOoz\",\"container\":\"areashape_container__3TA09\",\"phone\":\"areashape_phone__ZKBlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"spark_app__36AlW\",\"light\":\"spark_light__2xEJ2\",\"dusk\":\"spark_dusk__3_z2Z\",\"dark\":\"spark_dark__kLY0-\",\"container\":\"spark_container__20mVH\",\"total\":\"spark_total__2Kxtk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"themeswitch_app__2HrZq\",\"light\":\"themeswitch_light__3BWCp\",\"dusk\":\"themeswitch_dusk__1o_VU\",\"dark\":\"themeswitch_dark__2wyZC\",\"button\":\"themeswitch_button__EJKnS\",\"selected\":\"themeswitch_selected__3Zb_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"svg_app__NZ3Nl\",\"light\":\"svg_light__1tyT3\",\"dusk\":\"svg_dusk__yqXl9\",\"dark\":\"svg_dark__mmljC\",\"axis\":\"svg_axis__bET8j\",\"path\":\"svg_path__EmZTS\",\"highlight\":\"svg_highlight__1dzK0\",\"previous\":\"svg_previous__19uFf\",\"current\":\"svg_current__mnSmX\",\"event\":\"svg_event__3Oor8\",\"outer\":\"svg_outer__1Nag9\",\"container\":\"svg_container__2ylni\",\"live\":\"svg_live__2Jj88\",\"now\":\"svg_now__2CbCS\",\"pulse\":\"svg_pulse__2GGpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"annotations_app__1PGHU\",\"light\":\"annotations_light__3wl8i\",\"dusk\":\"annotations_dusk__1lYhr\",\"dark\":\"annotations_dark__2aqhQ\",\"annotations\":\"annotations_annotations__1BK52\",\"line\":\"annotations_line__I-f5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tweets\":\"tweets_tweets__PhO0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"freshness_app__1pyQO\",\"light\":\"freshness_light__35wVx\",\"dusk\":\"freshness_dusk__7082x\",\"dark\":\"freshness_dark__TBbwG\",\"time\":\"freshness_time__3D6Db\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"legend_app__3eMcH\",\"light\":\"legend_light__1wq_m\",\"dusk\":\"legend_dusk__1H7LY\",\"dark\":\"legend_dark__7TXq5\",\"legend\":\"legend_legend__1pAdz\"};"],"sourceRoot":""}